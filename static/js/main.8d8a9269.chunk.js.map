{"version":3,"sources":["components/ReserveModalComponent.jsx","components/SaveModalComponent.jsx","components/HomeComponent.jsx","components/ProfileComponent.jsx","shared/firebase.js","shared/firebaseConfig.js","redux/ActionCreators.jsx","redux/ActionTypes.jsx","shared/validators.js","shared/MessageTypes.js","components/RegisterComponent.jsx","components/LoginComponent.jsx","components/SearchComponent.jsx","components/ImageUploadComponent.jsx","components/NewPostComponent.jsx","components/HeaderComponent.jsx","components/SideBarComponent.jsx","components/PostListComponent.jsx","components/MainComponent.jsx","redux/items.jsx","redux/users.jsx","redux/InitStates.jsx","App.jsx","redux/configureStore.jsx","serviceWorker.jsx","index.jsx"],"names":["ReserveModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","toggle","bind","assertThisInitialized","onSubmit","setState","event","preventDefault","reserveItem","item","id","userInfo","name","email","tel","react_default","a","createElement","reactstrap_es","block","color","className","onClick","isOpen","seller","Component","ModalExample","React","RenderCard","_ref","users","top","width","src","picture","alt","style","wordWrap","price","dist_default","date","time","format","detail","xl","size","offset","isLoggedIn","username","ReserveModalComponent","RenderReserve","SaveModalComponent","RenderSave","Home","key","_this2","setTimeout","forceUpdate","alert","_this3","sellItems","sort","b","Date","filter","reserved","isReserved","map","Profile","values","StoreUserInfo","password","es","avatar","round","model","htmlFor","xs","lib","text","value","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","itemsRef","ref","usersRef","unreserve","type","payload","reserve","addItems","items","itemsLoading","itemsFailed","err","fetchUserInfo","dispatch","child","once","then","snapshot","val","posts","hasOwnProperty","push","loginUser","actions","change","doesUsernameExist","callback","Promise","checkUsername","message","required","validator","isEmpty","ignore_whitespace","normalizePhone","onlyNums","replace","length","concat","slice","Register","formatPhoneNumbers","target","placeholder","validators","show","messages","asyncValidators","isEmail","onChange","validateOn","updateOn","isMobilePhone","connect","resetRegisterForm","reset","phone","update","isLoginValid","Login","button","undefined","isSideBar","NavLink","to","background","RegisterComponent","SearchComponent","handleChange","filterResults","ImageUpload","onPreviewDrop","files","reader","FileReader","readAsDataURL","onloadend","curPath","result","preview","handleCheck","deleteFile","file","el","some","previewStyle","display","height","Fragment","dist_es","accept","onDrop","react","i","console","log","isNumber","isNaN","Number","checked","NewPost","toggleModal","handleSubmit","resetNewPostForm","postItem","itemName","parseInt","itemPrice","toISOString","itemDes","len","md","minLength","maxLength","textarea","rows","ImageUploadComponent","check","checkbox","Header","isModalOpen","toggleSideNav","dark","fixed","navbar","components_SearchComponent","fetchItems","NewPostComponent","LoginComponent","loginError","SideBar","logoutUser","avatarSrc","BurgerMenu","divStyle","padding","margin","RenderListItem","renderOngoing","unreserveItem","reservedTexts","phoneNum","phoneButton","Button_default","href","emailButton","text-transform","ListItem_default","alignItems","ListItemAvatar_default","ListItemText_default","primary","Typography_default","component","variant","secondary","bsStyle","bsSize","PostList","renderItem","filterCriteria","arr","reservedItems","indexOf","title","List_default","Main","loggedIn","isSideNavOpen","handleStateChange","SideBarComponent","noOverlay","pageWrapId","outerContainerId","onStateChange","HeaderComponent","Switch","Route","exact","path","HomeComponent","ProfileComponent","PostListComponent","Redirect","withRouter","error","addItem","catch","searchText","maxResults","arguments","rawItems","Error","normalizer","setPending","checkLoginInfo","valid","setValidity","isLoading","origSellItems","action","objectSpread","toLowerCase","includes","keywords","Users","InitialLogin","InitialRegister","InitialPost","pictures","agreeTerms","InitialProfile","store","createStore","combineReducers","createForms","newPost","login","register","profile","applyMiddleware","thunk","logger","App","react_redux_es","BrowserRouter","basename","process","MainComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d8a9269.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ReserveModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        this.toggle();\n        this.props.reserveItem(\n            this.props.item.id,\n            this.props.userInfo.name,\n            this.props.userInfo.email,\n            this.props.userInfo.tel\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block color=\"primary\" className=\"item-button\" onClick={this.toggle}>\n                    Reserve\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Reserve Item</ModalHeader>\n                    <ModalBody>\n                        You are about to reserve the item \"{this.props.item.name}\" from {this.props.item.seller.name}.<br />\n                        Are you sure?\n                        <br /> <br />\n                        You will be able to see the seller's contact information and continue with this deal under the \"\n                        <span className=\"fa fa-exchange fa-lg fa-fw\" /> Ongoing\" section in the sidebar.\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.onSubmit}>\n                            Confirm\n                        </Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>\n                            Cancel\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ReserveModal;\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalExample extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block color=\"danger\" className=\"item-button\" onClick={this.toggle}>\n                    Save\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Save Item</ModalHeader>\n                    <ModalBody>\n                        You are about to save the item \"{this.props.item.name}\" from {this.props.item.seller.name}.<br />\n                        You will be able to view this item under \"<span className=\"fa fa-heart-o fa-lg fa-fw\" /> Saved Items\"\n                        in the sidebar.\n                        <br /> <br />\n                        Saving will not reserve this item for you.\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.toggle}>\n                            Confirm\n                        </Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>\n                            Cancel\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalExample;\n","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardDeck, CardSubtitle, Row, Col } from 'reactstrap';\nimport ReserveModal from './ReserveModalComponent';\nimport SaveModal from './SaveModalComponent';\nimport Moment from 'react-moment';\nimport { setTimeout } from 'timers';\n\nfunction RenderReserve(users, item, reserveItem) {\n    if (!users.isLoggedIn || users.username === item.seller.username) {\n        return <div />;\n    } else {\n        return <ReserveModal userInfo={users.userInfo} item={item} reserveItem={reserveItem} />;\n    }\n}\n\nfunction RenderSave(users, item) {\n    if (!users.isLoggedIn || users.username === item.seller.username) {\n        return <div />;\n    } else {\n        return <SaveModal item={item} />;\n    }\n}\n\nfunction RenderCard({ item, reserveItem, users }) {\n    return (\n        <Card>\n            <CardImg top width=\"100%\" className=\"card-img-top img-fluid\" src={item.picture} alt={item.name} />\n            <CardBody>\n                <CardTitle className=\"card-title\">\n                    <span style={{ width: '27.3vw', wordWrap: 'break-word' }}> {item.name} </span>\n                    <span> ${item.price}</span>\n                </CardTitle>\n                <CardSubtitle>\n                    {item.seller.name}\n                    <br />\n                    <Moment date={item.time} format=\"MMM D YYYY HH:MM\" />\n                </CardSubtitle>\n                <CardText style={{ width: '27.3vw', wordWrap: 'break-word' }}>{item.detail}</CardText>\n                <Row>\n                    <Col xl={{ size: 4, offset: 1 }}>{RenderReserve(users, item, reserveItem)}</Col>\n                    <Col xl={{ size: 4, offset: 2 }}>{RenderSave(users, item)}</Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.reserveItem = this.reserveItem.bind(this);\n    }\n\n    reserveItem(key, name, email, tel) {\n        this.props.reserveItem(key, name, email, tel);\n        setTimeout(() => {\n            this.forceUpdate();\n            alert('Reservation successful!');\n        }, 500);\n    }\n\n    render() {\n        const sellItems = this.props.sellItems\n            .sort((a, b) => new Date(b.time) - new Date(a.time))\n            .filter((item) => !item.reserved.isReserved)\n            .map((item) => {\n                return (\n                    <div key={item.id} className=\"row align-items-start\">\n                        <div className=\"col-12 col-md m-1\">\n                            <RenderCard item={item} reserveItem={this.reserveItem} users={this.props.users} />\n                        </div>\n                    </div>\n                );\n            });\n\n        return (\n            <div className=\"container\">\n                <div className=\"row start-of-home\">\n                    <div className=\"col-12\">\n                        <h3>Items On Sale</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <CardDeck>{sellItems}</CardDeck>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Control } from 'react-redux-form';\nimport { Form, Label, Col, Row } from 'reactstrap';\nimport Avatar from 'react-avatar';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    onSubmit(values) {\n        this.props.StoreUserInfo(\n            values.name,\n            this.props.userInfo.username,\n            this.props.userInfo.password,\n            values.email,\n            values.tel\n        );\n    }\n\n    render() {\n        if (!this.props.isLoggedIn) {\n            return (\n                <div className=\"container start-of-home\">\n                    <div className=\"col-12\">\n                        <h3>Please Login First</h3>\n                        <hr />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row start-of-home\">\n                    <div className=\"col-10 justify-content-center align-self-center\">\n                        <h1>Hello, {this.props.userInfo.name}</h1>\n                    </div>\n                    <div className=\"col-2\">\n                        <Avatar size={100} src={this.props.userInfo.avatar} round={true} />\n                    </div>\n                    <div className=\"col-12\">\n                        <hr />\n                    </div>\n                </div>\n                <Form model=\"profile\" onSubmit={(values) => this.onSubmit(values)}>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"name\" xs={{ size: 1, offset: 1 }}>\n                            <span className=\"fa fa-id-card-o fa-lg\" />\n                        </Label>\n                        <Col xs={9}>\n                            <Control.text\n                                model=\".name\"\n                                id=\"name\"\n                                name=\"name\"\n                                value={this.props.userInfo.name}\n                                className=\"form-control\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"email\" xs={{ size: 1, offset: 1 }}>\n                            <span className=\"fa fa-envelope-o fa-lg\" />\n                        </Label>\n                        <Col xs={9}>\n                            <Control.text\n                                model=\".email\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={this.props.userInfo.email}\n                                className=\"form-control\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"tel\" xs={{ size: 1, offset: 1 }}>\n                            <span className=\"fa fa-phone fa-lg\" />\n                        </Label>\n                        <Col xs={9}>\n                            <Control.text\n                                model=\".tel\"\n                                id=\"tel\"\n                                name=\"tel\"\n                                value={this.props.userInfo.tel}\n                                className=\"form-control\"\n                            />\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport { config } from './firebaseConfig';\n\nfirebase.initializeApp(config);\nvar database = firebase.database();\n\nexport const itemsRef = database.ref('bruinmart/items/');\nexport const usersRef = database.ref('bruinmart/users/');\n","export const config = {\n    apiKey: 'AIzaSyDpr5SspydURpwNzpjr2F9kmC1WLwQaH9w',\n    authDomain: 'jerrylzylzy.firebaseapp.com',\n    databaseURL: 'https://jerrylzylzy.firebaseio.com',\n    projectId: 'jerrylzylzy',\n    storageBucket: 'jerrylzylzy.appspot.com',\n    messagingSenderId: '1089192741461'\n};","import * as ActionTypes from './ActionTypes';\nimport { itemsRef, usersRef } from '../shared/firebase';\nimport { actions } from 'react-redux-form';\n\nexport const filterResults = (searchText, maxResults = 20) => ({\n    type: ActionTypes.FILTER,\n    payload: {\n        searchText: searchText,\n        maxResults: maxResults\n    }\n});\n\n//  This is a thunk\n\nexport const fetchItems = () => (dispatch) => {\n    dispatch(itemsLoading(true));\n\n    return itemsRef\n        .once('value')\n        .then((snapshot) => {\n            var rawItems = snapshot.val();\n            if (rawItems === null) throw Error('Fetch failed.');\n            var sellItems = [];\n            for (var key in rawItems) {\n                if (rawItems.hasOwnProperty(key)) {\n                    var item = rawItems[key];\n                    item.id = key;\n                    sellItems.push(item);\n                }\n            }\n            dispatch(addItems(sellItems));\n        })\n        .catch((error) => dispatch(itemsFailed(error.message)));\n};\n\nexport const reserveItem = (key, name, email, tel) => (dispatch) => {\n    const reserved = {\n        isReserved: true,\n        name,\n        email,\n        tel\n    };\n    return itemsRef\n        .child('/' + key)\n        .update({\n            reserved\n        })\n        .then((error) => {\n            if (error) throw error;\n            dispatch(reserve(key, reserved));\n        })\n        .catch((error) => {\n            dispatch(itemsFailed(error.message));\n            alert('Reserved failed! Error: ' + error.message);\n        });\n};\n\nexport const unreserveItem = (key) => (dispatch) => {\n    return itemsRef\n        .child(`/${key}/reserved/`)\n        .update({ isReserved: false })\n        .then((error) => {\n            if (error) throw error;\n            console.log('error checking');\n            dispatch(unreserve(key));\n        })\n        .catch((error) => {\n            dispatch(itemsFailed(error.message));\n        });\n};\n\nexport const unreserve = (key) => ({\n    type: ActionTypes.UNRESERVE_ITEM,\n    payload: key\n});\n\nexport const reserve = (key, reserved) => ({\n    type: ActionTypes.RESERVE_ITEM,\n    payload: {\n        key,\n        reserved\n    }\n});\n\nexport const addItems = (items) => ({\n    type: ActionTypes.ADD_ITEMS,\n    payload: items\n});\n\nexport const itemsLoading = () => ({\n    type: ActionTypes.ITEMS_LOADING\n});\n\nexport const itemsFailed = (err) => ({\n    type: ActionTypes.ITEMS_FAILED,\n    payload: err\n});\n\nexport const addItem = (item) => ({\n    type: ActionTypes.ADD_ITEM,\n    payload: item\n});\n\nexport const addItemToUser = (itemKey) => ({\n    type: ActionTypes.ADD_ITEM_USER,\n    payload: itemKey\n});\n\nexport const postItem = (item) => (dispatch) => {\n    return itemsRef\n        .push(item)\n        .then(function(snapshot) {\n            item.id = snapshot.key;\n            dispatch(addItem(item));\n            usersRef.child(item.seller.username + '/posts/').push(item.id);\n            dispatch(addItemToUser(item.id));\n            alert('Post Successful!');\n        })\n        .catch((error) => alert('Post failed! Error: ' + error.message));\n};\n\nexport const fetchUserInfo = (username) => (dispatch) => {\n    return usersRef\n        .child(username)\n        .once('value')\n        .then((snapshot) => {\n            var userInfo = snapshot.val();\n            var posts = [];\n            for (var key in userInfo.posts) {\n                if (userInfo.posts.hasOwnProperty(key)) {\n                    posts.push(userInfo.posts[key]);\n                }\n            }\n            userInfo.posts = posts;\n            dispatch(loginUser(username, userInfo));\n            dispatch(actions.change('profile.email', userInfo.email));\n            dispatch(actions.change('profile.tel', userInfo.tel));\n        });\n};\n\nexport const loginFailed = (error) => ({\n    type: ActionTypes.LOG_IN_FAILED,\n    payload: error\n});\n\n//actions for login logout\nexport const loginUser = (username, userInfo) => {\n    return {\n        type: ActionTypes.LOG_IN,\n        username: username,\n        userInfo: userInfo\n    };\n};\n\nexport const logoutUser = () => ({\n    type: ActionTypes.LOG_OUT\n});\n\nexport const StoreUserInfo = (name, username, password, email, phone) => (dispatch) => {\n    return usersRef\n        .child(username)\n        .update({\n            name: name,\n            password: password,\n            email: email,\n            tel: phone,\n            avatar: 'assets/images/joe_bruin.jpg',\n            posts: []\n        })\n        .then(() => {\n            dispatch(fetchUserInfo(username));\n        });\n};\n\nexport const signup = (username, password) => {\n    return {\n        type: ActionTypes.SIGN_UP,\n        username: username,\n        password: password\n    };\n};\n","export const FILTER = 'FILTER';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\nexport const ITEMS_FAILED = 'ITEMS_FAILED';\nexport const ADD_ITEMS = 'ADD_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const POST_ITEMS = 'POST_ITEMS';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const SIGN_UP = 'SIGN_UP';\nexport const ADD_ITEM_USER = 'ADD_ITEM_USER';\nexport const RESERVE_ITEM = 'RESERVE_ITEM';\nexport const GET_USER_POST = 'GET_USER_POST';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\nexport const UNRESERVE_ITEM = 'UNRESERVE_ITEM';\n","import * as MessageTypes from './MessageTypes';\nimport { usersRef } from './firebase';\nimport validator from 'validator';\n\nexport const checkLoginInfo = (username, password) => {\n    return new Promise((callback) => {\n        usersRef\n            .child(username)\n            .once('value')\n            .then((snapshot) => {\n                var userInfo = snapshot.val();\n                if (userInfo === null) {\n                    callback(MessageTypes.USER_NOT_EXIST);\n                } else if (userInfo.password !== password) {\n                    callback(MessageTypes.PASSWORD_WRONG);\n                } else {\n                    callback(MessageTypes.SUCCESS);\n                }\n            });\n    });\n};\n\nconst checkUsername = (username) => {\n    return new Promise((callback) => {\n        usersRef\n            .child(username)\n            .once('value')\n            .then((snapshot) => {\n                var userInfo = snapshot.val();\n                if (userInfo === null) {\n                    callback(MessageTypes.USER_NOT_EXIST);\n                } else {\n                    callback(MessageTypes.USER_EXISTS);\n                }\n            });\n    });\n};\n\nexport const doesUsernameExist = (username, callback) => {\n    checkUsername(username).then((message) => {\n        callback(message === MessageTypes.USER_NOT_EXIST);\n    });\n};\n\nexport const required = (val) =>\n    val &&\n    !validator.isEmpty(val, {\n        ignore_whitespace: true\n    });\n","export const SUCCESS = 'SUCCESS';\nexport const USER_EXISTS = 'USER_EXISTS';\nexport const USER_NOT_EXIST = 'USER_NOT_EXIST';\nexport const PASSWORD_WRONG = 'PASSWORD_WRONG';","import React, { Component } from 'react';\nimport { Button, ModalHeader, Modal, ModalBody, Label, Col, Row } from 'reactstrap';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\nimport { StoreUserInfo } from '../redux/ActionCreators';\nimport { connect } from 'react-redux';\nimport validator from 'validator';\nimport { required, doesUsernameExist } from '../shared/validators';\n\nconst normalizePhone = (value) => {\n    if (!value) {\n        return value;\n    }\n\n    const onlyNums = value.replace(/[^\\d]/g, '');\n    if (onlyNums.length <= 3) {\n        return onlyNums;\n    }\n    if (onlyNums.length <= 7) {\n        return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3)}`;\n    }\n    return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3, 6)}-${onlyNums.slice(6, 10)}`;\n};\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    formatPhoneNumbers(event) {\n        this.props.formatPhoneNumbers(event.target.value, normalizePhone);\n    }\n\n    onSubmit(values) {\n        this.toggle();\n        this.props.StoreUserInfo(values.name, values.username, values.password, values.email, values.tel);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block className=\"item-button\" onClick={this.toggle} color=\"secondary\">\n                    Register\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"register\" onSubmit={(values) => this.onSubmit(values)}>\n                            {/* <Row>\n                                <Col xs={{size: 4, offset: 3}}>\n                                    <h1 className=\"justify-content-center align-self-center\">\n                                        <strong>BruinMart</strong>\n                                    </h1>\n                                </Col>\n                            </Row> */}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"name\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-id-card-o fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.text\n                                        model=\".name\"\n                                        id=\"name\"\n                                        name=\"name\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"username\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-user fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.text\n                                        model=\".username\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        placeholder=\"Username\"\n                                        className=\"form-control\"\n                                        asyncValidators={{\n                                            doesUsernameExist\n                                        }}\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".username\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            doesUsernameExist: 'Username already exist in the database. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"password\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-lock fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.password\n                                        model=\".password\"\n                                        id=\"password\"\n                                        name=\"password\"\n                                        placeholder=\"Password\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".password\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-envelope-o fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.text\n                                        model=\".email\"\n                                        id=\"email\"\n                                        name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isEmail: (val) => val && validator.isEmail(val)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isEmail: \"Wrong format. Email's format is ab@cd.ef\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"tel\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-phone fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.text\n                                        model=\".tel\"\n                                        id=\"tel\"\n                                        name=\"tel\"\n                                        placeholder=\"Phone Number\"\n                                        className=\"form-control\"\n                                        onChange={(event) => this.formatPhoneNumbers(event)}\n                                        validateOn=\"blur\"\n                                        updateOn=\"blur\"\n                                        validators={{\n                                            required,\n                                            isMobilePhone: (val) => val && validator.isMobilePhone(val, 'en-US')\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".tel\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isMobilePhone: \"Phone number's format is wrong. Please enter 10 digits.\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={{ size: 4, offset: 7 }}>\n                                    <Button block type=\"submit\" value=\"submit\" color=\"primary\">\n                                        Register\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    resetRegisterForm: () => {\n        dispatch(actions.reset('register'));\n    },\n    StoreUserInfo: (name, username, password, email, phone) => {\n        dispatch(StoreUserInfo(name, username, password, email, phone));\n    }\n});\n\nexport default connect(\n    (state) => {\n        return {};\n    },\n    mapDispatchToProps\n)(Register);\n","import React, { Component } from 'react';\nimport { Button, ModalHeader, Modal, ModalBody, Label, Row, Col } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { NavLink } from 'react-router-dom';\nimport Register from './RegisterComponent';\nimport { required } from '../shared/validators';\n\nconst isLoginValid = () => true;\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(values) {\n        this.props.fetchUserInfo(values.username, values.password);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        const button =\n            this.props.isSideBar !== undefined ? (\n                <NavLink className=\"nav-link\" to=\"/home\" onClick={this.toggle}>\n                    <h4>Please Login</h4>\n                </NavLink>\n            ) : (\n                <Button style={{ background: 'transparent' }} onClick={this.toggle}>\n                    <span className=\"fa fa-sign-in fa-lg fa-fw\" />\n                </Button>\n            );\n        return (\n            <div className=\"container\">\n                {button}\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"login\" onSubmit={(values) => this.onSubmit(values)}>\n                            {/* <Row>\n                                <Col xs={{size: 4, offset: 3}}>\n                                    <h1 className=\"justify-content-center align-self-center\">\n                                        <strong>BruinMart</strong>\n                                    </h1>\n                                </Col>\n                            </Row> */}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"username\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-user fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={8}>\n                                    <Control.text\n                                        model=\".username\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        placeholder=\"Username\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isLoginValid\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".username\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isLoginValid: 'Username does not exist. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"password\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-lock fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={8}>\n                                    <Control.password\n                                        model=\".password\"\n                                        id=\"password\"\n                                        name=\"password\"\n                                        placeholder=\"Password\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isLoginValid\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".password\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isLoginValid: 'Password is incorrect. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xl={{ size: 3, offset: 2 }}>\n                                    <Register formatPhoneNumbers={this.props.formatPhoneNumbers} />\n                                </Col>\n                                <Col xl={{ size: 3, offset: 2 }}>\n                                    <Button block className=\"item-button\" value=\"submit\" color=\"primary\">\n                                        Login\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport '../SearchInput.css';\n\nclass SearchComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.filterResults(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"component-search-input\">\n                <div>\n                    <input placeholder=\"Search Here\" style={{ color: 'white' }} onChange={this.handleChange} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchComponent;\n","import React, { Component, Fragment } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Button } from 'reactstrap';\n\nclass ImageUpload extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            files: []\n        };\n\n        this.deleteFile = this.deleteFile.bind(this);\n        this.onPreviewDrop = this.onPreviewDrop.bind(this);\n    }\n\n    handleCheck(val) {\n        return this.state.files.some(item => val.name === item.name);\n    }\n\n    onPreviewDrop = (files) => {\n        var reader = new FileReader();\n        reader.readAsDataURL(files[0]);\n        reader.onloadend=()=>{\n            const curPath = reader.result;\n            files[0].preview=curPath;\n            if(this.handleCheck(files[0])){\n                alert(\"Please do not upload the same image twice!\");\n            }\n            else{\n                this.setState({\n                    files: this.state.files.concat(files[0])\n                });\n            }\n        }\n    };\n\n    deleteFile = (file)=>{\n        this.setState({\n            files: this.state.files.filter(el => el!==file )\n        });\n    }\n\n    render() {\n        const previewStyle = {\n            display: 'inline',\n            width: 100,\n            height: 100\n        };\n\n        return (\n            <>\n                <Dropzone className=\"dropzone\" accept=\"image/*\" onDrop={this.onPreviewDrop}>\n                    <div className=\"upload-box\">Drag your image here or click the box to browse your local files.</div>\n                </Dropzone>\n                {this.state.files.length > 0 && (\n                    <Fragment>\n                        <h4>Uploaded Pictures</h4>\n                        {this.state.files.map((file,i) => (\n                            <div key={i}>\n                            <img alt={file.name} key={file.preview} src={file.preview} style={previewStyle} />\n                            {file.name}{' '}\n                            <Button value=\"delete\" onClick={()=>this.deleteFile(file)}>delete</Button>\n                            </div>\n                        ))}\n                        {console.log(this.state.files)}\n                    </Fragment>\n                )}\n            </>\n        );\n    }\n}\n\nexport default ImageUpload;\n","import React from 'react';\nimport { Button, Label, FormText, Modal, ModalHeader, ModalBody, Col, Row } from 'reactstrap';\nimport ImageUpload from './ImageUploadComponent';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => !val || val.length >= len;\nconst isNumber = (val) => !isNaN(Number(val));\nconst checked = (val) => val && val === true;\nclass NewPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    handleSubmit(values) {\n        this.props.resetNewPostForm();\n        this.props.postItem({\n            name: values.itemName,\n            price: parseInt(values.itemPrice),\n            picture:\n                'https://s7d4.scene7.com/is/image/roomandboard/?layer=0&size=498,400&scl=1&src=964101_wood_W&layer=comp&$prodzoom0$',\n            reserved: false,\n            seller: {\n                name: this.props.users.userInfo.name,\n                username: this.props.users.username,\n                email: this.props.users.userInfo.email,\n                tel: this.props.users.userInfo.tel\n            },\n            time: new Date().toISOString(),\n            detail: values.itemDes === '' ? 'No more details provided' : values.itemDes\n        });\n        this.toggleModal();\n    }\n\n    render() {\n        return (\n            <div>\n                <Button style={{ background: 'transparent' }} onClick={this.toggleModal}>\n                    <span className=\"fa fa-plus fa-lg fa-fw\" />\n                </Button>\n                <Modal className=\"modal-lg\" isOpen={this.state.modal} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>New Post</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"newPost\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".itemName\" md={1}>\n                                    <b>Name</b>\n                                </Label>\n                                <Col md={{ size: 5, offset: 1 }}>\n                                    <Control.text\n                                        model=\".itemName\"\n                                        id=\"itemName\"\n                                        name=\"itemName\"\n                                        placeholder=\"Enter the name of the item you want to sell\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".itemName\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            minLength: 'Must be greater than 2 characters. ',\n                                            maxLength: 'Must be 15 characters or less. '\n                                        }}\n                                    />\n                                </Col>\n                                <Label htmlFor=\".itemPrice\" md={1}>\n                                    <b>Price</b>\n                                </Label>\n                                {/* <Col md={0.3}><span className=\"fa fa-dollar fa-lg fa-fw\" /></Col> */}\n                                <Col md={3}>\n                                    <Control.text\n                                        model=\".itemPrice\"\n                                        id=\"itemPrice\"\n                                        name=\"itemPrice\"\n                                        placeholder=\"Enter your price in US dollars\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".itemPrice\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isNumber: 'Has to be a number. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".itemDes\" md={2}>\n                                    <b>Item Description</b>\n                                </Label>\n                                <Col md={9}>\n                                    <Control.textarea\n                                        model=\".itemDes\"\n                                        id=\"itemDes\"\n                                        name=\"itemDes\"\n                                        placeholder=\"Enter a few lines to describe your item and outline anything potential buyers may need to know\"\n                                        className=\"form-control\"\n                                        rows=\"4\"\n                                    />\n                                </Col>\n                            </Row>\n                            {/* <FormGroup>\n          <Label htmlFor=\"exampleSelectMulti\">Select Multiple</Label>\n          <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple>\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </Input>\n        </FormGroup> */}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".pictures\" md={2}>\n                                    <b>Pictures</b>\n                                </Label>\n                                {/* <Input type=\"file\" name=\"file\" id=\"exampleFile\" /> */}\n                                <Col md={9}>\n                                    <FormText color=\"muted\">Upload a picture for your item here.</FormText>\n                                    <ImageUpload name=\"itemPic\" id=\"itemPic\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            {/* <FormGroup tag=\"fieldset\">\n          <legend>Radio Buttons</legend>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Option one is this and that—be sure to include why it's great\n            </Label>\n          </FormGroup>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Option two can be something else and selecting it will deselect option one\n            </Label>\n          </FormGroup>\n          <FormGroup check disabled>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" disabled />{' '}\n              Option three is disabled\n            </Label>\n          </FormGroup>\n        </FormGroup> */}\n                            <Row className=\"form-group\">\n                                <Col md={{ offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check md={9}>\n                                            <Control.checkbox\n                                                model=\".agreeTerms\"\n                                                name=\"agreeTerms\"\n                                                className=\"form-check-input\"\n                                                validators={{\n                                                    checked\n                                                }}\n                                            />{' '}\n                                            I understand that my information will only be provided to any potential\n                                            buyers after they have reserved my item.\n                                        </Label>\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".agreeTerms\"\n                                            show=\"touched\"\n                                            messages={{\n                                                checked: 'You need to agree. '\n                                            }}\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 3, offset: 2 }}>\n                                    <Button block type=\"submit\" value=\"submit\" color=\"primary\">\n                                        Post\n                                    </Button>\n                                </Col>\n                                <Col md={{ size: 3, offset: 3 }}>\n                                    <Button block color=\"secondary\" onClick={this.toggleModal}>\n                                        Cancel\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default NewPost;\n","import React, { Component } from 'react';\nimport Login from './LoginComponent';\nimport SearchComponent from './SearchComponent';\nimport NewPostModal from './NewPostComponent';\nimport { Navbar, Nav, NavbarToggler, NavItem } from 'reactstrap';\n\nfunction RenderButton(resetNewPostForm, postItem, fetchUserInfo, users, formatPhoneNumbers) {\n    if (users.isLoggedIn) {\n        return <NewPostModal resetNewPostForm={resetNewPostForm} postItem={postItem} users={users} />;\n    } else {\n        return <Login fetchUserInfo={fetchUserInfo} loginError={users.userInfo.loginError} formatPhoneNumbers={formatPhoneNumbers} />;\n    }\n}\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.toggleSideNav = this.props.toggleSideNav.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar dark fixed=\"top\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleSideNav} />\n\n                        <Nav className=\"mx-auto col-6 col-lg-8\" navbar>\n                            <NavItem>\n                                <SearchComponent\n                                    filterResults={this.props.filterResults}\n                                    fetchItems={this.props.fetchItems}\n                                />\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"col-2\" navbar>\n                            <NavItem>\n                                {RenderButton(\n                                    this.props.resetNewPostForm,\n                                    this.props.postItem,\n                                    this.props.fetchUserInfo,\n                                    this.props.users,\n                                    this.props.formatPhoneNumbers\n                                )}\n                            </NavItem>\n                        </Nav>\n                    </div>\n                </Navbar>\n            </>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavbarBrand, Nav, NavItem } from 'reactstrap';\nimport { slide as Menu } from 'react-burger-menu';\nimport { NavLink } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport Login from './LoginComponent';\n\nfunction RenderSidebar(isLoggedIn, name, fetchUserInfo, loginError, logoutUser, formatPhoneNumbers) {\n    if (isLoggedIn) {\n        return (\n            <div>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        <h4>Hello, {name} </h4>\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/home\">\n                        <span className=\"fa fa-home fa-lg fa-fw\" /> Market\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        <span className=\"fa fa-user fa-lg fa-fw\" /> My Profile\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/posts\">\n                        <span className=\"fa fa-stack-exchange fa-lg fa-fw\" /> My Posts\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/saved\">\n                        <span className=\"fa fa-heart-o fa-lg fa-fw\" /> Saved Items\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/ongoing\">\n                        <span className=\"fa fa-exchange fa-lg fa-fw\" /> Ongoing\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/sold\">\n                        <span className=\"fa fa-shopping-bag fa-lg fa-fw\" /> Sold\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/settings\">\n                        <span className=\"fa fa-cog fa-lg fa-fw\" /> Settings\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/home\" onClick={logoutUser}>\n                        <span className=\"fa fa-sign-out fa-lg fa-fw\" /> Logout\n                    </NavLink>\n                </NavItem>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <NavItem>\n                    <Login fetchUserInfo={fetchUserInfo} loginError={loginError} isSideBar={true} formatPhoneNumbers={formatPhoneNumbers} />\n                </NavItem>\n            </div>\n        );\n    }\n}\n\nconst SideBar = (props) => {\n    const avatarSrc = props.isLoggedIn ? props.users.userInfo.avatar : 'assets/images/joe_bruin.jpg';\n    return (\n        // Pass on our props\n        <Menu {...props}>\n            <Nav navbar onClick={props.toggleSideNav}>\n                <NavbarBrand className=\"mr-auto col-2 col-sm-2\">\n                    <Avatar size={100} src={avatarSrc} round={true} />\n                </NavbarBrand>\n                {RenderSidebar(\n                    props.isLoggedIn,\n                    props.users.userInfo.name,\n                    props.fetchUserInfo,\n                    props.loginError,\n                    props.logoutUser,\n                    props.formatPhoneNumbers\n                )}\n            </Nav>\n        </Menu>\n    );\n};\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from 'react-avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { Row, Col } from 'reactstrap';\n\nvar divStyle = {\n    background: 'white',\n    padding: '0px',\n    margin: '0px'\n};\n\nfunction RenderListItem({ item, renderOngoing, unreserveItem }) {\n    const reservedTexts = item.reserved.isReserved ? `Reserved by ${item.reserved.name}` : 'Not Reserved';\n    const phoneNum = renderOngoing ? item.seller.tel : item.reserved.tel;\n    const phoneButton = item.reserved.isReserved ? (\n        <Button href={`tel:${phoneNum}`}>\n            <span className=\"fa fa-phone fa-fw\" /> {phoneNum}\n        </Button>\n    ) : (\n        <div />\n    );\n    const email = renderOngoing ? item.seller.email : item.reserved.email;\n    const emailButton = item.reserved.isReserved ? (\n        <Button href={`mailto:${email}`} style={{ 'text-transform': 'none' }}>\n            <span className=\"fa fa-envelope-o fa-fw\" /> {email}\n        </Button>\n    ) : (\n        <div />\n    );\n    var time = item.time;\n    time = time.slice(0, 10);\n    return (\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n                <Avatar alt=\"Remy Sharp\" src={item.picture} size=\"150\" />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <Typography component=\"span\" color=\"textPrimary\" variant=\"display1\">\n                        {item.name}\n                    </Typography>\n                }\n                secondary={\n                    <React.Fragment>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"subtitle1\">\n                            <Row>\n                                <Col xs={4}>{renderOngoing ? `Seller: ${item.seller.name}` : reservedTexts}</Col>\n                                <Col xs={{ size: 3, offset: 1 }}>{phoneButton}</Col>\n                                <Col xs={{ size: 3 }}>{emailButton}</Col>\n                            </Row>\n                        </Typography>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"body2\">\n                            {time}\n                        </Typography>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"body2\">\n                            Price: ${item.price}\n                        </Typography>\n                        <Row>\n                            <Col xs={4}>Description: {item.detail}</Col>\n                            {item.reserved.isReserved ? (\n                                <Col\n                                    xs={{\n                                        size: renderOngoing ? 3 : 4,\n                                        offset: renderOngoing ? 5 : 4\n                                    }}\n                                >\n                                    <Button\n                                        size=\"medium\"\n                                        bsStyle=\"primary\"\n                                        bsSize=\"large\"\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        onClick={() => unreserveItem(item.id)}\n                                    >\n                                        {renderOngoing ? 'Unreserve' : 'Cancel Transaction'}\n                                    </Button>\n                                </Col>\n                            ) : (\n                                <Col xs={{ size: 3, offset: 5 }} />\n                            )}\n                        </Row>\n                    </React.Fragment>\n                }\n            />\n        </ListItem>\n    );\n}\n\nclass PostList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.unreserveItem = this.unreserveItem.bind(this);\n        this.renderItem = this.renderItem.bind(this);\n    }\n\n    renderItem(filterCriteria) {\n        return this.props.sellItems.filter(filterCriteria).map((item) => {\n            return (\n                <div key={item.id} className=\"row align-items-start\">\n                    <div className=\"col-12 col-md m-1\">\n                        <RenderListItem\n                            item={item}\n                            renderOngoing={this.props.renderOngoing}\n                            unreserveItem={this.unreserveItem}\n                        />\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    unreserveItem(key) {\n        this.props.unreserveItem(key);\n        setTimeout(() => {\n            this.forceUpdate();\n            alert('Reservation canceled!');\n        }, 500);\n    }\n\n    render() {\n        if (!this.props.isLoggedIn) {\n            return (\n                <div className=\"container start-of-home\">\n                    <div className=\"col-12\">\n                        <h3>Please Login First</h3>\n                        <hr />\n                    </div>\n                </div>\n            );\n        }\n        var arr = [];\n        if (!this.props.renderOngoing) {\n            for (let key in this.props.users.userInfo.posts) {\n                if (this.props.users.userInfo.posts.hasOwnProperty(key)) {\n                    arr.push(this.props.users.userInfo.posts[key]);\n                }\n            }\n        } else {\n            for (let i = 0; i < this.props.sellItems.length; i++) {\n                let item = this.props.sellItems[i];\n                if (item.reserved.name === this.props.users.userInfo.name) {\n                    arr.push(item.id);\n                }\n            }\n        }\n\n        var reservedItems = this.renderItem((item) => arr.indexOf(item.id) >= 0 && item.reserved.isReserved);\n        if (!this.props.renderOngoing) {\n            reservedItems = reservedItems.concat(\n                this.renderItem((item) => arr.indexOf(item.id) >= 0 && !item.reserved.isReserved)\n            );\n        }\n\n        const title = this.props.renderOngoing === true ? 'My Ongoing Posts' : 'My Posts';\n\n        return (\n            <div className=\"container start-of-home\">\n                <div className=\"col-12\">\n                    <h3>{title}</h3>\n                    <hr />\n                </div>\n                <div style={divStyle}>\n                    <List>{reservedItems}</List>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PostList;\n","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Profile from './ProfileComponent';\nimport Header from './HeaderComponent';\nimport SideBar from './SideBarComponent';\nimport PostList from './PostListComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n    filterResults,\n    fetchItems,\n    postItem,\n    fetchUserInfo,\n    reserveItem,\n    logoutUser,\n    unreserveItem\n} from '../redux/ActionCreators';\nimport { checkLoginInfo } from '../shared/validators';\nimport * as MessageTypes from '../shared/MessageTypes';\nimport { actions } from 'react-redux-form';\n\nimport '../style.css';\n\nconst mapStateToProps = (state) => {\n    return {\n        sellItems: state.sellItems,\n        users: state.users,\n        loginError: state.users.error\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    postItem: (item) => dispatch(postItem(item)),\n    logoutUser: () => {\n        dispatch(logoutUser());\n    },\n    filterResults: (searchText) => {\n        dispatch(filterResults(searchText));\n    },\n    fetchItems: () => {\n        dispatch(fetchItems());\n    },\n    resetNewPostForm: () => {\n        dispatch(actions.reset('newPost'));\n    },\n    reserveItem: (key, name, email, tel) => {\n        dispatch(reserveItem(key, name, email, tel));\n    },\n    unreserveItem: (key) => {\n        dispatch(unreserveItem(key));\n    },\n    formatPhoneNumbers: (values, normalizer) => {\n        dispatch(actions.change('register.tel', normalizer(values)));\n    },\n    fetchUserInfo: (username, password) => {\n        dispatch(actions.setPending('login.username', true));\n        dispatch(actions.setPending('login.password', true));\n\n        checkLoginInfo(username, password).then((message) => {\n            let valid = {\n                username: true,\n                password: true\n            };\n            if (message === MessageTypes.SUCCESS) {\n                dispatch(fetchUserInfo(username));\n                dispatch(actions.reset('login.password'));\n            } else if (message === MessageTypes.USER_NOT_EXIST) {\n                valid.username = false;\n            } else if (message === MessageTypes.PASSWORD_WRONG) {\n                valid.password = false;\n            }\n            dispatch(\n                actions.setValidity('login.username', {\n                    isLoginValid: valid.username\n                })\n            );\n            dispatch(\n                actions.setValidity('login.password', {\n                    isLoginValid: valid.password\n                })\n            );\n            dispatch(actions.setPending('login.username', false));\n            dispatch(actions.setPending('login.password', false));\n        });\n    }\n});\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: false,\n            isSideNavOpen: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleSideNav = this.toggleSideNav.bind(this);\n        this.handleStateChange = this.handleStateChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.fetchItems();\n    }\n\n    handleStateChange(state) {\n        this.setState({\n            isSideNavOpen: state.isOpen\n        });\n    }\n\n    toggleSideNav() {\n        this.setState({\n            isSideNavOpen: !this.state.isSideNavOpen\n        });\n    }\n\n    handleSubmit(event) {\n        this.setState({\n            loggedIn: true\n        });\n        event.preventDefault();\n    }\n\n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    sellItems={this.props.sellItems.sellItems}\n                    reserveItem={this.props.reserveItem}\n                    users={this.props.users}\n                />\n            );\n        };\n\n        const PostPage = () => {\n            return (\n                <PostList\n                    sellItems={this.props.sellItems.sellItems}\n                    users={this.props.users}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                    unreserveItem={this.props.unreserveItem}\n                />\n            );\n        };\n\n        const ProfilePage = () => {\n            return (\n                <Profile\n                    userInfo={this.props.users.userInfo}\n                    StoreUserInfo={this.props.StoreUserInfo}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                />\n            );\n        };\n\n        const OngoingPage = () => {\n            return (\n                <PostList\n                    sellItems={this.props.sellItems.sellItems}\n                    users={this.props.users}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                    renderOngoing={true}\n                    unreserveItem={this.props.unreserveItem}\n                />\n            );\n        };\n\n        return (\n            <div id=\"App\">\n                <SideBar\n                    noOverlay\n                    users={this.props.users}\n                    pageWrapId={'page-wrapper'}\n                    outerContainerId={'App'}\n                    isOpen={this.state.isSideNavOpen}\n                    onStateChange={(state) => this.handleStateChange(state)}\n                    toggleSideNav={this.toggleSideNav}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                    fetchUserInfo={this.props.fetchUserInfo}\n                    logoutUser={this.props.logoutUser}\n                    formatPhoneNumbers={this.props.formatPhoneNumbers}\n                />\n                <div id=\"page-wrapper\">\n                    <Header\n                        filterResults={this.props.filterResults}\n                        fetchItems={this.props.fetchItems}\n                        toggleSideNav={this.toggleSideNav}\n                        resetNewPostForm={this.props.resetNewPostForm}\n                        postItem={this.props.postItem}\n                        isLoggedIn={this.props.users.isLoggedIn}\n                        fetchUserInfo={this.props.fetchUserInfo}\n                        loginError={this.props.loginError}\n                        users={this.props.users}\n                        formatPhoneNumbers={this.props.formatPhoneNumbers}\n                    />\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route path=\"/profile\" component={ProfilePage} />\n                        <Route path=\"/ongoing\" component={OngoingPage} />\n                        <Route path=\"/posts\" component={PostPage} />\n                        <Redirect to=\"/\" />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Main)\n);\n","import * as ActionTypes from './ActionTypes';\n\nexport const sellItems = (\n    state = {\n        isLoading: false,\n        sellItems: [],\n        err: null,\n        origSellItems: []\n    },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.RESERVE_ITEM: {\n            console.log(action.payload);\n            const key = action.payload.key;\n            for (let i = 0; i < state.sellItems.length; i++) {\n                if (state.sellItems[i]['id'] === key) {\n                    state.sellItems[i]['reserved'] = action.payload.reserved;\n                    break;\n                }\n            }\n            return state;\n        }\n        case ActionTypes.UNRESERVE_ITEM: {\n            console.log(action.payload);\n            const key = action.payload;\n            for (let i = 0; i < state.sellItems.length; i++) {\n                if (state.sellItems[i]['id'] === key) {\n                    state.sellItems[i]['reserved']['isReserved'] = false;\n                    break;\n                }\n            }\n            return state;\n        }\n        case ActionTypes.FILTER:\n            var searchText = action.payload.searchText;\n            return {\n                ...state,\n                isLoading: false,\n                err: null,\n                sellItems: state.origSellItems\n                    .filter((item) => {\n                        if (item.name.toLowerCase().includes(searchText.toLowerCase())) {\n                            return true;\n                        }\n                        if (item.keywords && item.keywords.includes(searchText)) {\n                            return true;\n                        }\n                        return false;\n                    })\n                    .slice(0, action.payload.maxResults)\n            };\n        case ActionTypes.ADD_ITEM:\n            return {\n                ...state,\n                sellItems: state.sellItems.concat(action.payload),\n                origSellItems: state.origSellItems.concat(action.payload)\n            };\n        case ActionTypes.ADD_ITEMS:\n            return { ...state, isLoading: false, err: null, sellItems: action.payload, origSellItems: action.payload };\n        case ActionTypes.ITEMS_LOADING:\n            return { ...state, isLoading: true, err: null, sellItems: [], origSellItems: [] };\n        case ActionTypes.ITEMS_FAILED:\n            return { ...state, isLoading: false, err: action.payload, sellItems: [], origSellItems: [] };\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Users = (\n    state = {\n        isLoggedIn: false,\n        username: '',\n        userInfo: [],\n        error: null\n    },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.LOG_IN:\n            return {\n                ...state,\n                isLoggedIn: true,\n                username: action.username,\n                userInfo: action.userInfo,\n                error: null\n            };\n        case ActionTypes.LOG_OUT:\n            return {\n                ...state,\n                isLoggedIn: false,\n                username: '',\n                userInfo: [],\n                error: null\n            };\n        case ActionTypes.ADD_ITEM_USER:\n            return {\n                ...state,\n                userInfo: {\n                    ...state.userInfo,\n                    posts: state.userInfo.posts.concat(action.payload)\n                }\n            };\n        case ActionTypes.SIGN_UP:\n            return {\n                ...state,\n                isLoggedIn: true,\n                username: action.username,\n                password: action.password\n            };\n        case ActionTypes.LOG_IN_FAILED:\n            return {\n                ...state,\n                isLoggedIn: false,\n                username: '',\n                userInfo: [],\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n};\n","export const InitialLogin = {\n    username: '',\n    password: ''\n};\n\nexport const InitialRegister = {\n    name: '',\n    username: '',\n    password: '',\n    email: '',\n    phone: ''\n};\n\nexport const InitialPost = {\n    itemName: '',\n    itemPrice: '',\n    itemDes: '',\n    pictures: '',\n    agreeTerms: false\n};\n\nexport const InitialProfile = {\n    email: '',\n    tel: ''\n}\n\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <div>\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { sellItems } from './items';\nimport { Users } from './users';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialLogin, InitialRegister, InitialPost, InitialProfile } from './InitStates';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            sellItems: sellItems,\n            users: Users,\n            ...createForms({\n                newPost: InitialPost,\n                login: InitialLogin,\n                register: InitialRegister,\n                profile: InitialProfile\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}