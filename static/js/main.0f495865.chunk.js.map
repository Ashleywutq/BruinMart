{"version":3,"sources":["components/ReserveModalComponent.jsx","components/SaveModalComponent.jsx","components/HomeComponent.jsx","components/ProfileComponent.jsx","shared/firebase.js","shared/firebaseConfig.js","redux/ActionCreators.jsx","redux/ActionTypes.jsx","shared/validators.js","shared/MessageTypes.js","components/RegisterComponent.jsx","components/LoginComponent.jsx","components/SearchComponent.jsx","components/ImageUploadComponent.jsx","components/NewPostComponent.jsx","components/HeaderComponent.jsx","components/SideBarComponent.jsx","components/PostListComponent.jsx","components/MainComponent.jsx","redux/items.jsx","redux/users.jsx","redux/InitStates.jsx","App.jsx","redux/configureStore.jsx","serviceWorker.jsx","index.jsx"],"names":["ReserveModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","toggle","bind","assertThisInitialized","onSubmit","setState","event","preventDefault","reserveItem","item","id","userInfo","name","email","tel","react_default","a","createElement","reactstrap_es","block","color","className","onClick","isOpen","seller","Component","ModalExample","React","RenderCard","_ref","users","top","width","src","picture","alt","style","wordWrap","price","dist_default","date","time","format","detail","xl","size","offset","isLoggedIn","username","ReserveModalComponent","RenderReserve","SaveModalComponent","RenderSave","Home","key","_this2","setTimeout","forceUpdate","_this3","sellItems","sort","b","Date","filter","reserved","isReserved","map","Profile","values","StoreUserInfo","password","model","htmlFor","xs","lib","text","value","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","itemsRef","ref","usersRef","unreserve","type","payload","reserve","addItems","items","itemsLoading","itemsFailed","err","fetchUserInfo","dispatch","child","once","then","snapshot","val","posts","hasOwnProperty","push","loginUser","actions","change","doesUsernameExist","callback","Promise","checkUsername","message","required","validator","isEmpty","ignore_whitespace","normalizePhone","onlyNums","replace","length","concat","slice","Register","formatPhoneNumbers","target","placeholder","validators","show","messages","asyncValidators","isEmail","onChange","validateOn","updateOn","isMobilePhone","connect","resetRegisterForm","reset","phone","update","avatar","isLoginValid","Login","button","undefined","isSideBar","NavLink","to","background","RegisterComponent","SearchComponent","handleChange","filterResults","ImageUpload","onPreviewDrop","files","reader","FileReader","readAsDataURL","onloadend","curPath","result","preview","handleCheck","alert","deleteFile","file","el","some","previewStyle","display","height","Fragment","dist_es","accept","onDrop","react","i","console","log","isNumber","isNaN","Number","checked","NewPost","toggleModal","handleSubmit","resetNewPostForm","postItem","itemName","parseInt","itemPrice","toISOString","itemDes","len","md","minLength","maxLength","textarea","rows","ImageUploadComponent","check","checkbox","Header","isModalOpen","toggleSideNav","dark","fixed","navbar","components_SearchComponent","fetchItems","NewPostComponent","LoginComponent","loginError","SideBar","logoutUser","avatarSrc","BurgerMenu","react_avatar_es","round","divStyle","padding","margin","RenderListItem","unreserveItem","Button_default","href","text-transform","ListItem_default","alignItems","ListItemAvatar_default","ListItemText_default","primary","Typography_default","component","variant","secondary","bsStyle","bsSize","PostList","renderItem","filterCriteria","renderOngoing","arr","reservedItems","indexOf","title","List_default","Main","loggedIn","isSideNavOpen","handleStateChange","SideBarComponent","noOverlay","pageWrapId","outerContainerId","onStateChange","HeaderComponent","Switch","Route","exact","path","HomeComponent","ProfileComponent","PostListComponent","Redirect","withRouter","error","addItem","catch","searchText","maxResults","arguments","rawItems","Error","normalizer","setPending","checkLoginInfo","valid","setValidity","isLoading","origSellItems","action","objectSpread","toLowerCase","includes","keywords","Users","InitialLogin","InitialRegister","InitialPost","pictures","agreeTerms","InitialProfile","store","createStore","combineReducers","createForms","newPost","login","register","profile","applyMiddleware","thunk","logger","App","es","BrowserRouter","basename","process","MainComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f495865.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ReserveModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        this.toggle();\n        this.props.reserveItem(\n            this.props.item.id,\n            this.props.userInfo.name,\n            this.props.userInfo.email,\n            this.props.userInfo.tel\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block color=\"primary\" className=\"item-button\" onClick={this.toggle}>\n                    Reserve\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Reserve Item</ModalHeader>\n                    <ModalBody>\n                        You are about to reserve the item \"{this.props.item.name}\" from {this.props.item.seller}.<br />\n                        Are you sure?\n                        <br /> <br />\n                        You will be able to see the seller's contact information and continue with this deal under the \"\n                        <span className=\"fa fa-exchange fa-lg fa-fw\" /> Ongoing\" section in the sidebar.\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.onSubmit}>\n                            Confirm\n                        </Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>\n                            Cancel\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ReserveModal;\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalExample extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block color=\"danger\" className=\"item-button\" onClick={this.toggle}>\n                    Save\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Save Item</ModalHeader>\n                    <ModalBody>\n                        You are about to save the item \"{this.props.item.name}\" from {this.props.item.seller}.<br />\n                        You will be able to view this item under \"<span className=\"fa fa-heart-o fa-lg fa-fw\" /> Saved Items\"\n                        in the sidebar.\n                        <br /> <br />\n                        Saving will not reserve this item for you.\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.toggle}>\n                            Confirm\n                        </Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>\n                            Cancel\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalExample;\n","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardDeck, CardSubtitle, Row, Col } from 'reactstrap';\nimport ReserveModal from './ReserveModalComponent';\nimport SaveModal from './SaveModalComponent';\nimport Moment from 'react-moment';\nimport { setTimeout } from 'timers';\n\nfunction RenderReserve(users, item, reserveItem) {\n    if (!users.isLoggedIn || users.username === item.username) {\n        return <div />;\n    } else {\n        return <ReserveModal userInfo={users.userInfo} item={item} reserveItem={reserveItem} />;\n    }\n}\n\nfunction RenderSave(users, item) {\n    if (!users.isLoggedIn || users.username === item.username) {\n        return <div />;\n    } else {\n        return <SaveModal item={item} />;\n    }\n}\n\nfunction RenderCard({ item, reserveItem, users }) {\n    return (\n        <Card>\n            <CardImg top width=\"100%\" className=\"card-img-top img-fluid\" src={item.picture} alt={item.name} />\n            <CardBody>\n                <CardTitle className=\"card-title\">\n                    <span style={{ width: '27.3vw', wordWrap: 'break-word' }}> {item.name} </span>\n                    <span> ${item.price}</span>\n                </CardTitle>\n                <CardSubtitle>\n                    {item.seller}\n                    <br />\n                    <Moment date={item.time} format=\"MMM D YYYY HH:MM\" />\n                </CardSubtitle>\n                <CardText style={{ width: '27.3vw', wordWrap: 'break-word' }}>{item.detail}</CardText>\n                <Row>\n                    <Col xl={{ size: 4, offset: 1 }}>{RenderReserve(users, item, reserveItem)}</Col>\n                    <Col xl={{ size: 4, offset: 2 }}>{RenderSave(users, item)}</Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.reserveItem = this.reserveItem.bind(this);\n    }\n\n    reserveItem(key, name, email, tel) {\n        this.props.reserveItem(key, name, email, tel);\n        setTimeout(() => this.forceUpdate(), 500);\n    }\n\n    render() {\n        const sellItems = this.props.sellItems\n            .sort((a, b) => new Date(b.time) - new Date(a.time))\n            .filter((item) => !item.reserved.isReserved)\n            .map((item) => {\n                return (\n                    <div key={item.id} className=\"row align-items-start\">\n                        <div className=\"col-12 col-md m-1\">\n                            <RenderCard item={item} reserveItem={this.reserveItem} users={this.props.users} />\n                        </div>\n                    </div>\n                );\n            });\n\n        return (\n            <div className=\"container\">\n                <div className=\"row start-of-home\">\n                    <div className=\"col-12\">\n                        <h3>Items On Sale</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <CardDeck>{sellItems}</CardDeck>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Control } from 'react-redux-form';\nimport { Form, Label, Col, Row } from 'reactstrap';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    onSubmit(values) {\n        this.props.StoreUserInfo(\n            values.name,\n            this.props.userInfo.username,\n            this.props.userInfo.password,\n            values.email,\n            values.tel\n        );\n    }\n\n    render() {\n        if (!this.props.isLoggedIn) {\n            return (\n                <div className=\"container start-of-home\">\n                    <div className=\"col-12\">\n                        <h3>Please Login First</h3>\n                        <hr />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"start-of-home\">\n                <div className=\"col-12\">\n                    <h1>Hello, {this.props.userInfo.name}</h1>\n                    <hr />\n                </div>\n                <Form model=\"profile\" onSubmit={(values) => this.onSubmit(values)}>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"name\" xs={{ size: 1, offset: 1 }}>\n                            <span className=\"fa fa-id-card-o fa-lg\" />\n                        </Label>\n                        <Col xs={9}>\n                            <Control.text\n                                model=\".name\"\n                                id=\"name\"\n                                name=\"name\"\n                                value={this.props.userInfo.name}\n                                className=\"form-control\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"email\" xs={{ size: 1, offset: 1 }}>\n                            <span className=\"fa fa-envelope-o fa-lg\" />\n                        </Label>\n                        <Col xs={9}>\n                            <Control.text\n                                model=\".email\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={this.props.userInfo.email}\n                                className=\"form-control\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"tel\" xs={{ size: 1, offset: 1 }}>\n                            <span className=\"fa fa-phone fa-lg\" />\n                        </Label>\n                        <Col xs={9}>\n                            <Control.text\n                                model=\".tel\"\n                                id=\"tel\"\n                                name=\"tel\"\n                                value={this.props.userInfo.tel}\n                                className=\"form-control\"\n                            />\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport { config } from './firebaseConfig';\n\nfirebase.initializeApp(config);\nvar database = firebase.database();\n\nexport const itemsRef = database.ref('bruinmart/items/');\nexport const usersRef = database.ref('bruinmart/users/');\n","export const config = {\n    apiKey: 'AIzaSyDpr5SspydURpwNzpjr2F9kmC1WLwQaH9w',\n    authDomain: 'jerrylzylzy.firebaseapp.com',\n    databaseURL: 'https://jerrylzylzy.firebaseio.com',\n    projectId: 'jerrylzylzy',\n    storageBucket: 'jerrylzylzy.appspot.com',\n    messagingSenderId: '1089192741461'\n};","import * as ActionTypes from './ActionTypes';\nimport { itemsRef, usersRef } from '../shared/firebase';\nimport { actions } from 'react-redux-form';\n\nexport const filterResults = (searchText, maxResults = 20) => ({\n    type: ActionTypes.FILTER,\n    payload: {\n        searchText: searchText,\n        maxResults: maxResults\n    }\n});\n\n//  This is a thunk\n\nexport const fetchItems = () => (dispatch) => {\n    dispatch(itemsLoading(true));\n\n    return itemsRef\n        .once('value')\n        .then((snapshot) => {\n            var rawItems = snapshot.val();\n            if (rawItems === null) throw Error('Fetch failed.');\n            var sellItems = [];\n            for (var key in rawItems) {\n                if (rawItems.hasOwnProperty(key)) {\n                    var item = rawItems[key];\n                    item.id = key;\n                    sellItems.push(item);\n                }\n            }\n            dispatch(addItems(sellItems));\n        })\n        .catch((error) => dispatch(itemsFailed(error.message)));\n};\n\nexport const reserveItem = (key, name, email, tel) => (dispatch) => {\n    const reserved = {\n        isReserved: true,\n        name,\n        email,\n        tel\n    };\n    return itemsRef\n        .child('/' + key)\n        .update({\n            reserved\n        })\n        .then((error) => {\n            if (error) throw error;\n            dispatch(reserve(key, reserved));\n        })\n        .catch((error) => {\n            dispatch(itemsFailed(error.message));\n            alert('Reserved failed! Error: ' + error.message);\n        });\n};\n\nexport const unreserveItem = (key) => (dispatch) => {\n    return itemsRef\n        .child(`/${key}/reserved/`)\n        .update({ isReserved: false })\n        .then((error) => {\n            if (error) throw error;\n            console.log('error checking');\n            dispatch(unreserve(key));\n        })\n        .catch((error) => {\n            dispatch(itemsFailed(error.message));\n        });\n};\n\nexport const unreserve = (key) => ({\n    type: ActionTypes.UNRESERVE_ITEM,\n    payload: key\n});\n\nexport const reserve = (key, reserved) => ({\n    type: ActionTypes.RESERVE_ITEM,\n    payload: {\n        key,\n        reserved\n    }\n});\n\nexport const addItems = (items) => ({\n    type: ActionTypes.ADD_ITEMS,\n    payload: items\n});\n\nexport const itemsLoading = () => ({\n    type: ActionTypes.ITEMS_LOADING\n});\n\nexport const itemsFailed = (err) => ({\n    type: ActionTypes.ITEMS_FAILED,\n    payload: err\n});\n\nexport const addItem = (item) => ({\n    type: ActionTypes.ADD_ITEM,\n    payload: item\n});\n\nexport const addItemToUser = (itemKey) => ({\n    type: ActionTypes.ADD_ITEM_USER,\n    payload: itemKey\n});\n\nexport const postItem = (item) => (dispatch) => {\n    return itemsRef\n        .push(item)\n        .then(function(snapshot) {\n            item.id = snapshot.key;\n            dispatch(addItem(item));\n            usersRef.child(item.username + '/posts/').push(item.id);\n            dispatch(addItemToUser(item.id));\n            alert('Post Successful!');\n        })\n        .catch((error) => alert('Post failed! Error: ' + error.message));\n};\n\nexport const fetchUserInfo = (username) => (dispatch) => {\n    return usersRef\n        .child(username)\n        .once('value')\n        .then((snapshot) => {\n            var userInfo = snapshot.val();\n            var posts = [];\n            for (var key in userInfo.posts) {\n                if (userInfo.posts.hasOwnProperty(key)) {\n                    posts.push(userInfo.posts[key]);\n                }\n            }\n            userInfo.posts = posts;\n            dispatch(loginUser(username, userInfo));\n            dispatch(actions.change('profile.email', userInfo.email));\n            dispatch(actions.change('profile.tel', userInfo.tel));\n        });\n};\n\nexport const loginFailed = (error) => ({\n    type: ActionTypes.LOG_IN_FAILED,\n    payload: error\n});\n\n//actions for login logout\nexport const loginUser = (username, userInfo) => {\n    return {\n        type: ActionTypes.LOG_IN,\n        username: username,\n        userInfo: userInfo\n    };\n};\n\nexport const logoutUser = () => ({\n    type: ActionTypes.LOG_OUT\n});\n\nexport const StoreUserInfo = (name, username, password, email, phone) => (dispatch) => {\n    return usersRef\n        .child(username)\n        .update({\n            name: name,\n            password: password,\n            email: email,\n            tel: phone,\n            avatar: 'assets/images/joe_bruin.jpg',\n            posts: []\n        })\n        .then(() => {\n            dispatch(fetchUserInfo(username));\n        });\n};\n\nexport const signup = (username, password) => {\n    return {\n        type: ActionTypes.SIGN_UP,\n        username: username,\n        password: password\n    };\n};\n","export const FILTER = 'FILTER';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\nexport const ITEMS_FAILED = 'ITEMS_FAILED';\nexport const ADD_ITEMS = 'ADD_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const POST_ITEMS = 'POST_ITEMS';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const SIGN_UP = 'SIGN_UP';\nexport const ADD_ITEM_USER = 'ADD_ITEM_USER';\nexport const RESERVE_ITEM = 'RESERVE_ITEM';\nexport const GET_USER_POST = 'GET_USER_POST';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\nexport const UNRESERVE_ITEM = 'UNRESERVE_ITEM';\n","import * as MessageTypes from './MessageTypes';\nimport { usersRef } from './firebase';\nimport validator from 'validator';\n\nexport const checkLoginInfo = (username, password) => {\n    return new Promise((callback) => {\n        usersRef\n            .child(username)\n            .once('value')\n            .then((snapshot) => {\n                var userInfo = snapshot.val();\n                if (userInfo === null) {\n                    callback(MessageTypes.USER_NOT_EXIST);\n                } else if (userInfo.password !== password) {\n                    callback(MessageTypes.PASSWORD_WRONG);\n                } else {\n                    callback(MessageTypes.SUCCESS);\n                }\n            });\n    });\n};\n\nconst checkUsername = (username) => {\n    return new Promise((callback) => {\n        usersRef\n            .child(username)\n            .once('value')\n            .then((snapshot) => {\n                var userInfo = snapshot.val();\n                if (userInfo === null) {\n                    callback(MessageTypes.USER_NOT_EXIST);\n                } else {\n                    callback(MessageTypes.USER_EXISTS);\n                }\n            });\n    });\n};\n\nexport const doesUsernameExist = (username, callback) => {\n    checkUsername(username).then((message) => {\n        callback(message === MessageTypes.USER_NOT_EXIST);\n    });\n};\n\nexport const required = (val) =>\n    val &&\n    !validator.isEmpty(val, {\n        ignore_whitespace: true\n    });\n","export const SUCCESS = 'SUCCESS';\nexport const USER_EXISTS = 'USER_EXISTS';\nexport const USER_NOT_EXIST = 'USER_NOT_EXIST';\nexport const PASSWORD_WRONG = 'PASSWORD_WRONG';","import React, { Component } from 'react';\nimport { Button, ModalHeader, Modal, ModalBody, Label, Col, Row } from 'reactstrap';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\nimport { StoreUserInfo } from '../redux/ActionCreators';\nimport { connect } from 'react-redux';\nimport validator from 'validator';\nimport { required, doesUsernameExist } from '../shared/validators';\n\nconst normalizePhone = (value) => {\n    if (!value) {\n        return value;\n    }\n\n    const onlyNums = value.replace(/[^\\d]/g, '');\n    if (onlyNums.length <= 3) {\n        return onlyNums;\n    }\n    if (onlyNums.length <= 7) {\n        return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3)}`;\n    }\n    return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3, 6)}-${onlyNums.slice(6, 10)}`;\n};\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    formatPhoneNumbers(event) {\n        this.props.formatPhoneNumbers(event.target.value, normalizePhone);\n    }\n\n    onSubmit(values) {\n        this.toggle();\n        this.props.StoreUserInfo(values.name, values.username, values.password, values.email, values.tel);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block className=\"item-button\" onClick={this.toggle} color=\"secondary\">\n                    Register\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"register\" onSubmit={(values) => this.onSubmit(values)}>\n                            {/* <Row>\n                                <Col xs={{size: 4, offset: 3}}>\n                                    <h1 className=\"justify-content-center align-self-center\">\n                                        <strong>BruinMart</strong>\n                                    </h1>\n                                </Col>\n                            </Row> */}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"name\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-id-card-o fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.text\n                                        model=\".name\"\n                                        id=\"name\"\n                                        name=\"name\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"username\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-user fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.text\n                                        model=\".username\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        placeholder=\"Username\"\n                                        className=\"form-control\"\n                                        asyncValidators={{\n                                            doesUsernameExist\n                                        }}\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".username\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            doesUsernameExist: 'Username already exist in the database. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"password\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-lock fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.password\n                                        model=\".password\"\n                                        id=\"password\"\n                                        name=\"password\"\n                                        placeholder=\"Password\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".password\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-envelope-o fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.text\n                                        model=\".email\"\n                                        id=\"email\"\n                                        name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isEmail: (val) => val && validator.isEmail(val)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isEmail: \"Wrong format. Email's format is ab@cd.ef\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"tel\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-phone fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.text\n                                        model=\".tel\"\n                                        id=\"tel\"\n                                        name=\"tel\"\n                                        placeholder=\"Phone Number\"\n                                        className=\"form-control\"\n                                        onChange={(event) => this.formatPhoneNumbers(event)}\n                                        validateOn=\"blur\"\n                                        updateOn=\"blur\"\n                                        validators={{\n                                            required,\n                                            isMobilePhone: (val) => val && validator.isMobilePhone(val, 'en-US')\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".tel\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isMobilePhone: \"Phone number's format is wrong. Please enter 10 digits.\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={{ size: 4, offset: 7 }}>\n                                    <Button block type=\"submit\" value=\"submit\" color=\"primary\">\n                                        Register\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    resetRegisterForm: () => {\n        dispatch(actions.reset('register'));\n    },\n    StoreUserInfo: (name, username, password, email, phone) => {\n        dispatch(StoreUserInfo(name, username, password, email, phone));\n    }\n});\n\nexport default connect(\n    (state) => {\n        return {};\n    },\n    mapDispatchToProps\n)(Register);\n","import React, { Component } from 'react';\nimport { Button, ModalHeader, Modal, ModalBody, Label, Row, Col } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { NavLink } from 'react-router-dom';\nimport Register from './RegisterComponent';\nimport { required } from '../shared/validators';\n\nconst isLoginValid = () => true;\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(values) {\n        this.props.fetchUserInfo(values.username, values.password);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        const button =\n            this.props.isSideBar !== undefined ? (\n                <NavLink className=\"nav-link\" to=\"/home\" onClick={this.toggle}>\n                    <h4>Please Login</h4>\n                </NavLink>\n            ) : (\n                <Button style={{ background: 'transparent' }} onClick={this.toggle}>\n                    <span className=\"fa fa-sign-in fa-lg fa-fw\" />\n                </Button>\n            );\n        return (\n            <div className=\"container\">\n                {button}\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"login\" onSubmit={(values) => this.onSubmit(values)}>\n                            {/* <Row>\n                                <Col xs={{size: 4, offset: 3}}>\n                                    <h1 className=\"justify-content-center align-self-center\">\n                                        <strong>BruinMart</strong>\n                                    </h1>\n                                </Col>\n                            </Row> */}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"username\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-user fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={8}>\n                                    <Control.text\n                                        model=\".username\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        placeholder=\"Username\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isLoginValid\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".username\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isLoginValid: 'Username does not exist. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"password\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-lock fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={8}>\n                                    <Control.password\n                                        model=\".password\"\n                                        id=\"password\"\n                                        name=\"password\"\n                                        placeholder=\"Password\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isLoginValid\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".password\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isLoginValid: 'Password is incorrect. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xl={{ size: 3, offset: 2 }}>\n                                    <Register formatPhoneNumbers={this.props.formatPhoneNumbers} />\n                                </Col>\n                                <Col xl={{ size: 3, offset: 2 }}>\n                                    <Button block className=\"item-button\" value=\"submit\" color=\"primary\">\n                                        Login\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport '../SearchInput.css';\n\nclass SearchComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.filterResults(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"component-search-input\">\n                <div>\n                    <input placeholder=\"Search Here\" style={{ color: 'white' }} onChange={this.handleChange} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchComponent;\n","import React, { Component, Fragment } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Button } from 'reactstrap';\n\nclass ImageUpload extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            files: []\n        };\n\n        this.deleteFile = this.deleteFile.bind(this);\n        this.onPreviewDrop = this.onPreviewDrop.bind(this);\n    }\n\n    handleCheck(val) {\n        return this.state.files.some(item => val.name === item.name);\n    }\n\n    onPreviewDrop = (files) => {\n        var reader = new FileReader();\n        reader.readAsDataURL(files[0]);\n        reader.onloadend=()=>{\n            const curPath = reader.result;\n            files[0].preview=curPath;\n            if(this.handleCheck(files[0])){\n                alert(\"Please do not upload the same image twice!\");\n            }\n            else{\n                this.setState({\n                    files: this.state.files.concat(files[0])\n                });\n            }\n        }\n    };\n\n    deleteFile = (file)=>{\n        this.setState({\n            files: this.state.files.filter(el => el!==file )\n        });\n    }\n\n    render() {\n        const previewStyle = {\n            display: 'inline',\n            width: 100,\n            height: 100\n        };\n\n        return (\n            <>\n                <Dropzone className=\"dropzone\" accept=\"image/*\" onDrop={this.onPreviewDrop}>\n                    <div className=\"upload-box\">Drag your image here or click the box to browse your local files.</div>\n                </Dropzone>\n                {this.state.files.length > 0 && (\n                    <Fragment>\n                        <h4>Uploaded Pictures</h4>\n                        {this.state.files.map((file,i) => (\n                            <div key={i}>\n                            <img alt={file.name} key={file.preview} src={file.preview} style={previewStyle} />\n                            {file.name}{' '}\n                            <Button value=\"delete\" onClick={()=>this.deleteFile(file)}>delete</Button>\n                            </div>\n                        ))}\n                        {console.log(this.state.files)}\n                    </Fragment>\n                )}\n            </>\n        );\n    }\n}\n\nexport default ImageUpload;\n","import React from 'react';\nimport { Button, Label, FormText, Modal, ModalHeader, ModalBody, Col, Row } from 'reactstrap';\nimport ImageUpload from './ImageUploadComponent';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => !val || val.length >= len;\nconst isNumber = (val) => !isNaN(Number(val));\nconst checked = (val) => val && val === true;\nclass NewPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    handleSubmit(values) {\n        this.props.resetNewPostForm();\n        this.props.postItem({\n            name: values.itemName,\n            price: parseInt(values.itemPrice),\n            picture:\n                'https://s7d4.scene7.com/is/image/roomandboard/?layer=0&size=498,400&scl=1&src=964101_wood_W&layer=comp&$prodzoom0$',\n            reserved: false,\n            seller: this.props.users.userInfo.name,\n            time: new Date().toISOString(),\n            detail: values.itemDes === '' ? 'No more details provided' : values.itemDes,\n            username: this.props.users.username\n        });\n        this.toggleModal();\n    }\n\n    render() {\n        return (\n            <div>\n                <Button style={{ background: 'transparent' }} onClick={this.toggleModal}>\n                    <span className=\"fa fa-plus fa-lg fa-fw\" />\n                </Button>\n                <Modal className=\"modal-lg\" isOpen={this.state.modal} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>New Post</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"newPost\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".itemName\" md={1}>\n                                    <b>Name</b>\n                                </Label>\n                                <Col md={{ size: 5, offset: 1 }}>\n                                    <Control.text\n                                        model=\".itemName\"\n                                        id=\"itemName\"\n                                        name=\"itemName\"\n                                        placeholder=\"Enter the name of the item you want to sell\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".itemName\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            minLength: 'Must be greater than 2 characters. ',\n                                            maxLength: 'Must be 15 characters or less. '\n                                        }}\n                                    />\n                                </Col>\n                                <Label htmlFor=\".itemPrice\" md={1}>\n                                    <b>Price</b>\n                                </Label>\n                                {/* <Col md={0.3}><span className=\"fa fa-dollar fa-lg fa-fw\" /></Col> */}\n                                <Col md={3}>\n                                    <Control.text\n                                        model=\".itemPrice\"\n                                        id=\"itemPrice\"\n                                        name=\"itemPrice\"\n                                        placeholder=\"Enter your price in US dollars\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".itemPrice\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isNumber: 'Has to be a number. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".itemDes\" md={2}>\n                                    <b>Item Description</b>\n                                </Label>\n                                <Col md={9}>\n                                    <Control.textarea\n                                        model=\".itemDes\"\n                                        id=\"itemDes\"\n                                        name=\"itemDes\"\n                                        placeholder=\"Enter a few lines to describe your item and outline anything potential buyers may need to know\"\n                                        className=\"form-control\"\n                                        rows=\"4\"\n                                    />\n                                </Col>\n                            </Row>\n                            {/* <FormGroup>\n          <Label htmlFor=\"exampleSelectMulti\">Select Multiple</Label>\n          <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple>\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </Input>\n        </FormGroup> */}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".pictures\" md={2}>\n                                    <b>Pictures</b>\n                                </Label>\n                                {/* <Input type=\"file\" name=\"file\" id=\"exampleFile\" /> */}\n                                <Col md={9}>\n                                    <FormText color=\"muted\">Upload a picture for your item here.</FormText>\n                                    <ImageUpload name=\"itemPic\" id=\"itemPic\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            {/* <FormGroup tag=\"fieldset\">\n          <legend>Radio Buttons</legend>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Option one is this and that—be sure to include why it's great\n            </Label>\n          </FormGroup>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Option two can be something else and selecting it will deselect option one\n            </Label>\n          </FormGroup>\n          <FormGroup check disabled>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" disabled />{' '}\n              Option three is disabled\n            </Label>\n          </FormGroup>\n        </FormGroup> */}\n                            <Row className=\"form-group\">\n                                <Col md={{ offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check md={9}>\n                                            <Control.checkbox\n                                                model=\".agreeTerms\"\n                                                name=\"agreeTerms\"\n                                                className=\"form-check-input\"\n                                                validators={{\n                                                    checked\n                                                }}\n                                            />{' '}\n                                            I understand that my information will only be provided to any potential\n                                            buyers after they have reserved my item.\n                                        </Label>\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".agreeTerms\"\n                                            show=\"touched\"\n                                            messages={{\n                                                checked: 'You need to agree. '\n                                            }}\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 3, offset: 2 }}>\n                                    <Button block type=\"submit\" value=\"submit\" color=\"primary\">\n                                        Post\n                                    </Button>\n                                </Col>\n                                <Col md={{ size: 3, offset: 3 }}>\n                                    <Button block color=\"secondary\" onClick={this.toggleModal}>\n                                        Cancel\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default NewPost;\n","import React, { Component } from 'react';\nimport Login from './LoginComponent';\nimport SearchComponent from './SearchComponent';\nimport NewPostModal from './NewPostComponent';\nimport { Navbar, Nav, NavbarToggler, NavItem } from 'reactstrap';\n\nfunction RenderButton(resetNewPostForm, postItem, fetchUserInfo, users, formatPhoneNumbers) {\n    if (users.isLoggedIn) {\n        return <NewPostModal resetNewPostForm={resetNewPostForm} postItem={postItem} users={users} />;\n    } else {\n        return <Login fetchUserInfo={fetchUserInfo} loginError={users.userInfo.loginError} formatPhoneNumbers={formatPhoneNumbers} />;\n    }\n}\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.toggleSideNav = this.props.toggleSideNav.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar dark fixed=\"top\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleSideNav} />\n\n                        <Nav className=\"mx-auto col-6 col-lg-8\" navbar>\n                            <NavItem>\n                                <SearchComponent\n                                    filterResults={this.props.filterResults}\n                                    fetchItems={this.props.fetchItems}\n                                />\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"col-2\" navbar>\n                            <NavItem>\n                                {RenderButton(\n                                    this.props.resetNewPostForm,\n                                    this.props.postItem,\n                                    this.props.fetchUserInfo,\n                                    this.props.users,\n                                    this.props.formatPhoneNumbers\n                                )}\n                            </NavItem>\n                        </Nav>\n                    </div>\n                </Navbar>\n            </>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavbarBrand, Nav, NavItem } from 'reactstrap';\nimport { slide as Menu } from 'react-burger-menu';\nimport { NavLink } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport Login from './LoginComponent';\n\nfunction RenderSidebar(isLoggedIn, name, fetchUserInfo, loginError, logoutUser, formatPhoneNumbers) {\n    if (isLoggedIn) {\n        return (\n            <div>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        <h4>Hello, {name} </h4>\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/home\">\n                        <span className=\"fa fa-home fa-lg fa-fw\" /> Market\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        <span className=\"fa fa-user fa-lg fa-fw\" /> My Profile\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/posts\">\n                        <span className=\"fa fa-stack-exchange fa-lg fa-fw\" /> My Posts\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/saved\">\n                        <span className=\"fa fa-heart-o fa-lg fa-fw\" /> Saved Items\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/ongoing\">\n                        <span className=\"fa fa-exchange fa-lg fa-fw\" /> Ongoing\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/sold\">\n                        <span className=\"fa fa-shopping-bag fa-lg fa-fw\" /> Sold\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/settings\">\n                        <span className=\"fa fa-cog fa-lg fa-fw\" /> Settings\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/home\" onClick={logoutUser}>\n                        <span className=\"fa fa-sign-out fa-lg fa-fw\" /> Logout\n                    </NavLink>\n                </NavItem>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <NavItem>\n                    <Login fetchUserInfo={fetchUserInfo} loginError={loginError} isSideBar={true} formatPhoneNumbers={formatPhoneNumbers} />\n                </NavItem>\n            </div>\n        );\n    }\n}\n\nconst SideBar = (props) => {\n    const avatarSrc = props.isLoggedIn ? props.users.userInfo.avatar : 'assets/images/joe_bruin.jpg';\n    return (\n        // Pass on our props\n        <Menu {...props}>\n            <Nav navbar onClick={props.toggleSideNav}>\n                <NavbarBrand className=\"mr-auto col-2 col-sm-2\">\n                    <Avatar size={100} src={avatarSrc} round={true} />\n                </NavbarBrand>\n                {RenderSidebar(\n                    props.isLoggedIn,\n                    props.users.userInfo.name,\n                    props.fetchUserInfo,\n                    props.loginError,\n                    props.logoutUser,\n                    props.formatPhoneNumbers\n                )}\n            </Nav>\n        </Menu>\n    );\n};\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from 'react-avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { Row, Col } from 'reactstrap';\n\nvar divStyle = {\n    background: 'white',\n    padding: '0px',\n    margin: '0px'\n};\n\nfunction RenderListItem({ item, unreserveItem }) {\n    const reserved = item.reserved.isReserved ? `Reserved by ${item.reserved.name}` : 'Not Reserved';\n    const phone = item.reserved.isReserved ? (\n        <Button href={`tel:(310) 000-0000`}>\n            <span className=\"fa fa-phone fa-fw\" /> {'(310) 000-0000'}\n        </Button>\n    ) : (\n        <div />\n    );\n    const email = item.reserved.isReserved ? (\n        <Button href={`mailto:ashleywu@ucla.edu`} style={{ 'text-transform': 'none' }}>\n            <span className=\"fa fa-envelope-o fa-fw\" /> {'ashleywu@ucla.edu'}\n        </Button>\n    ) : (\n        <div />\n    );\n    var time = item.time;\n    time = time.slice(0, 10);\n    return (\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n                <Avatar alt=\"Remy Sharp\" src={item.picture} size=\"150\" />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <Typography component=\"span\" color=\"textPrimary\" variant=\"display1\">\n                        {item.name}\n                    </Typography>\n                }\n                secondary={\n                    <React.Fragment>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"subtitle1\">\n                            <Row>\n                                <Col xs={4}>{reserved}</Col>\n                                <Col xs={{ size: 3, offset: 1 }}>{phone}</Col>\n                                <Col xs={{ size: 3 }}>{email}</Col>\n                            </Row>\n                        </Typography>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"body2\">\n                            {time}\n                        </Typography>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"body2\">\n                            Price: ${item.price}\n                        </Typography>\n                        <Row>\n                            <Col xs={4}>Description: {item.detail}</Col>\n                            {item.reserved.isReserved ? (\n                                <Col xs={{ size: 4, offset: 4 }}>\n                                    <Button\n                                        size=\"medium\"\n                                        bsStyle=\"primary\"\n                                        bsSize=\"large\"\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        onClick={() => unreserveItem(item.id)}\n                                    >\n                                        CANCEL TRANSACTION\n                                    </Button>\n                                </Col>\n                            ) : (\n                                <Col xs={{ size: 3, offset: 5 }} />\n                            )}\n                        </Row>\n                    </React.Fragment>\n                }\n            />\n        </ListItem>\n    );\n}\n\nclass PostList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.unreserveItem = this.unreserveItem.bind(this);\n        this.renderItem = this.renderItem.bind(this);\n    }\n\n    renderItem(filterCriteria) {\n        return this.props.sellItems.filter(filterCriteria).map((item) => {\n            return (\n                <div key={item.id} className=\"row align-items-start\">\n                    <div className=\"col-12 col-md m-1\">\n                        <RenderListItem\n                            item={item}\n                            props={this.props.renderOngoing}\n                            unreserveItem={this.unreserveItem}\n                        />\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    unreserveItem(key) {\n        this.props.unreserveItem(key);\n        setTimeout(() => this.forceUpdate(), 500);\n    }\n\n    render() {\n        if (!this.props.isLoggedIn) {\n            return (\n                <div className=\"container start-of-home\">\n                    <div className=\"col-12\">\n                        <h3>Please Login First</h3>\n                        <hr />\n                    </div>\n                </div>\n            );\n        }\n        var arr = [];\n        if (!this.props.renderOngoing) {\n            for (let key in this.props.users.userInfo.posts) {\n                if (this.props.users.userInfo.posts.hasOwnProperty(key)) {\n                    arr.push(this.props.users.userInfo.posts[key]);\n                }\n            }\n        } else {\n            for (let i = 0; i < this.props.sellItems.length; i++) {\n                let item = this.props.sellItems[i];\n                if (item.reserved.name === this.props.users.userInfo.name) {\n                    arr.push(item.id);\n                }\n            }\n        }\n\n        var reservedItems = this.renderItem((item) => arr.indexOf(item.id) >= 0 && item.reserved.isReserved);\n        if (!this.props.renderOngoing) {\n            reservedItems = reservedItems.concat(\n                this.renderItem((item) => arr.indexOf(item.id) >= 0 && !item.reserved.isReserved)\n            );\n        }\n\n        const title = this.props.renderOngoing === true ? 'My Ongoing Posts' : 'My Posts';\n\n        return (\n            <div className=\"container start-of-home\">\n                <div className=\"col-12\">\n                    <h3>{title}</h3>\n                    <hr />\n                </div>\n                <div style={divStyle}>\n                    <List>{reservedItems}</List>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PostList;\n","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Profile from './ProfileComponent';\nimport Header from './HeaderComponent';\nimport SideBar from './SideBarComponent';\nimport PostList from './PostListComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n    filterResults,\n    fetchItems,\n    postItem,\n    fetchUserInfo,\n    reserveItem,\n    logoutUser,\n    unreserveItem\n} from '../redux/ActionCreators';\nimport { checkLoginInfo } from '../shared/validators';\nimport * as MessageTypes from '../shared/MessageTypes';\nimport { actions } from 'react-redux-form';\n\nimport '../style.css';\n\nconst mapStateToProps = (state) => {\n    return {\n        sellItems: state.sellItems,\n        users: state.users,\n        loginError: state.users.error\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    postItem: (item) => dispatch(postItem(item)),\n    logoutUser: () => {\n        dispatch(logoutUser());\n    },\n    filterResults: (searchText) => {\n        dispatch(filterResults(searchText));\n    },\n    fetchItems: () => {\n        dispatch(fetchItems());\n    },\n    resetNewPostForm: () => {\n        dispatch(actions.reset('newPost'));\n    },\n    reserveItem: (key, name, email, tel) => {\n        dispatch(reserveItem(key, name, email, tel));\n    },\n    unreserveItem: (key) => {\n        dispatch(unreserveItem(key));\n    },\n    formatPhoneNumbers: (values, normalizer) => {\n        dispatch(actions.change('register.tel', normalizer(values)));\n    },\n    fetchUserInfo: (username, password) => {\n        dispatch(actions.setPending('login.username', true));\n        dispatch(actions.setPending('login.password', true));\n\n        checkLoginInfo(username, password).then((message) => {\n            let valid = {\n                username: true,\n                password: true\n            };\n            if (message === MessageTypes.SUCCESS) {\n                dispatch(fetchUserInfo(username));\n                dispatch(actions.reset('login.password'));\n            } else if (message === MessageTypes.USER_NOT_EXIST) {\n                valid.username = false;\n            } else if (message === MessageTypes.PASSWORD_WRONG) {\n                valid.password = false;\n            }\n            dispatch(\n                actions.setValidity('login.username', {\n                    isLoginValid: valid.username\n                })\n            );\n            dispatch(\n                actions.setValidity('login.password', {\n                    isLoginValid: valid.password\n                })\n            );\n            dispatch(actions.setPending('login.username', false));\n            dispatch(actions.setPending('login.password', false));\n        });\n    }\n});\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: false,\n            isSideNavOpen: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleSideNav = this.toggleSideNav.bind(this);\n        this.handleStateChange = this.handleStateChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.fetchItems();\n    }\n\n    handleStateChange(state) {\n        this.setState({\n            isSideNavOpen: state.isOpen\n        });\n    }\n\n    toggleSideNav() {\n        this.setState({\n            isSideNavOpen: !this.state.isSideNavOpen\n        });\n    }\n\n    handleSubmit(event) {\n        this.setState({\n            loggedIn: true\n        });\n        event.preventDefault();\n    }\n\n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    sellItems={this.props.sellItems.sellItems}\n                    reserveItem={this.props.reserveItem}\n                    users={this.props.users}\n                />\n            );\n        };\n\n        const PostPage = () => {\n            return (\n                <PostList\n                    sellItems={this.props.sellItems.sellItems}\n                    users={this.props.users}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                    unreserveItem={this.props.unreserveItem}\n                />\n            );\n        };\n\n        const ProfilePage = () => {\n            return (\n                <Profile\n                    userInfo={this.props.users.userInfo}\n                    StoreUserInfo={this.props.StoreUserInfo}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                />\n            );\n        };\n\n        const OngoingPage = () => {\n            return (\n                <PostList\n                    sellItems={this.props.sellItems.sellItems}\n                    users={this.props.users}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                    renderOngoing={true}\n                />\n            );\n        };\n\n        return (\n            <div id=\"App\">\n                <SideBar\n                    noOverlay\n                    users={this.props.users}\n                    pageWrapId={'page-wrapper'}\n                    outerContainerId={'App'}\n                    isOpen={this.state.isSideNavOpen}\n                    onStateChange={(state) => this.handleStateChange(state)}\n                    toggleSideNav={this.toggleSideNav}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                    fetchUserInfo={this.props.fetchUserInfo}\n                    logoutUser={this.props.logoutUser}\n                    formatPhoneNumbers={this.props.formatPhoneNumbers}\n                />\n                <div id=\"page-wrapper\">\n                    <Header\n                        filterResults={this.props.filterResults}\n                        fetchItems={this.props.fetchItems}\n                        toggleSideNav={this.toggleSideNav}\n                        resetNewPostForm={this.props.resetNewPostForm}\n                        postItem={this.props.postItem}\n                        isLoggedIn={this.props.users.isLoggedIn}\n                        fetchUserInfo={this.props.fetchUserInfo}\n                        loginError={this.props.loginError}\n                        users={this.props.users}\n                        formatPhoneNumbers={this.props.formatPhoneNumbers}\n                    />\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route path=\"/profile\" component={ProfilePage} />\n                        <Route path=\"/ongoing\" component={OngoingPage} />\n                        <Route path=\"/posts\" component={PostPage} />\n                        <Redirect to=\"/\" />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Main)\n);\n","import * as ActionTypes from './ActionTypes';\n\nexport const sellItems = (\n    state = {\n        isLoading: false,\n        sellItems: [],\n        err: null,\n        origSellItems: []\n    },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.RESERVE_ITEM: {\n            console.log(action.payload);\n            const key = action.payload.key;\n            for (let i = 0; i < state.sellItems.length; i++) {\n                if (state.sellItems[i]['id'] === key) {\n                    state.sellItems[i]['reserved'] = action.payload.reserved;\n                    break;\n                }\n            }\n            return state;\n        }\n        case ActionTypes.UNRESERVE_ITEM: {\n            console.log(action.payload);\n            const key = action.payload;\n            for (let i = 0; i < state.sellItems.length; i++) {\n                if (state.sellItems[i]['id'] === key) {\n                    state.sellItems[i]['reserved']['isReserved'] = false;\n                    break;\n                }\n            }\n            return state;\n        }\n        case ActionTypes.FILTER:\n            var searchText = action.payload.searchText;\n            return {\n                ...state,\n                isLoading: false,\n                err: null,\n                sellItems: state.origSellItems\n                    .filter((item) => {\n                        if (item.name.toLowerCase().includes(searchText.toLowerCase())) {\n                            return true;\n                        }\n                        if (item.keywords && item.keywords.includes(searchText)) {\n                            return true;\n                        }\n                        return false;\n                    })\n                    .slice(0, action.payload.maxResults)\n            };\n        case ActionTypes.ADD_ITEM:\n            return {\n                ...state,\n                sellItems: state.sellItems.concat(action.payload),\n                origSellItems: state.origSellItems.concat(action.payload)\n            };\n        case ActionTypes.ADD_ITEMS:\n            return { ...state, isLoading: false, err: null, sellItems: action.payload, origSellItems: action.payload };\n        case ActionTypes.ITEMS_LOADING:\n            return { ...state, isLoading: true, err: null, sellItems: [], origSellItems: [] };\n        case ActionTypes.ITEMS_FAILED:\n            return { ...state, isLoading: false, err: action.payload, sellItems: [], origSellItems: [] };\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Users = (\n    state = {\n        isLoggedIn: false,\n        username: '',\n        userInfo: [],\n        error: null\n    },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.LOG_IN:\n            return {\n                ...state,\n                isLoggedIn: true,\n                username: action.username,\n                userInfo: action.userInfo,\n                error: null\n            };\n        case ActionTypes.LOG_OUT:\n            return {\n                ...state,\n                isLoggedIn: false,\n                username: '',\n                userInfo: [],\n                error: null\n            };\n        case ActionTypes.ADD_ITEM_USER:\n            return {\n                ...state,\n                userInfo: {\n                    ...state.userInfo,\n                    posts: state.userInfo.posts.concat(action.payload)\n                }\n            };\n        case ActionTypes.SIGN_UP:\n            return {\n                ...state,\n                isLoggedIn: true,\n                username: action.username,\n                password: action.password\n            };\n        case ActionTypes.LOG_IN_FAILED:\n            return {\n                ...state,\n                isLoggedIn: false,\n                username: '',\n                userInfo: [],\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n};\n","export const InitialLogin = {\n    username: '',\n    password: ''\n};\n\nexport const InitialRegister = {\n    name: '',\n    username: '',\n    password: '',\n    email: '',\n    phone: ''\n};\n\nexport const InitialPost = {\n    itemName: '',\n    itemPrice: '',\n    itemDes: '',\n    pictures: '',\n    agreeTerms: false\n};\n\nexport const InitialProfile = {\n    email: '',\n    tel: ''\n}\n\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <div>\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { sellItems } from './items';\nimport { Users } from './users';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialLogin, InitialRegister, InitialPost, InitialProfile } from './InitStates';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            sellItems: sellItems,\n            users: Users,\n            ...createForms({\n                newPost: InitialPost,\n                login: InitialLogin,\n                register: InitialRegister,\n                profile: InitialProfile\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}