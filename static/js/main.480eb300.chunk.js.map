{"version":3,"sources":["components/ReserveModalComponent.jsx","components/SaveModalComponent.jsx","components/HomeComponent.jsx","components/ProfileComponent.jsx","firebase.js","firebaseConfig.js","redux/ActionCreators.jsx","redux/ActionTypes.jsx","components/RegisterComponent.jsx","components/LoginComponent.jsx","components/SearchComponent.jsx","components/ImageUploadComponent.jsx","components/NewPostComponent.jsx","components/HeaderComponent.jsx","components/SideBarComponent.jsx","components/PostListComponent.jsx","components/MainComponent.jsx","redux/items.jsx","redux/users.jsx","redux/posts.jsx","redux/login.jsx","App.jsx","redux/configureStore.jsx","serviceWorker.jsx","index.jsx"],"names":["ModalExample","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","toggle","bind","assertThisInitialized","onSubmit","setState","event","console","log","reserveItem","alert","preventDefault","item","id","react_default","a","createElement","reactstrap_es","block","color","className","onClick","isOpen","name","seller","React","Component","RenderCard","_ref","top","width","src","picture","alt","style","word-wrap","price","dist_default","date","time","format","detail","xl","size","offset","ReserveModalComponent","SaveModalComponent","Home","sellItems","map","key","Profile","username","connect","users","isLoggedin","isLoggedIn","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","itemsRef","ref","usersRef","reserve","type","payload","addItems","items","itemsLoading","itemsFailed","err","loginFailed","error","login","password","userInfo","Register","email","phone","onChange","e","defineProperty","target","value","StoreUserInfo","_this2","handleLogin","htmlFor","innerRef","input","required","val","length","Login","values","fetchUserInfo","background","lib","model","md","text","placeholder","validators","show","messages","RegisterComponent","SearchComponent","handleChange","filterResults","ImageUpload","onPreviewDrop","files","reader","FileReader","readAsDataURL","onloadend","curPath","result","preview","handleCheck","concat","deleteFile","file","filter","el","some","previewStyle","display","height","Fragment","dist_es","accept","onDrop","react","i","NewPost","toggleModal","handleSubmit","resetNewPostForm","postItem","itemName","parseInt","itemPrice","reserved","Date","toISOString","itemDes","textarea","rows","ImageUploadComponent","check","checkbox","Header","isModalOpen","toggleSideNav","dark","fixed","navbar","components_SearchComponent","fetchItems","loginError","NewPostComponent","LoginComponent","SideBar","BurgerMenu","react_avatar_es","round","NavLink","to","divStyle","padding","margin","RenderListItem","slice","ListItem_default","alignItems","ListItemAvatar_default","ListItemText_default","primary","Typography_default","component","variant","secondary","PostList","arr","posts","hasOwnProperty","push","indexOf","List_default","Main","loggedIn","isSideNavOpen","handleStateChange","SideBarComponent","noOverlay","pageWrapId","outerContainerId","onStateChange","HeaderComponent","Switch","Route","exact","path","HomeComponent","PostListComponent","Redirect","withRouter","dispatch","then","snapshot","addItem","child","searchText","maxResults","arguments","undefined","once","rawItems","Error","catch","message","actions","reset","update","resetLoginForm","isLoading","origSellItems","action","objectSpread","toLowerCase","includes","keywords","Users","InitialPost","pictures","agreeTerms","InitialLogin","store","createStore","combineReducers","createForms","newPost","applyMiddleware","thunk","logger","App","es","BrowserRouter","basename","process","MainComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.480eb300.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  onSubmit(event) {\n    console.log('function?');\n    console.log(this.props);\n    console.log(this.props.reserveItem);\n    alert(\"Reserved Successful!\");\n    event.preventDefault();\n    this.toggle();\n    this.props.reserveItem(this.props.item.id);\n  }\n\n  render() {\n    return (\n      <div>\n        <Button block color=\"primary\" className=\"item-button\" onClick={this.toggle} >Reserve</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>Reserve Item</ModalHeader>\n          <ModalBody>\n            You are about to reserve the item \"{this.props.item.name}\" from {this.props.item.seller}.<br />\n            Are you sure?<br /> <br />\n            You will be able to see the seller's contact information \n            and continue with this deal under the \"<span className=\"fa fa-exchange fa-lg\" /> Ongoing\" section in the sidebar.\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.onSubmit} >Confirm</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalExample;","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalExample extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block color=\"danger\" className=\"item-button\" onClick={this.toggle}>\n                    Save\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Save Item</ModalHeader>\n                    <ModalBody>\n                        You are about to save the item \"{this.props.item.name}\" from {this.props.item.seller}.<br />\n                        You will be able to view this item under \"<span className=\"fa fa-heart-o fa-lg\" /> Saved Items\"\n                        in the sidebar.\n                        <br /> <br />\n                        Saving will not reserve this item for you.\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.toggle}>\n                            Confirm\n                        </Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>\n                            Cancel\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalExample;\n","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardDeck, CardSubtitle, Row, Col } from 'reactstrap';\nimport ReserveModal from './ReserveModalComponent';\nimport SaveModal from './SaveModalComponent';\nimport Moment from 'react-moment';\n\nfunction RenderCard({ item, reserveItem }) {\n    return (\n        <Card>\n            <CardImg top width=\"100%\" className=\"card-img-top img-fluid\" src={item.picture} alt={item.name} />\n            <CardBody>\n                <CardTitle className=\"card-title\">\n                    <span style={{'width': '27.3vw', 'word-wrap': 'break-word'}}> {item.name} </span>\n                    <span> ${item.price}</span>\n                </CardTitle>\n                <CardSubtitle>\n                    {item.seller}\n                    <br />\n                    <Moment date={item.time} format=\"MMM D YYYY HH:MM\" />\n                </CardSubtitle>\n                <CardText style={{'width': '27.3vw', 'word-wrap': 'break-word'}}>{item.detail}</CardText>\n                <Row>\n                    <Col xl={{ size: 4, offset: 1 }}>\n                        <ReserveModal item={item} reserveItem={reserveItem} />\n                    </Col>\n                    <Col xl={{ size: 4, offset: 2 }}>\n                        <SaveModal item={item} />\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nfunction Home(props) {\n    const sellItems = props.sellItems.map((item) => {\n        return (\n            <div key={item.id} className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={item} reserveItem={props.reserveItem} />\n                </div>\n            </div>\n        );\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"row start-of-home\">\n                <div className=\"col-12\">\n                    <h3>Items On Sale</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">\n                <CardDeck>{sellItems}</CardDeck>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n  Jumbotron,\n  Button,\n  ModalHeader,\n  Modal,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Jumbotron>\n        <div className=\"container\">\n          <div className=\"row row-header\">\n            <div className=\"col-12 col-sm-6\">\n              <h1>Hello {this.props.username},</h1>\n            </div>\n          </div>\n        </div>\n      </Jumbotron>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  username: state.users.username,\n  isLoggedin: state.users.isLoggedIn\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Profile);\n","import firebase from 'firebase';\nimport { config } from './firebaseConfig';\n\nfirebase.initializeApp(config);\nvar database = firebase.database();\n\nexport const itemsRef = database.ref('bruinmart/items/');\nexport const usersRef = database.ref('bruinmart/users/');\n","export const config = {\n    apiKey: 'AIzaSyDpr5SspydURpwNzpjr2F9kmC1WLwQaH9w',\n    authDomain: 'jerrylzylzy.firebaseapp.com',\n    databaseURL: 'https://jerrylzylzy.firebaseio.com',\n    projectId: 'jerrylzylzy',\n    storageBucket: 'jerrylzylzy.appspot.com',\n    messagingSenderId: '1089192741461'\n};","import * as ActionTypes from './ActionTypes';\nimport { itemsRef, usersRef } from '../firebase';\n\nexport const filterResults = (searchText, maxResults = 20) => ({\n    type: ActionTypes.FILTER,\n    payload: {\n        searchText: searchText,\n        maxResults: maxResults\n    }\n});\n\n//  This is a thunk\n\nexport const fetchItems = () => (dispatch) => {\n    dispatch(itemsLoading(true));\n\n    return itemsRef\n        .once('value')\n        .then((snapshot) => {\n            var rawItems = snapshot.val();\n            console.log(rawItems);\n            if (rawItems === null) throw Error('Fetch failed.');\n            var sellItems = [];\n            for (var key in rawItems) {\n                if (rawItems.hasOwnProperty(key)) {\n                    var item = rawItems[key];\n                    item.id = key;\n                    sellItems.push(item);\n                }\n            }\n            dispatch(addItems(sellItems));\n        })\n        .catch((error) => dispatch(itemsFailed(error.message)));\n};\n\nexport const reserveItem = (key) => (dispatch) => {\n    \n    return itemsRef\n        .child('/' + key).update({reserved: true})\n        .then((error) => {\n            if (error)\n                throw error;\n            console.log('error checking');\n            dispatch(reserve(key))\n        })\n        .catch((error) => dispatch(itemsFailed(error.message)));\n}\n\nexport const reserve = (key) => ({\n    type: ActionTypes.RESERVE_ITEM,\n    payload: key\n});\n\nexport const addItems = (items) => ({\n    type: ActionTypes.ADD_ITEMS,\n    payload: items\n});\n\nexport const itemsLoading = () => ({\n    type: ActionTypes.ITEMS_LOADING\n});\n\nexport const itemsFailed = (err) => ({\n    type: ActionTypes.ITEMS_FAILED,\n    payload: err\n});\n\nexport const addItem = (item) => ({\n    type: ActionTypes.ADD_ITEM,\n    payload: item\n});\n\nexport const addItemToUser = (itemKey) => ({\n    type: ActionTypes.ADD_ITEM_USER,\n    payload: itemKey\n});\n\nexport const postItem = (item) => (dispatch) => {\n    return itemsRef.push(item).then(function(snapshot) {\n        item.id = snapshot.key;\n        dispatch(addItem(item));\n        usersRef.child(item.username + '/posts/').push(item.id);\n        dispatch(addItemToUser(item.id));\n    });\n};\n\nexport const fetchUserInfo = (username, password) => (dispatch) => {\n    return usersRef\n        .child(username)\n        .once('value')\n        .then((snapshot) => {\n            var userInfo = snapshot.val();\n            if (userInfo === null) {\n                alert('Username does not exist.');\n                throw Error('Username does not exist.');\n            }\n\n            if (userInfo.password !== password) {\n                alert('Password is wrong!');\n                throw Error('Password is wrong!');\n            }\n\n            var posts = [];\n            for (var key in userInfo.posts) {\n                if (userInfo.posts.hasOwnProperty(key)) {\n                    posts.push(userInfo.posts[key]);\n                }\n            }\n            userInfo.posts = posts;\n            dispatch(login(username, password, userInfo));\n        })\n        .catch((error) => {\n            dispatch(loginFailed(error.message));\n        });\n};\n\nexport const loginFailed = (error) => ({\n    type: ActionTypes.LOG_IN_FAILED,\n    payload: error\n});\n\n//actions for login logout\nexport const login = (username, password, userInfo) => {\n    return {\n        type: ActionTypes.LOG_IN,\n        username: username,\n        password: password,\n        userInfo: userInfo\n    };\n};\n\nexport const logout = () => {\n    return {\n        type: ActionTypes.LOG_OUT\n    };\n};\n\nexport const StoreUserInfo = (username, password, email, phone) => {\n    console.log('store');\n    return {\n        type: ActionTypes.SIGN_UP,\n        username: username,\n        password: password\n    };\n};\n\nexport const signup = (username, password) => {\n    return {\n        type: ActionTypes.SIGN_UP,\n        username: username,\n        password: password\n    };\n};\n","export const FILTER = 'FILTER';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\nexport const ITEMS_FAILED = 'ITEMS_FAILED';\nexport const ADD_ITEMS = 'ADD_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const POST_ITEMS = 'POST_ITEMS';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const SIGN_UP = 'SIGN_UP';\nexport const ADD_ITEM_USER = 'ADD_ITEM_USER';\nexport const RESERVE_ITEM = 'RESERVE_ITEM';\nexport const GET_USER_POST = 'GET_USER_POST';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Button, ModalHeader, Modal, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { StoreUserInfo } from '../redux/ActionCreators';\nimport { connect } from 'react-redux';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modal: false,\n            username: '',\n            password: '',\n            email: '',\n            phone: ''\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n        e.preventDefault();\n    }\n\n    onClick() {\n        this.toggle();\n        console.log('func');\n        this.props.StoreUserInfo(this.state.username, this.state.password, this.state.email, this.state.phone);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block className=\"item-button\" onClick={this.toggle} color=\"secondary\">\n                    Register\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input\n                                    type=\"text\"\n                                    id=\"username\"\n                                    name=\"username\"\n                                    onChange={this.onChange}\n                                    value={this.state.username}\n                                    //innerRef={(input) => (this.username = input)}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    //innerRef={(input) => (this.password = input)}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"email\">Email</Label>\n                                <Input\n                                    type=\"email\"\n                                    id=\"email\"\n                                    name=\"email\"\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    //innerRef={(input) => (this.password = input)}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"tel\">Contact number</Label>\n                                <Input\n                                    type=\"tel\"\n                                    id=\"tel\"\n                                    name=\"tel\"\n                                    //onChange={this.onChange}\n                                    //value={this.state.phone}\n                                    innerRef={(input) => (this.phone = input)}\n                                />\n                            </FormGroup>\n\n                            <Button type=\"submit\" value=\"submit\" onClick={() => this.onClick()} color=\"primary\">\n                                Register\n                            </Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    username: state.users.username,\n    password: state.users.password,\n    isLoggedin: state.users.isLoggedIn\n});\n\nexport default connect(\n    mapStateToProps,\n    { StoreUserInfo }\n)(Register);\n","import React, { Component } from 'react';\nimport { Button, ModalHeader, Modal, ModalBody, Label, Row, Col } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nimport Register from './RegisterComponent';\n\nconst required = (val) => val && val.length;\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(values) {\n        this.props.fetchUserInfo(values.username, values.password);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button style={{ background: 'transparent' }} onClick={this.toggle}>\n                    <span className=\"fa fa-sign-in\" /> Login\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"login\" onSubmit={(values) => this.onSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".username\" md={2}>\n                                    Username\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model=\".username\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        placeholder=\"Username\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".username\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            error: 'Username doesn\\'t exist!'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".password\" md={2}>\n                                    Last Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.password\n                                        model=\".password\"\n                                        id=\"password\"\n                                        name=\"password\"\n                                        placeholder=\"Password\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".password\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xl={{ size: 3, offset: 1 }}>\n                                    <Register />\n                                </Col>\n                                <Col xl={{ size: 3, offset: 4 }}>\n                                    <Button\n                                        block\n                                        className=\"item-button\"\n                                        value=\"submit\"\n                                        color=\"primary\"\n                                    >\n                                        Login\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport '../SearchInput.css';\n\nclass SearchComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.filterResults(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"component-search-input\">\n                <div>\n                    <input placeholder=\"Search Here\" style={{ color: 'white' }} onChange={this.handleChange} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchComponent;\n","import React, { Component, Fragment } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Col, Row, Button } from 'reactstrap';\n\nclass ImageUpload extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            files: []\n        };\n\n        this.deleteFile = this.deleteFile.bind(this);\n        this.onPreviewDrop = this.onPreviewDrop.bind(this);\n    }\n\n    handleCheck(val) {\n        return this.state.files.some(item => val.name === item.name);\n    }\n\n    onPreviewDrop = (files) => {\n        var reader = new FileReader();\n        reader.readAsDataURL(files[0]);\n        reader.onloadend=()=>{\n            const curPath = reader.result;\n            files[0].preview=curPath;\n            if(this.handleCheck(files[0])){\n                alert(\"Please do not upload the same image twice!\");\n            }\n            else{\n                this.setState({\n                    files: this.state.files.concat(files[0])\n                });\n            }\n        }\n    };\n\n    deleteFile = (file)=>{\n        this.setState({\n            files: this.state.files.filter(el => el!==file )\n        });\n    }\n\n    render() {\n        const previewStyle = {\n            display: 'inline',\n            width: 100,\n            height: 100\n        };\n\n        return (\n            <>\n                <Dropzone className=\"dropzone\" accept=\"image/*\" onDrop={this.onPreviewDrop}>\n                    <div className=\"upload-box\">Drag your image here or click the box to browse your local files.</div>\n                </Dropzone>\n                {this.state.files.length > 0 && (\n                    <Fragment>\n                        <h4>Uploaded Pictures</h4>\n                        {this.state.files.map((file,i) => (\n                            <div key={i}>\n                            <img alt={file.name} key={file.preview} src={file.preview} style={previewStyle} />\n                            {file.name}{' '}\n                            <Button value=\"delete\" onClick={()=>this.deleteFile(file)}>delete</Button>\n                            </div>\n                        ))}\n                        {console.log(this.state.files)}\n                    </Fragment>\n                )}\n            </>\n        );\n    }\n}\n\nexport default ImageUpload;\n","import React from 'react';\nimport { Button, Label, FormText, Modal, ModalHeader, ModalBody, Col, Row } from 'reactstrap';\nimport ImageUpload from './ImageUploadComponent';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nclass NewPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n\n    handleSubmit(values) {\n        alert(\"Post Successful!\");\n        this.props.resetNewPostForm();\n        this.props.postItem({\n            name: values.itemName,\n            price: parseInt(values.itemPrice),\n            picture:\n                'https://s7d4.scene7.com/is/image/roomandboard/?layer=0&size=498,400&scl=1&src=964101_wood_W&layer=comp&$prodzoom0$',\n            reserved: false,\n            seller: 'Joe Bruin',\n            time: new Date().toISOString(),\n            detail: values.itemDes,\n            username: 'jerry'\n        });\n        this.toggleModal();\n    }\n\n    render() {\n        return (\n            <div>\n                <Button style={{ background: 'transparent' }} onClick={this.toggleModal}>\n                    <span className=\"fa fa-plus fa-lg\" />\n                </Button>\n                <Modal className=\"modal-lg\" isOpen={this.state.modal} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>New Post</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"newPost\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".itemName\" md={2}>\n                                    <b>Name</b>\n                                </Label>\n                                <Col md={9}>\n                                    <Control.text\n                                        model=\".itemName\"\n                                        id=\"itemName\"\n                                        name=\"itemName\"\n                                        placeholder=\"Enter the name of the item you want to sell\"\n                                        className=\"form-control\"\n                                        // validators={{\n                                        //     required,\n                                        //     minLength: minLength(3),\n                                        //     maxLength: maxLength(15)\n                                        // }}\n                                    />\n                                    {/* <Errors\n                                        className=\"text-danger\"\n                                        model=\".itemName\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    /> */}\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".itemPrice\" md={2}>\n                                    <b>Price</b>\n                                </Label>\n                                {/* <Col md={0.3}><span className=\"fa fa-dollar fa-lg\" /></Col> */}\n                                <Col md={4}>\n                                    <Control.text\n                                        model=\".itemPrice\"\n                                        id=\"itemPrice\"\n                                        name=\"itemPrice\"\n                                        placeholder=\"Enter your price in US dollars\"\n                                        className=\"form-control\"\n                                        // validators={{\n                                        //     required,\n                                        //     minLength: minLength(3),\n                                        //     maxLength: maxLength(15)\n                                        // }}\n                                    />\n                                    {/* <Errors\n                                    className=\"text-danger\"\n                                    model=\".lastName\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                /> */}\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".itemDes\" md={2}>\n                                    <b>Item Description</b>\n                                </Label>\n                                <Col md={9}>\n                                    <Control.textarea\n                                        model=\".itemDes\"\n                                        id=\"itemDes\"\n                                        name=\"itemDes\"\n                                        placeholder=\"Enter a few lines to describe your item and outline anything potential buyers may need to know\"\n                                        className=\"form-control\"\n                                        rows=\"4\"\n                                    />\n                                </Col>\n                            </Row>\n                            {/* <FormGroup>\n          <Label htmlFor=\"exampleSelectMulti\">Select Multiple</Label>\n          <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple>\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </Input>\n        </FormGroup> */}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".pictures\" md={2}>\n                                    <b>Pictures</b>\n                                </Label>\n                                {/* <Input type=\"file\" name=\"file\" id=\"exampleFile\" /> */}\n                                <Col md={9}>\n                                    <FormText color=\"muted\">Upload a picture for your item here.</FormText>\n                                    <ImageUpload name=\"itemPic\" id=\"itemPic\" className=\"form-control\"/>\n                                </Col>\n                            </Row>\n                            {/* <FormGroup tag=\"fieldset\">\n          <legend>Radio Buttons</legend>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Option one is this and that—be sure to include why it's great\n            </Label>\n          </FormGroup>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Option two can be something else and selecting it will deselect option one\n            </Label>\n          </FormGroup>\n          <FormGroup check disabled>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" disabled />{' '}\n              Option three is disabled\n            </Label>\n          </FormGroup>\n        </FormGroup> */}\n                            <Row className=\"form-group\">\n                                <Col>\n                                    <div className=\"form-check\">\n                                        <Label check md={{size: 9, offset: 2}}>\n                                            <Control.checkbox\n                                                model=\".agreeTerms\"\n                                                name=\"agreeTerms\"\n                                                className=\"form-check-input\"\n                                            />{' '}\n                                            I understand that my information will only be provided to any potential\n                                            buyers after they have reserved my item.\n                                        </Label>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 3, offset: 2 }}>\n                                    <Button block type=\"submit\" value=\"submit\" color=\"primary\">\n                                        Post\n                                    </Button>\n                                </Col>\n                                <Col md={{ size: 3, offset: 3 }}>\n                                    <Button block color=\"secondary\" onClick={this.toggleModal}>\n                                        Cancel\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default NewPost;\n","import React, { Component } from 'react';\nimport Login from './LoginComponent';\nimport Register from './RegisterComponent';\nimport SearchComponent from './SearchComponent';\nimport NewPostModal from './NewPostComponent';\nimport { Navbar, Nav, NavbarToggler, NavItem } from 'reactstrap';\n\nfunction RenderButton(isLoggedIn, resetNewPostForm, postItem, fetchUserInfo, loginError) {\n    if (isLoggedIn) {\n        return <NewPostModal resetNewPostForm={resetNewPostForm} postItem={postItem} />;\n    } else {\n        return <Login fetchUserInfo={fetchUserInfo} loginError={loginError} />;\n    }\n}\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.toggleSideNav = this.props.toggleSideNav.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar dark fixed=\"top\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleSideNav} />\n\n                        <Nav className=\"col-8\" navbar>\n                            <NavItem>\n                                <SearchComponent\n                                    filterResults={this.props.filterResults}\n                                    fetchItems={this.props.fetchItems}\n                                />\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"col-2\" navbar>\n                            <NavItem>\n                                {RenderButton(\n                                    this.props.isLoggedIn,\n                                    this.props.resetNewPostForm,\n                                    this.props.postItem,\n                                    this.props.fetchUserInfo,\n                                    this.props.loginError\n                                )}\n                            </NavItem>\n                        </Nav>\n\n                        {/* <Nav className=\"md-mx-auto\">\n                                <NavItem>\n                                    <NavLink className=\"nav-link nav-buttons\" to=\"/home\">\n                                        <span className=\"fa fa-shopping-bag fa-lg\" />\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link nav-buttons\" to=\"/settings\">\n                                        <span className=\"fa fa-user fa-lg\" />\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link nav-buttons\" to=\"/newpost\">\n                                        <span className=\"fa fa-plus-square-o fa-lg\" />\n                                    </NavLink>\n                                </NavItem>\n                            </Nav> */}\n                    </div>\n                </Navbar>\n            </>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavbarBrand, Nav, NavItem } from 'reactstrap';\nimport { slide as Menu } from 'react-burger-menu';\nimport { NavLink } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport Login from './LoginComponent';\n\nfunction RenderSidebar(isLoggedIn, username, fetchUserInfo, loginError) {\n    if (isLoggedIn) {\n        return (\n            <div>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        <h4>{username}</h4>\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        <span className=\"fa fa-user fa-lg\" /> My Profile\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/posts\">\n                        <span className=\"fa fa-stack-exchange fa-lg\" /> My Posts\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/saved\">\n                        <span className=\"fa fa-heart-o fa-lg\" /> Saved Items\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/ongoing\">\n                        <span className=\"fa fa-exchange fa-lg\" /> Ongoing\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/sold\">\n                        <span className=\"fa fa-shopping-bag fa-lg\" /> Sold\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/settings\">\n                        <span className=\"fa fa-cog fa-lg\" /> Settings\n                    </NavLink>\n                </NavItem>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <NavItem>\n                    <h4>Please Log in</h4>\n                </NavItem>\n                <NavItem>\n                    <Login fetchUserInfo={fetchUserInfo} loginError={loginError} />\n                </NavItem>\n            </div>\n        );\n    }\n}\n\nconst SideBar = (props) => {\n    return (\n        // Pass on our props\n        <Menu {...props}>\n            <Nav navbar onClick={props.toggleSideNav}>\n                <NavbarBrand className=\"mr-auto col-2 col-sm-2\">\n                    <Avatar size={50} src=\"assets/images/joe_bruin.jpg\" round={true} />\n                </NavbarBrand>\n                {RenderSidebar(props.isLoggedIn, props.users.username, props.fetchUserInfo, props.loginError)}\n            </Nav>\n        </Menu>\n    );\n};\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from 'react-avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { itemsLoading } from '../redux/ActionCreators';\n\nvar divStyle = {\n    background: 'white',\n    padding: '0px',\n    margin: '0px'\n};\n\nfunction RenderListItem({ item }) {\n    var reserved = 'Not Reserved';\n    if (item.reserved == true) {\n        reserved = 'Reserved';\n    }\n    var time = item.time;\n    time = time.slice(0, 10);\n    return (\n        <ListItem alignItems=\"flex-start\" style={{ height: 200 }}>\n            <ListItemAvatar>\n                <Avatar alt=\"Remy Sharp\" src={item.picture} size=\"150\" />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <Typography component=\"span\" color=\"textPrimary\" variant=\"display1\">\n                        {item.name}\n                    </Typography>\n                }\n                secondary={\n                    <React.Fragment>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"title\">\n                            {reserved}\n                        </Typography>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"body2\">\n                            {time}\n                        </Typography>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"body2\">\n                            Price: ${item.price}\n                        </Typography>\n                        Description: {item.detail}\n                    </React.Fragment>\n                }\n            />\n        </ListItem>\n    );\n}\n\nfunction PostList(props) {\n    if (!props.isLoggedIn) {\n        return (\n            <div className=\"container\">\n                <div className=\"col-12\">\n                    <h3>Please Login First</h3>\n                    <hr />\n                </div>\n            </div>\n        );\n    }\n    const sellItems = props.sellItems.map((item) => {\n        //console.log(\"props.posts: \" + props.posts);\n        //console.log(\"item.id: \" + item.id);\n        //console.log(props.posts[item.id]);\n        var arr = [];\n        for (var key in props.posts) {\n            if (props.posts.hasOwnProperty(key)) {\n                //console.log(key);\n                //console.log(props.posts[key]);\n                arr.push(props.posts[key]);\n            }\n        }\n        if (arr.indexOf(item.id) < 0) {\n            return <div />;\n        } else {\n            console.log(item.id);\n            return (\n                <div key={item.id} className=\"row align-items-start\">\n                    <div className=\"col-12 col-md m-1\">\n                        <RenderListItem item={item} />\n                    </div>\n                </div>\n            );\n        }\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"col-12\">\n                <h3>My Posts</h3>\n                <hr />\n            </div>\n            <div style={divStyle}>\n                <List>{sellItems}</List>\n            </div>\n        </div>\n    );\n}\n\nexport default PostList;\n","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Profile from './ProfileComponent';\nimport Header from './HeaderComponent';\nimport SideBar from './SideBarComponent';\nimport PostList from './PostListComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { filterResults, fetchItems, postItem, fetchUserInfo, reserveItem } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\n\nimport '../style.css';\n\nconst mapStateToProps = (state) => {\n    return {\n        sellItems: state.sellItems,\n        users: state.users,\n        loginError: state.users.error\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    postItem: (item) => dispatch(postItem(item)),\n    filterResults: (searchText) => {\n        dispatch(filterResults(searchText));\n    },\n    fetchItems: () => {\n        dispatch(fetchItems());\n    },\n    resetNewPostForm: () => {\n        dispatch(actions.reset('newPost'));\n    },\n    reserveItem: (key) => {\n        dispatch(reserveItem(key));\n    },\n    resetLoginForm: () => {\n        dispatch(actions.reset('login'));\n    },\n    fetchUserInfo: (username, password, toggle) => {\n        dispatch(fetchUserInfo(username, password));\n    }\n});\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: false,\n            isSideNavOpen: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleSideNav = this.toggleSideNav.bind(this);\n        this.handleStateChange = this.handleStateChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.fetchItems();\n    }\n\n    handleStateChange(state) {\n        this.setState({\n            isSideNavOpen: state.isOpen\n        });\n    }\n\n    toggleSideNav() {\n        this.setState({\n            isSideNavOpen: !this.state.isSideNavOpen\n        });\n    }\n\n    handleSubmit(event) {\n        this.setState({\n            loggedIn: true\n        });\n        event.preventDefault();\n    }\n\n    render() {\n        const HomePage = () => {\n            return <Home sellItems={this.props.sellItems.sellItems} reserveItem={this.props.reserveItem} />;\n        };\n\n        const PostPage = () => {\n            return (\n                <PostList\n                    sellItems={this.props.sellItems.sellItems}\n                    posts={this.props.users.userInfo.posts}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                />\n            );\n        };\n\n        return (\n            <div id=\"App\">\n                <SideBar\n                    noOverlay\n                    users={this.props.users}\n                    pageWrapId={'page-wrapper'}\n                    outerContainerId={'App'}\n                    isOpen={this.state.isSideNavOpen}\n                    onStateChange={(state) => this.handleStateChange(state)}\n                    toggleSideNav={this.toggleSideNav}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                    fetchUserInfo={this.props.fetchUserInfo}\n                />\n                <div id=\"page-wrapper\">\n                    <Header\n                        filterResults={this.props.filterResults}\n                        fetchItems={this.props.fetchItems}\n                        toggleSideNav={this.toggleSideNav}\n                        resetNewPostForm={this.props.resetNewPostForm}\n                        postItem={this.props.postItem}\n                        isLoggedIn={this.props.users.isLoggedIn}\n                        fetchUserInfo={this.props.fetchUserInfo}\n                        loginError={this.props.loginError}\n                    />\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route path=\"/profile\" component={Profile} />\n                        <Route path=\"/posts\" component={PostPage} />\n                        <Redirect to=\"/\" />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Main)\n);\n","import * as ActionTypes from './ActionTypes';\nimport { itemsRef } from '../firebase';\n\nexport const sellItems = (\n    state = {\n        isLoading: false,\n        sellItems: [],\n        err: null,\n        origSellItems: []\n    },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.RESERVE_ITEM:           \n            var key = action.payload;\n            for (var i = 0; i < state.sellItems.length; i++){\n                if (state.sellItems[i]['id'] === key){\n                    state.sellItems[i]['reserved'] = true;\n                    console.log(state.sellItems[i]['reserved']);\n                    break;\n                }\n            }\n            return state;\n        case ActionTypes.FILTER:\n            var searchText = action.payload.searchText;\n            return {\n                ...state,\n                isLoading: false,\n                err: null,\n                sellItems: state.origSellItems\n                    .filter((item) => {\n                        if (item.name.toLowerCase().includes(searchText.toLowerCase())) {\n                            return true;\n                        }\n                        if (item.keywords && item.keywords.includes(searchText)) {\n                            return true;\n                        }\n                        return false;\n                    })\n                    .slice(0, action.payload.maxResults)\n            };\n        case ActionTypes.ADD_ITEM:\n            return {\n                ...state,\n                sellItems: state.sellItems.concat(action.payload),\n                origSellItems: state.origSellItems.concat(action.payload)\n            };\n        case ActionTypes.ADD_ITEMS:\n            return { ...state, isLoading: false, err: null, sellItems: action.payload, origSellItems: action.payload };\n        case ActionTypes.ITEMS_LOADING:\n            return { ...state, isLoading: true, err: null, sellItems: [], origSellItems: [] };\n        case ActionTypes.ITEMS_FAILED:\n            return { ...state, isLoading: false, err: action.payload, sellItems: [], origSellItems: [] };\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Users = (\n    state = {\n        isLoggedIn: false,\n        username: '',\n        userInfo: [],\n        error: null\n    },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.LOG_IN:\n            return {\n                ...state,\n                isLoggedIn: true,\n                username: action.username,\n                userInfo: action.userInfo,\n                error: null\n            };\n        case ActionTypes.LOG_OUT:\n            return {\n                ...state,\n                isLoggedIn: false,\n                username: '',\n                userInfo: [],\n                error: null\n            };\n        case ActionTypes.ADD_ITEM_USER:\n            return {\n                ...state,\n                userInfo: {\n                    ...state.userInfo,\n                    posts: state.userInfo.posts.concat(action.payload)\n                }\n            };\n        case ActionTypes.SIGN_UP:\n            console.log('sign_up');\n            return {\n                ...state,\n                isLoggedIn: true,\n                username: action.username,\n                password: action.password\n            };\n        case ActionTypes.LOG_IN_FAILED:\n            return {\n                ...state,\n                isLoggedIn: false,\n                username: '',\n                userInfo: [],\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n};\n","export const InitialPost = {\n    itemName: '',\n    itemPrice: '',\n    itemDes: '',\n    pictures: '',\n    agreeTerms: false\n};\n","export const InitialLogin = {\n    username: '',\n    password: ''\n};\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <div>\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { sellItems } from './items';\nimport { Users } from './users';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialPost } from './posts';\nimport { InitialLogin } from './login';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            sellItems: sellItems,\n            users: Users,\n            ...createForms({\n                newPost: InitialPost,\n                login: InitialLogin\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}