{"version":3,"sources":["components/ReserveModalComponent.jsx","components/SaveModalComponent.jsx","components/HomeComponent.jsx","components/ProfileComponent.jsx","firebase.js","firebaseConfig.js","redux/ActionCreators.jsx","redux/ActionTypes.jsx","components/RegisterComponent.jsx","components/LoginComponent.jsx","components/SearchComponent.jsx","components/ImageUploadComponent.jsx","components/NewPostComponent.jsx","components/HeaderComponent.jsx","components/SideBarComponent.jsx","components/PostListComponent.jsx","components/MainComponent.jsx","redux/items.jsx","redux/users.jsx","redux/posts.jsx","redux/login.jsx","App.jsx","redux/configureStore.jsx","serviceWorker.jsx","index.jsx"],"names":["ModalExample","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","toggle","bind","assertThisInitialized","onSubmit","setState","event","preventDefault","reserveItem","item","id","react_default","a","createElement","reactstrap_es","block","color","className","onClick","isOpen","name","seller","React","Component","RenderCard","_ref","top","width","src","picture","alt","style","wordWrap","price","dist_default","date","time","format","detail","xl","size","offset","ReserveModalComponent","SaveModalComponent","Home","sellItems","map","key","Profile","console","log","userInfo","email","tel","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","itemsRef","ref","usersRef","reserve","type","payload","addItems","items","itemsLoading","itemsFailed","err","fetchUserInfo","username","password","dispatch","child","once","then","snapshot","val","alert","Error","posts","hasOwnProperty","push","login","catch","error","loginFailed","message","Register","onChange","e","defineProperty","target","value","StoreUserInfo","_this2","handleLogin","row","htmlFor","xs","placeholder","connect","users","isLoggedin","isLoggedIn","phone","update","avatar","required","length","Login","values","background","lib","model","text","validators","show","messages","RegisterComponent","SearchComponent","handleChange","filterResults","ImageUpload","onPreviewDrop","files","reader","FileReader","readAsDataURL","onloadend","curPath","result","preview","handleCheck","concat","deleteFile","file","filter","el","some","previewStyle","display","height","Fragment","dist_es","accept","onDrop","react","i","isNumber","isNaN","Number","checked","NewPost","toggleModal","handleSubmit","resetNewPostForm","postItem","itemName","parseInt","itemPrice","reserved","Date","toISOString","itemDes","len","md","minLength","maxLength","textarea","rows","ImageUploadComponent","check","checkbox","Header","isModalOpen","toggleSideNav","dark","fixed","navbar","components_SearchComponent","fetchItems","NewPostComponent","LoginComponent","loginError","SideBar","avatarSrc","BurgerMenu","react_avatar_es","round","NavLink","to","divStyle","padding","margin","RenderListItem","slice","ListItem_default","alignItems","ListItemAvatar_default","ListItemText_default","primary","Typography_default","component","variant","secondary","PostList","arr","indexOf","List_default","Main","loggedIn","isSideNavOpen","handleStateChange","SideBarComponent","noOverlay","pageWrapId","outerContainerId","onStateChange","HeaderComponent","Switch","Route","exact","path","HomeComponent","ProfileComponent","PostListComponent","Redirect","withRouter","addItem","searchText","maxResults","arguments","undefined","rawItems","actions","reset","resetLoginForm","isLoading","origSellItems","action","objectSpread","toLowerCase","includes","keywords","Users","InitialPost","pictures","agreeTerms","InitialLogin","store","createStore","combineReducers","createForms","newPost","applyMiddleware","thunk","logger","App","es","BrowserRouter","basename","process","MainComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gVAgDeA,cA5Cb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,OAAO,GAGTR,EAAKS,OAAST,EAAKS,OAAOC,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACdA,EAAKY,SAAWZ,EAAKY,SAASF,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAPCA,wEAWjBG,KAAKU,SAAS,CACZL,OAAQL,KAAKI,MAAMC,yCAIdM,GACPA,EAAMC,iBACNZ,KAAKM,SACLN,KAAKJ,MAAMiB,YAAYb,KAAKJ,MAAMkB,KAAKC,qCAIvC,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,OAAK,EAACC,MAAM,UAAUC,UAAU,cAAcC,QAASvB,KAAKM,QAApE,WACAU,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOK,OAAQxB,KAAKI,MAAMC,MAAOC,OAAQN,KAAKM,OAAQgB,UAAWtB,KAAKJ,MAAM0B,WAC1EN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAab,OAAQN,KAAKM,QAA1B,gBACAU,EAAAC,EAAAC,cAACC,EAAA,EAAD,2CACsCnB,KAAKJ,MAAMkB,KAAKW,KADtD,UACmEzB,KAAKJ,MAAMkB,KAAKY,OADnF,IAC2FV,EAAAC,EAAAC,cAAA,WAD3F,gBAEeF,EAAAC,EAAAC,cAAA,WAFf,IAEsBF,EAAAC,EAAAC,cAAA,WAFtB,oGAIyCF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,yBAJzD,qCAMAN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQE,MAAM,UAAUE,QAASvB,KAAKS,UAAtC,WAAkE,IAClEO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQE,MAAM,YAAYE,QAASvB,KAAKM,QAAxC,oBArCeqB,IAAMC,WC6ClBjC,cA5CX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,OAAO,GAGXR,EAAKS,OAAST,EAAKS,OAAOC,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANCA,wEAUfG,KAAKU,SAAS,CACVL,OAAQL,KAAKI,MAAMC,yCAKvB,OACIW,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,OAAK,EAACC,MAAM,SAASC,UAAU,cAAcC,QAASvB,KAAKM,QAAnE,QAGAU,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOK,OAAQxB,KAAKI,MAAMC,MAAOC,OAAQN,KAAKM,OAAQgB,UAAWtB,KAAKJ,MAAM0B,WACxEN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAab,OAAQN,KAAKM,QAA1B,aACAU,EAAAC,EAAAC,cAACC,EAAA,EAAD,wCACqCnB,KAAKJ,MAAMkB,KAAKW,KADrD,UACkEzB,KAAKJ,MAAMkB,KAAKY,OADlF,IAC0FV,EAAAC,EAAAC,cAAA,WAD1F,6CAE8CF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,wBAF9D,gCAIIN,EAAAC,EAAAC,cAAA,WAJJ,IAIWF,EAAAC,EAAAC,cAAA,WAJX,8CAOAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQE,MAAM,UAAUE,QAASvB,KAAKM,QAAtC,WAEU,IACVU,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQE,MAAM,YAAYE,QAASvB,KAAKM,QAAxC,oBAnCGqB,IAAMC,6BCGjC,SAASC,EAATC,GAA2C,IAArBhB,EAAqBgB,EAArBhB,KAAMD,EAAeiB,EAAfjB,YACxB,OACIG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASY,KAAG,EAACC,MAAM,OAAOV,UAAU,yBAAyBW,IAAKnB,EAAKoB,QAASC,IAAKrB,EAAKW,OAC1FT,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWG,UAAU,cACjBN,EAAAC,EAAAC,cAAA,QAAMkB,MAAO,CAACJ,MAAS,SAAUK,SAAY,eAA7C,IAA8DvB,EAAKW,KAAnE,KACAT,EAAAC,EAAAC,cAAA,iBAASJ,EAAKwB,QAElBtB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACKL,EAAKY,OACNV,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAQuB,KAAM1B,EAAK2B,KAAMC,OAAO,sBAEpC1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUiB,MAAO,CAACJ,MAAS,SAAUK,SAAY,eAAgBvB,EAAK6B,QACtE3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKyB,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAcjC,KAAMA,EAAMD,YAAaA,KAE3CG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKyB,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB9B,EAAAC,EAAAC,cAAC8B,EAAD,CAAWlC,KAAMA,QAkC1BmC,MA1Bf,SAAcrD,GACV,IAAMsD,EAAYtD,EAAMsD,UAAUC,IAAI,SAACrC,GACnC,OACIE,EAAAC,EAAAC,cAAA,OAAKkC,IAAKtC,EAAKC,GAAIO,UAAU,yBACzBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAACW,EAAD,CAAYf,KAAMA,EAAMD,YAAajB,EAAMiB,kBAM3D,OACIG,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,aAGRF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAW+B,cCNZG,cA1Bb,SAAAA,EAAYzD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqD,IACjBxD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuD,GAAAlD,KAAAH,KAAMJ,KAEDQ,MAAQ,GAHIP,wEAQjB,OADAyD,QAAQC,IAAI,UAAYvD,KAAKJ,MAAM4D,UAEjCxC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,mBAAWlB,KAAKJ,MAAM4D,SAAS/B,KAA/B,KACAT,EAAAC,EAAAC,cAAA,mBAAWlB,KAAKJ,MAAM4D,SAASC,OAC/BzC,EAAAC,EAAAC,cAAA,4BAAoBlB,KAAKJ,MAAM4D,SAASE,gBAhBhC9B,+CClBtB+B,IAASC,cCHa,CAClBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,kBDFvB,IAAIC,EAAWR,IAASQ,WAEXC,EAAWD,EAASE,IAAI,oBACxBC,EAAWH,EAASE,IAAI,oBE4CxBE,EAAU,SAACnB,GAAD,MAAU,CAC7BoB,KC1CwB,eD2CxBC,QAASrB,IAGAsB,EAAW,SAACC,GAAD,MAAY,CAChCH,KCtDqB,YDuDrBC,QAASE,IAGAC,EAAe,iBAAO,CAC/BJ,KC7DyB,kBDgEhBK,EAAc,SAACC,GAAD,MAAU,CACjCN,KChEwB,eDiExBC,QAASK,IAuBAC,EAAgB,SAACC,EAAUC,GAAX,OAAwB,SAACC,GAClD,OAAOZ,EACFa,MAAMH,GACNI,KAAK,SACLC,KAAK,SAACC,GACH,IAAI9B,EAAW8B,EAASC,MACxB,GAAiB,OAAb/B,EAEA,MADAgC,MAAM,4BACAC,MAAM,4BAGhB,GAAIjC,EAASyB,WAAaA,EAEtB,MADAO,MAAM,sBACAC,MAAM,sBAGhB,IAAIC,EAAQ,GACZ,IAAK,IAAItC,KAAOI,EAASkC,MACjBlC,EAASkC,MAAMC,eAAevC,IAC9BsC,EAAME,KAAKpC,EAASkC,MAAMtC,IAGlCI,EAASkC,MAAQA,EACjBR,EAASW,EAAMb,EAAUC,EAAUzB,MAEtCsC,MAAM,SAACC,GACJb,EAASc,EAAYD,EAAME,cAI1BD,EAAc,SAACD,GAAD,MAAY,CACnCvB,KC7GyB,gBD8GzBC,QAASsB,IAIAF,EAAQ,SAACb,EAAUC,EAAUzB,GACtC,MAAO,CACHgB,KC1Hc,SD2HdQ,SAAUA,EACVC,SAAUA,EACVzB,SAAUA,IE7HZ0C,cACF,SAAAA,EAAYtG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkG,IACfrG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoG,GAAA/F,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,OAAO,EACP2E,SAAU,GACVC,SAAU,GACVxB,MAAO,GACPC,IAAK,GACLjC,KAAM,IAGV5B,EAAKS,OAAST,EAAKS,OAAOC,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACdA,EAAKsG,SAAWtG,EAAKsG,SAAS5F,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAChBA,EAAK0B,QAAU1B,EAAK0B,QAAQhB,KAAbT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAdAA,wEAiBVuG,GACLpG,KAAKU,SAALZ,OAAAuG,EAAA,EAAAvG,CAAA,GAAiBsG,EAAEE,OAAO7E,KAAO2E,EAAEE,OAAOC,QAC1CH,EAAExF,mDAIFZ,KAAKM,SACLN,KAAKJ,MAAM4G,cAAcxG,KAAKI,MAAMqB,KAAMzB,KAAKI,MAAM4E,SAAUhF,KAAKI,MAAM6E,SAAUjF,KAAKI,MAAMqD,MAAOzD,KAAKI,MAAMsD,sCAIjH1D,KAAKU,SAAS,CACVL,OAAQL,KAAKI,MAAMC,yCAIlB,IAAAoG,EAAAzG,KACL,OACIgB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,OAAK,EAACE,UAAU,cAAcC,QAASvB,KAAKM,OAAQe,MAAM,aAAlE,YAGAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOK,OAAQxB,KAAKI,MAAMC,MAAOC,OAAQN,KAAKM,OAAQgB,UAAWtB,KAAKJ,MAAM0B,WACxEN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAab,OAAQN,KAAKM,QAA1B,YACAU,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMV,SAAUT,KAAK0G,aACjB1F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWwF,KAAG,GACV3F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyF,QAAQ,OAAOC,GAAI,CAAEhE,KAAM,EAAGC,OAAQ,IACzC9B,EAAAC,EAAAC,cAAA,QAAMI,UAAU,2BAEpBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK0F,GAAI,GACL7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIqD,KAAK,OACLzD,GAAG,OACHU,KAAK,OACL0E,SAAUnG,KAAKmG,SACfI,MAAOvG,KAAKI,MAAMqB,KAClBqF,YAAY,gBAKxB9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWwF,KAAG,GACV3F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyF,QAAQ,WAAWC,GAAI,CAAEhE,KAAM,EAAGC,OAAQ,IAC7C9B,EAAAC,EAAAC,cAAA,QAAMI,UAAU,sBAEpBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK0F,GAAI,GACL7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIqD,KAAK,OACLzD,GAAG,WACHU,KAAK,WACL0E,SAAUnG,KAAKmG,SACfI,MAAOvG,KAAKI,MAAM4E,SAClB8B,YAAY,oBAKxB9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWwF,KAAG,GACV3F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyF,QAAQ,WAAWC,GAAI,CAAEhE,KAAM,EAAGC,OAAQ,IAC7C9B,EAAAC,EAAAC,cAAA,QAAMI,UAAU,sBAGpBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK0F,GAAI,GACL7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIqD,KAAK,WACLzD,GAAG,WACHU,KAAK,WACL0E,SAAUnG,KAAKmG,SACfI,MAAOvG,KAAKI,MAAM6E,SAClB6B,YAAY,oBAKxB9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWwF,KAAG,GACV3F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyF,QAAQ,QAAQC,GAAI,CAAEhE,KAAM,EAAGC,OAAQ,IAC1C9B,EAAAC,EAAAC,cAAA,QAAMI,UAAU,4BAEpBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK0F,GAAI,GACL7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIqD,KAAK,QACLzD,GAAG,QACHU,KAAK,QACL0E,SAAUnG,KAAKmG,SACfI,MAAOvG,KAAKI,MAAMqD,MAClBqD,YAAY,iBAKxB9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWwF,KAAG,GACV3F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyF,QAAQ,MAAMC,GAAI,CAAEhE,KAAM,EAAGC,OAAQ,IACxC9B,EAAAC,EAAAC,cAAA,QAAMI,UAAU,uBAEpBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK0F,GAAI,GACL7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIqD,KAAK,MACLzD,GAAG,MACHU,KAAK,MACL0E,SAAUnG,KAAKmG,SACfI,MAAOvG,KAAKI,MAAMsD,IAClBoD,YAAY,wBAIxB9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK0F,GAAI,CAAEhE,KAAM,EAAGC,OAAQ,IACxB9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,OAAK,EAACoD,KAAK,SAAS+B,MAAM,SAAShF,QAAS,kBAAMkF,EAAKlF,WAAWF,MAAM,WAAhF,yBA9HbM,IAAMC,WAiJdmF,oBANS,SAAC3G,GAAD,MAAY,CAChC4E,SAAU5E,EAAM4G,MAAMhC,SACtBC,SAAU7E,EAAM4G,MAAM/B,SACtBgC,WAAY7G,EAAM4G,MAAME,aAKxB,CAAEV,cFZuB,SAAC/E,EAAMuD,EAAUC,EAAUxB,EAAO0D,GAAlC,OAA4C,SAACjC,GAEtE,OADA5B,QAAQC,IAAI4D,GACL7C,EACFa,MAAMH,GACNoC,OAAO,CACJ3F,KAAMA,EACNwD,SAAUA,EACVxB,MAAOA,EACPC,IAAKyD,EACLE,OAAQ,8BACR3B,MAAO,KAEVL,KAAK,WACFH,EAASH,EAAcC,EAAUC,SEH9B8B,CAGbb,GCpJIoB,EAAW,SAAC/B,GAAD,OAASA,GAAOA,EAAIgC,QA8GtBC,cA3GX,SAAAA,EAAY5H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwH,IACf3H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0H,GAAArH,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,OAAO,GAGXR,EAAKS,OAAST,EAAKS,OAAOC,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACdA,EAAKY,SAAWZ,EAAKY,SAASF,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KARDA,wEAWV4H,GACLzH,KAAKJ,MAAMmF,cAAc0C,EAAOzC,SAAUyC,EAAOxC,2CAIjDjF,KAAKU,SAAS,CACVL,OAAQL,KAAKI,MAAMC,yCAIlB,IAAAoG,EAAAzG,KACL,OACIgB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQiB,MAAO,CAAEsF,WAAY,eAAiBnG,QAASvB,KAAKM,QACxDU,EAAAC,EAAAC,cAAA,QAAMI,UAAU,yBAEpBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOK,OAAQxB,KAAKI,MAAMC,MAAOC,OAAQN,KAAKM,OAAQgB,UAAWtB,KAAKJ,MAAM0B,WACxEN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAab,OAAQN,KAAKM,QAA1B,SACAU,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACyG,EAAA,KAAD,CAAMC,MAAM,QAAQnH,SAAU,SAACgH,GAAD,OAAYhB,EAAKhG,SAASgH,KAQpDzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKG,UAAU,cACXN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyF,QAAQ,WAAWC,GAAI,CAAEhE,KAAM,EAAGC,OAAQ,IAC7C9B,EAAAC,EAAAC,cAAA,QAAMI,UAAU,sBAEpBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK0F,GAAI,GACL7F,EAAAC,EAAAC,cAACyG,EAAA,QAAQE,KAAT,CACID,MAAM,YACN7G,GAAG,WACHU,KAAK,WACLqF,YAAY,WACZxF,UAAU,eACVwG,WAAY,CACRR,cAGRtG,EAAAC,EAAAC,cAACyG,EAAA,OAAD,CACIrG,UAAU,cACVsG,MAAM,YACNG,KAAK,UACLC,SAAU,CACNV,SAAU,WACVvB,MAAO,+BAKvB/E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKG,UAAU,cACXN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyF,QAAQ,WAAWC,GAAI,CAAEhE,KAAM,EAAGC,OAAQ,IAC7C9B,EAAAC,EAAAC,cAAA,QAAMI,UAAU,sBAEpBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK0F,GAAI,GACL7F,EAAAC,EAAAC,cAACyG,EAAA,QAAQ1C,SAAT,CACI2C,MAAM,YACN7G,GAAG,WACHU,KAAK,WACLqF,YAAY,WACZxF,UAAU,eACVwG,WAAY,CACRR,cAGRtG,EAAAC,EAAAC,cAACyG,EAAA,OAAD,CACIrG,UAAU,cACVsG,MAAM,YACNG,KAAK,UACLC,SAAU,CACNV,SAAU,gBAK1BtG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKyB,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB9B,EAAAC,EAAAC,cAAC+G,EAAD,OAEJjH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKyB,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,OAAK,EAACE,UAAU,cAAciF,MAAM,SAASlF,MAAM,WAA3D,sBA/FhBO,aCkBLsG,sBArBX,SAAAA,EAAYtI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkI,IACfrI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoI,GAAA/H,KAAAH,KAAMJ,KAEDuI,aAAetI,EAAKsI,aAAa5H,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAHLA,4EAMNc,GACTX,KAAKJ,MAAMwI,cAAczH,EAAM2F,OAAOC,wCAItC,OACIvF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACXN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO4F,YAAY,cAAc1E,MAAO,CAAEf,MAAO,SAAW8E,SAAUnG,KAAKmI,wBAfjEvG,uBCqEfyG,cApEX,SAAAA,EAAYzI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqI,IACfxI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuI,GAAAlI,KAAAH,KAAMJ,KAcV0I,cAAgB,SAACC,GACb,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,cAAcH,EAAM,IAC3BC,EAAOG,UAAU,WACb,IAAMC,EAAUJ,EAAOK,OACvBN,EAAM,GAAGO,QAAQF,EACd/I,EAAKkJ,YAAYR,EAAM,IACtB/C,MAAM,8CAGN3F,EAAKa,SAAS,CACV6H,MAAO1I,EAAKO,MAAMmI,MAAMS,OAAOT,EAAM,QA1BlC1I,EAgCnBoJ,WAAa,SAACC,GACVrJ,EAAKa,SAAS,CACV6H,MAAO1I,EAAKO,MAAMmI,MAAMY,OAAO,SAAAC,GAAE,OAAIA,IAAKF,OA/B9CrJ,EAAKO,MAAQ,CACTmI,MAAO,IAGX1I,EAAKoJ,WAAapJ,EAAKoJ,WAAW1I,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAClBA,EAAKyI,cAAgBzI,EAAKyI,cAAc/H,KAAnBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KARNA,2EAWP0F,GACR,OAAOvF,KAAKI,MAAMmI,MAAMc,KAAK,SAAAvI,GAAI,OAAIyE,EAAI9D,OAASX,EAAKW,wCA0BlD,IAAAgF,EAAAzG,KACCsJ,EAAe,CACjBC,QAAS,SACTvH,MAAO,IACPwH,OAAQ,KAGZ,OACIxI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwI,SAAA,KACIzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAUpI,UAAU,WAAWqI,OAAO,UAAUC,OAAQ5J,KAAKsI,eACzDtH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAf,sEAEHtB,KAAKI,MAAMmI,MAAMhB,OAAS,GACvBvG,EAAAC,EAAAC,cAAC2I,EAAA,SAAD,KACI7I,EAAAC,EAAAC,cAAA,+BACClB,KAAKI,MAAMmI,MAAMpF,IAAI,SAAC+F,EAAKY,GAAN,OAClB9I,EAAAC,EAAAC,cAAA,OAAKkC,IAAK0G,GACV9I,EAAAC,EAAAC,cAAA,OAAKiB,IAAK+G,EAAKzH,KAAM2B,IAAK8F,EAAKJ,QAAS7G,IAAKiH,EAAKJ,QAAS1G,MAAOkH,IACjEJ,EAAKzH,KAAM,IACZT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoF,MAAM,SAAShF,QAAS,kBAAIkF,EAAKwC,WAAWC,KAApD,aAGH5F,QAAQC,IAAIvD,KAAKI,MAAMmI,gBA7DtB3G,aCCpB0F,EAAW,SAAC/B,GAAD,OAASA,GAAOA,EAAIgC,QAG/BwC,EAAW,SAACxE,GAAD,OAAUyE,MAAMC,OAAO1E,KAClC2E,EAAU,SAAC3E,GAAD,OAASA,IAAe,IAARA,GAyMjB4E,cAvMX,SAAAA,EAAYvK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmK,IACftK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqK,GAAAhK,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,OAAO,GAGXR,EAAKuK,YAAcvK,EAAKuK,YAAY7J,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACnBA,EAAKwK,aAAexK,EAAKwK,aAAa9J,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAPLA,6EAWfG,KAAKU,SAAS,CACVL,OAAQL,KAAKI,MAAMC,6CAIdoH,GACTzH,KAAKJ,MAAM0K,mBACXtK,KAAKJ,MAAM2K,SAAS,CAChB9I,KAAMgG,EAAO+C,SACblI,MAAOmI,SAAShD,EAAOiD,WACvBxI,QACI,qHACJyI,UAAU,EACVjJ,OAAQ1B,KAAKJ,MAAMoH,MAAMxD,SAAS/B,KAClCgB,MAAM,IAAImI,MAAOC,cACjBlI,OAA2B,KAAnB8E,EAAOqD,QAAiB,2BAA6BrD,EAAOqD,QACpE9F,SAAUhF,KAAKJ,MAAMoH,MAAMhC,WAE/BhF,KAAKoK,+CAGA,IApCMW,EAoCNtE,EAAAzG,KACL,OACIgB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQiB,MAAO,CAAEsF,WAAY,eAAiBnG,QAASvB,KAAKoK,aACxDpJ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,sBAEpBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOG,UAAU,WAAWE,OAAQxB,KAAKI,MAAMC,MAAOC,OAAQN,KAAKoK,aAC/DpJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAab,OAAQN,KAAKoK,aAA1B,YACApJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACyG,EAAA,KAAD,CAAMC,MAAM,UAAUnH,SAAU,SAACgH,GAAD,OAAYhB,EAAK4D,aAAa5C,KAC1DzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKG,UAAU,cACXN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyF,QAAQ,YAAYoE,GAAI,GAC3BhK,EAAAC,EAAAC,cAAA,kBAEJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK6J,GAAI,CAAEnI,KAAM,EAAGC,OAAQ,IACxB9B,EAAAC,EAAAC,cAACyG,EAAA,QAAQE,KAAT,CACID,MAAM,YACN7G,GAAG,WACHU,KAAK,WACLqF,YAAY,8CACZxF,UAAU,eACVwG,WAAY,CACRR,WACA2D,WA3DzBF,EA2D8C,EA3DtC,SAACxF,GAAD,OAAUA,GAAOA,EAAIgC,QAAUwD,IA4DdG,UA7D1B,SAACH,GAAD,OAAS,SAACxF,GAAD,OAAUA,GAAOA,EAAIgC,QAAUwD,GA6DHG,CAAU,OAG7BlK,EAAAC,EAAAC,cAACyG,EAAA,OAAD,CACIrG,UAAU,cACVsG,MAAM,YACNG,KAAK,UACLC,SAAU,CACNV,SAAU,aACV2D,UAAW,sCACXC,UAAW,sCAIvBlK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyF,QAAQ,aAAaoE,GAAI,GAC5BhK,EAAAC,EAAAC,cAAA,mBAGJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK6J,GAAI,GACLhK,EAAAC,EAAAC,cAACyG,EAAA,QAAQE,KAAT,CACID,MAAM,aACN7G,GAAG,YACHU,KAAK,YACLqF,YAAY,iCACZxF,UAAU,eACVwG,WAAY,CACRR,WACAyC,cAGR/I,EAAAC,EAAAC,cAACyG,EAAA,OAAD,CACIrG,UAAU,cACVsG,MAAM,aACNG,KAAK,UACLC,SAAU,CACNV,SAAU,aACVyC,SAAU,4BAK1B/I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKG,UAAU,cACXN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyF,QAAQ,WAAWoE,GAAI,GAC1BhK,EAAAC,EAAAC,cAAA,8BAEJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK6J,GAAI,GACLhK,EAAAC,EAAAC,cAACyG,EAAA,QAAQwD,SAAT,CACIvD,MAAM,WACN7G,GAAG,UACHU,KAAK,UACLqF,YAAY,iGACZxF,UAAU,eACV8J,KAAK,QAcjBpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKG,UAAU,cACXN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyF,QAAQ,YAAYoE,GAAI,GAC3BhK,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK6J,GAAI,GACLhK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUE,MAAM,SAAhB,wCACAL,EAAAC,EAAAC,cAACmK,EAAD,CAAa5J,KAAK,UAAUV,GAAG,UAAUO,UAAU,mBAwB3DN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKG,UAAU,cACXN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK6J,GAAI,CAAElI,OAAQ,IACf9B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOmK,OAAK,EAACN,GAAI,GACbhK,EAAAC,EAAAC,cAACyG,EAAA,QAAQ4D,SAAT,CACI3D,MAAM,cACNnG,KAAK,aACLH,UAAU,mBACVwG,WAAY,CACRoC,aAEL,IARP,oHAYAlJ,EAAAC,EAAAC,cAACyG,EAAA,OAAD,CACIrG,UAAU,cACVsG,MAAM,cACNG,KAAK,UACLC,SAAU,CACNkC,QAAS,4BAM7BlJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKG,UAAU,cACXN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK6J,GAAI,CAAEnI,KAAM,EAAGC,OAAQ,IACxB9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,OAAK,EAACoD,KAAK,SAAS+B,MAAM,SAASlF,MAAM,WAAjD,SAIJL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK6J,GAAI,CAAEnI,KAAM,EAAGC,OAAQ,IACxB9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,OAAK,EAACC,MAAM,YAAYE,QAASvB,KAAKoK,aAA9C,uBA3LdzI,IAAMC,eCyEb4J,cAnEX,SAAAA,EAAY5L,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwL,IACf3L,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0L,GAAArL,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTqL,aAAa,GAGjB5L,EAAKuK,YAAcvK,EAAKuK,YAAY7J,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACnBA,EAAK6L,cAAgB7L,EAAKD,MAAM8L,cAAcnL,KAAzBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KARNA,6EAYfG,KAAKU,SAAS,CACV+K,aAAczL,KAAKI,MAAMqL,+CAK7B,OACIzK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwI,SAAA,KACIzI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQwK,MAAI,EAACC,MAAM,OACf5K,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeI,QAASvB,KAAK0L,gBAE7B1K,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKG,UAAU,yBAAyBuK,QAAM,GAC1C7K,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAC4K,EAAD,CACI1D,cAAepI,KAAKJ,MAAMwI,cAC1B2D,WAAY/L,KAAKJ,MAAMmM,eAInC/K,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKG,UAAU,QAAQuK,QAAM,GACzB7K,EAAAC,EAAAC,cAACC,EAAA,EAAD,MA1CNmJ,EA4CctK,KAAKJ,MAAM0K,iBA5CPC,EA6CJvK,KAAKJ,MAAM2K,SA7CGxF,EA8Cd/E,KAAKJ,MAAMmF,eA9CkBiC,EA+C7BhH,KAAKJ,MAAMoH,OA9CjCE,WACClG,EAAAC,EAAAC,cAAC8K,EAAD,CAAc1B,iBAAkBA,EAAkBC,SAAUA,EAAUvD,MAAOA,IAE7EhG,EAAAC,EAAAC,cAAC+K,EAAD,CAAOlH,cAAeA,EAAemH,WAAYlF,EAAMxD,SAAS0I,mBAJ/E,IAAsB5B,EAAkBC,EAAUxF,EAAeiC,SAQ5CpF,uCC+CrB,IAeeuK,EAfC,SAACvM,GACb,IAxDmBsH,EAAYzF,EAAMsD,EAAemH,EAwD9CE,EAAYxM,EAAMsH,WAAatH,EAAMoH,MAAMxD,SAAS6D,OAAS,8BACnE,OAEIrG,EAAAC,EAAAC,cAACmL,EAAA,MAASzM,EACNoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK0K,QAAM,EAACtK,QAAS3B,EAAM8L,eACvB1K,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaG,UAAU,0BACnBN,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAQzJ,KAAM,IAAKZ,IAAKmK,EAAWG,OAAO,MA9DvCrF,EAgEQtH,EAAMsH,WAhEFzF,EAgEc7B,EAAMoH,MAAMxD,SAAS/B,KAhE7BsD,EAgEmCnF,EAAMmF,cAhE1BmH,EAgEyCtM,EAAMsM,WA/D/FhF,EAEIlG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAASlL,UAAU,WAAWmL,GAAG,YAC7BzL,EAAAC,EAAAC,cAAA,oBAAYO,EAAZ,OAGRT,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAASlL,UAAU,WAAWmL,GAAG,YAC7BzL,EAAAC,EAAAC,cAAA,QAAMI,UAAU,qBADpB,gBAIJN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAASlL,UAAU,WAAWmL,GAAG,UAC7BzL,EAAAC,EAAAC,cAAA,QAAMI,UAAU,+BADpB,cAIJN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAASlL,UAAU,WAAWmL,GAAG,UAC7BzL,EAAAC,EAAAC,cAAA,QAAMI,UAAU,wBADpB,iBAIJN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAASlL,UAAU,WAAWmL,GAAG,YAC7BzL,EAAAC,EAAAC,cAAA,QAAMI,UAAU,yBADpB,aAIJN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAASlL,UAAU,WAAWmL,GAAG,SAC7BzL,EAAAC,EAAAC,cAAA,QAAMI,UAAU,6BADpB,UAIJN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAASlL,UAAU,WAAWmL,GAAG,aAC7BzL,EAAAC,EAAAC,cAAA,QAAMI,UAAU,oBADpB,eAQRN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,4BAEJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAC+K,EAAD,CAAOlH,cAAeA,EAAemH,WAAYA,+GC5CjEQ,GAAW,CACXhF,WAAY,QACZiF,QAAS,MACTC,OAAQ,OAGZ,SAASC,GAAT/K,GAAkC,IAARhB,EAAQgB,EAARhB,KAClB6J,EAAW,eACM,GAAjB7J,EAAK6J,WACLA,EAAW,YAEf,IAAIlI,EAAO3B,EAAK2B,KAEhB,OADAA,EAAOA,EAAKqK,MAAM,EAAG,IAEjB9L,EAAAC,EAAAC,cAAC6L,GAAA9L,EAAD,CAAU+L,WAAW,aAAa5K,MAAO,CAAEoH,OAAQ,MAC/CxI,EAAAC,EAAAC,cAAC+L,GAAAhM,EAAD,KACID,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAQnK,IAAI,aAAaF,IAAKnB,EAAKoB,QAASW,KAAK,SAErD7B,EAAAC,EAAAC,cAACgM,GAAAjM,EAAD,CACIkM,QACInM,EAAAC,EAAAC,cAACkM,GAAAnM,EAAD,CAAYoM,UAAU,OAAOhM,MAAM,cAAciM,QAAQ,YACpDxM,EAAKW,MAGd8L,UACIvM,EAAAC,EAAAC,cAACF,EAAAC,EAAMwI,SAAP,KACIzI,EAAAC,EAAAC,cAACkM,GAAAnM,EAAD,CAAYoM,UAAU,OAAOhM,MAAM,cAAciM,QAAQ,SACpD3C,GAEL3J,EAAAC,EAAAC,cAACkM,GAAAnM,EAAD,CAAYoM,UAAU,OAAOhM,MAAM,cAAciM,QAAQ,SACpD7K,GAELzB,EAAAC,EAAAC,cAACkM,GAAAnM,EAAD,CAAYoM,UAAU,OAAOhM,MAAM,cAAciM,QAAQ,SAAzD,WACaxM,EAAKwB,OARtB,gBAUkBxB,EAAK6B,WAqD5B6K,OA7Cf,SAAkB5N,GACd,IAAKA,EAAMsH,WACP,OACIlG,EAAAC,EAAAC,cAAA,OAAKI,UAAU,2BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,aAKhB,IAAMgC,EAAYtD,EAAMsD,UAAUC,IAAI,SAACrC,GACnC,IAAI2M,EAAM,GACV,IAAK,IAAIrK,KAAOxD,EAAM8F,MACd9F,EAAM8F,MAAMC,eAAevC,IAC3BqK,EAAI7H,KAAKhG,EAAM8F,MAAMtC,IAG7B,OAAIqK,EAAIC,QAAQ5M,EAAKC,IAAM,EAChBC,EAAAC,EAAAC,cAAA,aAEPoC,QAAQC,IAAIzC,EAAKC,IAEbC,EAAAC,EAAAC,cAAA,OAAKkC,IAAKtC,EAAKC,GAAIO,UAAU,yBACzBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAAC2L,GAAD,CAAgB/L,KAAMA,SAO1C,OACIE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,2BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAAA,OAAKkB,MAAOsK,IACR1L,EAAAC,EAAAC,cAACyM,EAAA1M,EAAD,KAAOiC,8CClDjB0K,uBACF,SAAAA,EAAYhO,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4N,IACf/N,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8N,GAAAzN,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTyN,UAAU,EACVC,eAAe,GAEnBjO,EAAKwK,aAAexK,EAAKwK,aAAa9J,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACpBA,EAAK6L,cAAgB7L,EAAK6L,cAAcnL,KAAnBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACrBA,EAAKkO,kBAAoBlO,EAAKkO,kBAAkBxN,KAAvBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KATVA,mFAafG,KAAKJ,MAAMmM,uDAGG3L,GACdJ,KAAKU,SAAS,CACVoN,cAAe1N,EAAMoB,iDAKzBxB,KAAKU,SAAS,CACVoN,eAAgB9N,KAAKI,MAAM0N,qDAItBnN,GACTX,KAAKU,SAAS,CACVmN,UAAU,IAEdlN,EAAMC,kDAGD,IAAA6F,EAAAzG,KAuBL,OACIgB,EAAAC,EAAAC,cAAA,OAAKH,GAAG,OACJC,EAAAC,EAAAC,cAAC8M,EAAD,CACIC,WAAS,EACTjH,MAAOhH,KAAKJ,MAAMoH,MAClBkH,WAAY,eACZC,iBAAkB,MAClB3M,OAAQxB,KAAKI,MAAM0N,cACnBM,cAAe,SAAChO,GAAD,OAAWqG,EAAKsH,kBAAkB3N,IACjDsL,cAAe1L,KAAK0L,cACpBxE,WAAYlH,KAAKJ,MAAMoH,MAAME,WAC7BnC,cAAe/E,KAAKJ,MAAMmF,gBAE9B/D,EAAAC,EAAAC,cAAA,OAAKH,GAAG,gBACJC,EAAAC,EAAAC,cAACmN,EAAD,CACIjG,cAAepI,KAAKJ,MAAMwI,cAC1B2D,WAAY/L,KAAKJ,MAAMmM,WACvBL,cAAe1L,KAAK0L,cACpBpB,iBAAkBtK,KAAKJ,MAAM0K,iBAC7BC,SAAUvK,KAAKJ,MAAM2K,SACrBrD,WAAYlH,KAAKJ,MAAMoH,MAAME,WAC7BnC,cAAe/E,KAAKJ,MAAMmF,cAC1BmH,WAAYlM,KAAKJ,MAAMsM,WACvBlF,MAAOhH,KAAKJ,MAAMoH,QAEtBhG,EAAAC,EAAAC,cAACoN,GAAA,EAAD,KACItN,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIpB,UAhDrB,WACb,OAAOrM,EAAAC,EAAAC,cAACwN,EAAD,CAAMxL,UAAWuD,EAAK7G,MAAMsD,UAAUA,UAAWrC,YAAa4F,EAAK7G,MAAMiB,iBAgDpEG,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAOE,KAAK,WAAWpB,UAnCnB,WAChB,OACIrM,EAAAC,EAAAC,cAACyN,EAAD,CACInL,SAAUiD,EAAK7G,MAAMoH,MAAMxD,cAiCvBxC,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAOE,KAAK,SAASpB,UA9CpB,WACb,OACIrM,EAAAC,EAAAC,cAAC0N,GAAD,CACI1L,UAAWuD,EAAK7G,MAAMsD,UAAUA,UAChCwC,MAAOe,EAAK7G,MAAMoH,MAAMxD,SAASkC,MACjCwB,WAAYT,EAAK7G,MAAMoH,MAAME,gBA0CzBlG,EAAAC,EAAAC,cAAC2N,GAAA,EAAD,CAAUpC,GAAG,gBAxFlB7K,cAgGJkN,gBACX/H,kBA/HoB,SAAC3G,GACrB,MAAO,CACH8C,UAAW9C,EAAM8C,UACjB8D,MAAO5G,EAAM4G,MACbkF,WAAY9L,EAAM4G,MAAMjB,QAIL,SAACb,GAAD,MAAe,CACtCqF,SAAU,SAACzJ,GAAD,OAAUoE,EV0DA,SAACpE,GAAD,OAAU,SAACoE,GAC/B,OAAOd,EAASwB,KAAK9E,GAAMuE,KAAK,SAASC,GACrCxE,EAAKC,GAAKuE,EAASlC,IACnB8B,EAbe,SAACpE,GAAD,MAAW,CAC9B0D,KCnEoB,WDoEpBC,QAAS3D,GAWIiO,CAAQjO,IACjBwD,EAASa,MAAMrE,EAAKkE,SAAW,WAAWY,KAAK9E,EAAKC,IACpDmE,EAVmC,CACvCV,KCnEyB,gBDoEzBC,QAQ2B3D,EAAKC,KAC5ByE,MAAM,sBACPM,MAAM,SAACC,GAAD,OAAWP,MAAM,uBAAyBO,EAAME,YUjE5BsE,CAASzJ,KACtCsH,cAAe,SAAC4G,GACZ9J,EVrBqB,SAAC8J,GAAD,MAAkC,CAC3DxK,KCJkB,SDKlBC,QAAS,CACLuK,WAAYA,EACZC,WAJqBC,UAAA3H,OAAA,QAAA4H,IAAAD,UAAA,GAAAA,UAAA,GAA0B,KUqBtC9G,CAAc4G,KAE3BjD,WAAY,WACR7G,EVdwB,SAACA,GAG7B,OAFAA,EAASN,GAAa,IAEfR,EACFgB,KAAK,SACLC,KAAK,SAACC,GACH,IAAI8J,EAAW9J,EAASC,MAExB,GADAjC,QAAQC,IAAI6L,GACK,OAAbA,EAAmB,MAAM3J,MAAM,iBACnC,IAAIvC,EAAY,GAChB,IAAK,IAAIE,KAAOgM,EACZ,GAAIA,EAASzJ,eAAevC,GAAM,CAC9B,IAAItC,EAAOsO,EAAShM,GACpBtC,EAAKC,GAAKqC,EACVF,EAAU0C,KAAK9E,GAGvBoE,EAASR,EAASxB,MAErB4C,MAAM,SAACC,GAAD,OAAWb,EAASL,EAAYkB,EAAME,eUHjDqE,iBAAkB,WACdpF,EAASmK,UAAQC,MAAM,aAE3BzO,YAAa,SAACuC,GACV8B,EVEmB,SAAC9B,GAAD,OAAS,SAAC8B,GACjC,OAAOd,EACFe,MAAM,IAAM/B,GACZgE,OAAO,CAAEuD,UAAU,IACnBtF,KAAK,SAACU,GACH,GAAIA,EAAO,MAAMA,EACjBzC,QAAQC,IAAI,kBACZ2B,EAASX,EAAQnB,IACjBoC,MAAM,0BAETM,MAAM,SAACC,GACJb,EAASL,EAAYkB,EAAME,UAC3BT,MAAM,2BAA6BO,EAAME,YUdpCpF,CAAYuC,KAEzBmM,eAAgB,WACZrK,EAASmK,UAAQC,MAAM,WAE3BvK,cAAe,SAACC,EAAUC,EAAU3E,GAChC4E,EAASH,EAAcC,EAAUC,OAqGrC8B,CAGE6G,0CC5IO1K,GAAY,WAQpB,IAPD9C,EAOC8O,UAAA3H,OAAA,QAAA4H,IAAAD,UAAA,GAAAA,UAAA,GAPO,CACJM,WAAW,EACXtM,UAAW,GACX4B,IAAK,KACL2K,cAAe,IAEnBC,EACCR,UAAA3H,OAAA,EAAA2H,UAAA,QAAAC,EACD,OAAQO,EAAOlL,MACX,IVHoB,eUKhB,IADA,IAAIpB,EAAMsM,EAAOjL,QACRqF,EAAI,EAAGA,EAAI1J,EAAM8C,UAAUqE,OAAQuC,IACxC,GAAI1J,EAAM8C,UAAU4G,GAAhB,KAA6B1G,EAAI,CACjChD,EAAM8C,UAAU4G,GAAhB,UAAiC,EACjCxG,QAAQC,IAAInD,EAAM8C,UAAU4G,GAAhB,UACZ,MAGR,OAAO1J,EACX,IVvBc,SUwBV,IAAI4O,EAAaU,EAAOjL,QAAQuK,WAChC,OAAOlP,OAAA6P,GAAA,EAAA7P,CAAA,GACAM,EADP,CAEIoP,WAAW,EACX1K,IAAK,KACL5B,UAAW9C,EAAMqP,cACZtG,OAAO,SAACrI,GACL,QAAIA,EAAKW,KAAKmO,cAAcC,SAASb,EAAWY,mBAG5C9O,EAAKgP,WAAYhP,EAAKgP,SAASD,SAASb,MAK/ClC,MAAM,EAAG4C,EAAOjL,QAAQwK,cAErC,IVrCgB,WUsCZ,OAAOnP,OAAA6P,GAAA,EAAA7P,CAAA,GACAM,EADP,CAEI8C,UAAW9C,EAAM8C,UAAU8F,OAAO0G,EAAOjL,SACzCgL,cAAerP,EAAMqP,cAAczG,OAAO0G,EAAOjL,WAEzD,IV5CiB,YU6Cb,OAAO3E,OAAA6P,GAAA,EAAA7P,CAAA,GAAKM,EAAZ,CAAmBoP,WAAW,EAAO1K,IAAK,KAAM5B,UAAWwM,EAAOjL,QAASgL,cAAeC,EAAOjL,UACrG,IVhDqB,gBUiDjB,OAAO3E,OAAA6P,GAAA,EAAA7P,CAAA,GAAKM,EAAZ,CAAmBoP,WAAW,EAAM1K,IAAK,KAAM5B,UAAW,GAAIuM,cAAe,KACjF,IVjDoB,eUkDhB,OAAO3P,OAAA6P,GAAA,EAAA7P,CAAA,GAAKM,EAAZ,CAAmBoP,WAAW,EAAO1K,IAAK4K,EAAOjL,QAASvB,UAAW,GAAIuM,cAAe,KAC5F,QACI,OAAOrP,ICpDN2P,GAAQ,WAQhB,IAPD3P,EAOC8O,UAAA3H,OAAA,QAAA4H,IAAAD,UAAA,GAAAA,UAAA,GAPO,CACJhI,YAAY,EACZlC,SAAU,GACVxB,SAAU,GACVuC,MAAO,MAEX2J,EACCR,UAAA3H,OAAA,EAAA2H,UAAA,QAAAC,EACD,OAAQO,EAAOlL,MACX,IXNc,SWOV,OAAO1E,OAAA6P,GAAA,EAAA7P,CAAA,GACAM,EADP,CAEI8G,YAAY,EACZlC,SAAU0K,EAAO1K,SACjBxB,SAAUkM,EAAOlM,SACjBuC,MAAO,OAEf,IXbe,UWcX,OAAOjG,OAAA6P,GAAA,EAAA7P,CAAA,GACAM,EADP,CAEI8G,YAAY,EACZlC,SAAU,GACVxB,SAAU,GACVuC,MAAO,OAEf,IXnBqB,gBWoBjB,OAAOjG,OAAA6P,GAAA,EAAA7P,CAAA,GACAM,EADP,CAEIoD,SAAS1D,OAAA6P,GAAA,EAAA7P,CAAA,GACFM,EAAMoD,SADL,CAEJkC,MAAOtF,EAAMoD,SAASkC,MAAMsD,OAAO0G,EAAOjL,aAGtD,IX5Be,UW6BX,OAAO3E,OAAA6P,GAAA,EAAA7P,CAAA,GACAM,EADP,CAEI8G,YAAY,EACZlC,SAAU0K,EAAO1K,SACjBC,SAAUyK,EAAOzK,WAEzB,IX/BqB,gBWgCjB,OAAOnF,OAAA6P,GAAA,EAAA7P,CAAA,GACAM,EADP,CAEI8G,YAAY,EACZlC,SAAU,GACVxB,SAAU,GACVuC,MAAO2J,EAAOjL,UAEtB,QACI,OAAOrE,mCCpDN4P,GAAc,CACvBxF,SAAU,GACVE,UAAW,GACXI,QAAS,GACTmF,SAAU,GACVC,YAAY,GCLHC,GAAe,CACxBnL,SAAU,GACVC,SAAU,ICIRmL,GCIYC,uBACVC,2BAAgBxQ,OAAA6P,GAAA,EAAA7P,CAAA,CACZoD,UAAWA,GACX8D,MAAO+I,IACJQ,sBAAY,CACXC,QAASR,GACTnK,MAAOsK,OAGfM,2BAAgBC,KAAOC,ODGhBC,oLAZP,OACI5P,EAAAC,EAAAC,cAAC2P,EAAA,SAAD,CAAUT,MAAOA,IACbpP,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CAAeC,SAAUC,cACrBhQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+P,GAAD,gBANNrP,aEIEsP,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOxQ,EAAAC,EAAAC,cAACuQ,GAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzM,KAAK,SAAA0M,GACjCA,EAAaC","file":"static/js/main.5b131a07.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.toggle();\n    this.props.reserveItem(this.props.item.id);\n  }\n\n  render() {\n    return (\n      <div>\n        <Button block color=\"primary\" className=\"item-button\" onClick={this.toggle} >Reserve</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>Reserve Item</ModalHeader>\n          <ModalBody>\n            You are about to reserve the item \"{this.props.item.name}\" from {this.props.item.seller}.<br />\n            Are you sure?<br /> <br />\n            You will be able to see the seller's contact information \n            and continue with this deal under the \"<span className=\"fa fa-exchange fa-lg\" /> Ongoing\" section in the sidebar.\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.onSubmit} >Confirm</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalExample;","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalExample extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block color=\"danger\" className=\"item-button\" onClick={this.toggle}>\n                    Save\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Save Item</ModalHeader>\n                    <ModalBody>\n                        You are about to save the item \"{this.props.item.name}\" from {this.props.item.seller}.<br />\n                        You will be able to view this item under \"<span className=\"fa fa-heart-o fa-lg\" /> Saved Items\"\n                        in the sidebar.\n                        <br /> <br />\n                        Saving will not reserve this item for you.\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.toggle}>\n                            Confirm\n                        </Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>\n                            Cancel\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalExample;\n","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardDeck, CardSubtitle, Row, Col } from 'reactstrap';\nimport ReserveModal from './ReserveModalComponent';\nimport SaveModal from './SaveModalComponent';\nimport Moment from 'react-moment';\n\nfunction RenderCard({ item, reserveItem }) {\n    return (\n        <Card>\n            <CardImg top width=\"100%\" className=\"card-img-top img-fluid\" src={item.picture} alt={item.name} />\n            <CardBody>\n                <CardTitle className=\"card-title\">\n                    <span style={{'width': '27.3vw', 'wordWrap': 'break-word'}}> {item.name} </span>\n                    <span> ${item.price}</span>\n                </CardTitle>\n                <CardSubtitle>\n                    {item.seller}\n                    <br />\n                    <Moment date={item.time} format=\"MMM D YYYY HH:MM\" />\n                </CardSubtitle>\n                <CardText style={{'width': '27.3vw', 'wordWrap': 'break-word'}}>{item.detail}</CardText>\n                <Row>\n                    <Col xl={{ size: 4, offset: 1 }}>\n                        <ReserveModal item={item} reserveItem={reserveItem} />\n                    </Col>\n                    <Col xl={{ size: 4, offset: 2 }}>\n                        <SaveModal item={item} />\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nfunction Home(props) {\n    const sellItems = props.sellItems.map((item) => {\n        return (\n            <div key={item.id} className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={item} reserveItem={props.reserveItem} />\n                </div>\n            </div>\n        );\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"row start-of-home\">\n                <div className=\"col-12\">\n                    <h3>Items On Sale</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">\n                <CardDeck>{sellItems}</CardDeck>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n  Jumbotron,\n  Button,\n  ModalHeader,\n  Modal,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    console.log('profile' + this.props.userInfo);\n    return (\n      <Jumbotron>\n        <div className=\"container\">\n          <div className=\"row row-header\">\n            <div className=\"col-12 col-sm-6\">\n              <h1>Hello {this.props.userInfo.name},</h1>\n              <p>email: {this.props.userInfo.email}</p>\n              <p>contact number: {this.props.userInfo.tel}</p>\n\n            </div>\n          </div>\n        </div>\n      </Jumbotron>\n    );\n  }\n}\n\n\nexport default Profile;\n","import firebase from 'firebase';\nimport { config } from './firebaseConfig';\n\nfirebase.initializeApp(config);\nvar database = firebase.database();\n\nexport const itemsRef = database.ref('bruinmart/items/');\nexport const usersRef = database.ref('bruinmart/users/');\n","export const config = {\n    apiKey: 'AIzaSyDpr5SspydURpwNzpjr2F9kmC1WLwQaH9w',\n    authDomain: 'jerrylzylzy.firebaseapp.com',\n    databaseURL: 'https://jerrylzylzy.firebaseio.com',\n    projectId: 'jerrylzylzy',\n    storageBucket: 'jerrylzylzy.appspot.com',\n    messagingSenderId: '1089192741461'\n};","import * as ActionTypes from './ActionTypes';\nimport { itemsRef, usersRef } from '../firebase';\n\nexport const filterResults = (searchText, maxResults = 20) => ({\n    type: ActionTypes.FILTER,\n    payload: {\n        searchText: searchText,\n        maxResults: maxResults\n    }\n});\n\n//  This is a thunk\n\nexport const fetchItems = () => (dispatch) => {\n    dispatch(itemsLoading(true));\n\n    return itemsRef\n        .once('value')\n        .then((snapshot) => {\n            var rawItems = snapshot.val();\n            console.log(rawItems);\n            if (rawItems === null) throw Error('Fetch failed.');\n            var sellItems = [];\n            for (var key in rawItems) {\n                if (rawItems.hasOwnProperty(key)) {\n                    var item = rawItems[key];\n                    item.id = key;\n                    sellItems.push(item);\n                }\n            }\n            dispatch(addItems(sellItems));\n        })\n        .catch((error) => dispatch(itemsFailed(error.message)));\n};\n\nexport const reserveItem = (key) => (dispatch) => {\n    return itemsRef\n        .child('/' + key)\n        .update({ reserved: true })\n        .then((error) => {\n            if (error) throw error;\n            console.log('error checking');\n            dispatch(reserve(key));\n            alert(\"Reserved Successful!\");\n        })\n        .catch((error) => {\n            dispatch(itemsFailed(error.message));\n            alert(\"Reserved failed! Error: \" + error.message);\n        });\n};\n\nexport const reserve = (key) => ({\n    type: ActionTypes.RESERVE_ITEM,\n    payload: key\n});\n\nexport const addItems = (items) => ({\n    type: ActionTypes.ADD_ITEMS,\n    payload: items\n});\n\nexport const itemsLoading = () => ({\n    type: ActionTypes.ITEMS_LOADING\n});\n\nexport const itemsFailed = (err) => ({\n    type: ActionTypes.ITEMS_FAILED,\n    payload: err\n});\n\nexport const addItem = (item) => ({\n    type: ActionTypes.ADD_ITEM,\n    payload: item\n});\n\nexport const addItemToUser = (itemKey) => ({\n    type: ActionTypes.ADD_ITEM_USER,\n    payload: itemKey\n});\n\nexport const postItem = (item) => (dispatch) => {\n    return itemsRef.push(item).then(function(snapshot) {\n        item.id = snapshot.key;\n        dispatch(addItem(item));\n        usersRef.child(item.username + '/posts/').push(item.id);\n        dispatch(addItemToUser(item.id));\n        alert('Post Successful!');\n    }).catch((error) => alert('Post failed! Error: ' + error.message));\n};\n\nexport const fetchUserInfo = (username, password) => (dispatch) => {\n    return usersRef\n        .child(username)\n        .once('value')\n        .then((snapshot) => {\n            var userInfo = snapshot.val();\n            if (userInfo === null) {\n                alert('Username does not exist.');\n                throw Error('Username does not exist.');\n            }\n\n            if (userInfo.password !== password) {\n                alert('Password is wrong!');\n                throw Error('Password is wrong!');\n            }\n\n            var posts = [];\n            for (var key in userInfo.posts) {\n                if (userInfo.posts.hasOwnProperty(key)) {\n                    posts.push(userInfo.posts[key]);\n                }\n            }\n            userInfo.posts = posts;\n            dispatch(login(username, password, userInfo));\n        })\n        .catch((error) => {\n            dispatch(loginFailed(error.message));\n        });\n};\n\nexport const loginFailed = (error) => ({\n    type: ActionTypes.LOG_IN_FAILED,\n    payload: error\n});\n\n//actions for login logout\nexport const login = (username, password, userInfo) => {\n    return {\n        type: ActionTypes.LOG_IN,\n        username: username,\n        password: password,\n        userInfo: userInfo\n    };\n};\n\nexport const logout = () => {\n    return {\n        type: ActionTypes.LOG_OUT\n    };\n};\n\nexport const StoreUserInfo = (name, username, password, email, phone) => (dispatch) => {\n    console.log(phone);\n    return usersRef\n        .child(username)\n        .update({\n            name: name,\n            password: password,\n            email: email,\n            tel: phone,\n            avatar: 'assets/images/joe_bruin.jpg',\n            posts: []\n        })\n        .then(() => {\n            dispatch(fetchUserInfo(username, password));\n        });\n};\n\nexport const signup = (username, password) => {\n    return {\n        type: ActionTypes.SIGN_UP,\n        username: username,\n        password: password\n    };\n};\n","export const FILTER = 'FILTER';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\nexport const ITEMS_FAILED = 'ITEMS_FAILED';\nexport const ADD_ITEMS = 'ADD_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const POST_ITEMS = 'POST_ITEMS';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const SIGN_UP = 'SIGN_UP';\nexport const ADD_ITEM_USER = 'ADD_ITEM_USER';\nexport const RESERVE_ITEM = 'RESERVE_ITEM';\nexport const GET_USER_POST = 'GET_USER_POST';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Button, ModalHeader, Modal, ModalBody, Form, FormGroup, Input, Label, Col, Row } from 'reactstrap';\nimport { StoreUserInfo } from '../redux/ActionCreators';\nimport { connect } from 'react-redux';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modal: false,\n            username: '',\n            password: '',\n            email: '',\n            tel: '',\n            name: ''\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n        e.preventDefault();\n    }\n\n    onClick() {\n        this.toggle();\n        this.props.StoreUserInfo(this.state.name, this.state.username, this.state.password, this.state.email, this.state.tel);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block className=\"item-button\" onClick={this.toggle} color=\"secondary\">\n                    Register\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup row>\n                                <Label htmlFor=\"name\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-id-card-o fa-lg\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Input\n                                        type=\"text\"\n                                        id=\"name\"\n                                        name=\"name\"\n                                        onChange={this.onChange}\n                                        value={this.state.name}\n                                        placeholder=\"Your Name\"\n                                        //innerRef={(input) => (this.username = input)}\n                                    />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"username\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-user fa-lg\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Input\n                                        type=\"text\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        onChange={this.onChange}\n                                        value={this.state.username}\n                                        placeholder=\"Your username\"\n                                        //innerRef={(input) => (this.username = input)}\n                                    />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"password\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-lock fa-lg\" />\n                                </Label>\n\n                                <Col xs={9}>\n                                    <Input\n                                        type=\"password\"\n                                        id=\"password\"\n                                        name=\"password\"\n                                        onChange={this.onChange}\n                                        value={this.state.password}\n                                        placeholder=\"Your password\"\n                                        //innerRef={(input) => (this.password = input)}\n                                    />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-envelope-o fa-lg\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Input\n                                        type=\"email\"\n                                        id=\"email\"\n                                        name=\"email\"\n                                        onChange={this.onChange}\n                                        value={this.state.email}\n                                        placeholder=\"Your email\"\n                                        //innerRef={(input) => (this.password = input)}\n                                    />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"tel\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-phone fa-lg\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Input\n                                        type=\"tel\"\n                                        id=\"tel\"\n                                        name=\"tel\"\n                                        onChange={this.onChange}\n                                        value={this.state.tel}\n                                        placeholder=\"Your phone number\"\n                                    />\n                                </Col>\n                            </FormGroup>\n                            <Row>\n                                <Col xs={{ size: 4, offset: 7 }}>\n                                    <Button block type=\"submit\" value=\"submit\" onClick={() => this.onClick()} color=\"primary\">\n                                        Register\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    username: state.users.username,\n    password: state.users.password,\n    isLoggedin: state.users.isLoggedIn\n});\n\nexport default connect(\n    mapStateToProps,\n    { StoreUserInfo }\n)(Register);\n","import React, { Component } from 'react';\nimport { Button, ModalHeader, Modal, ModalBody, Label, Row, Col } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nimport Register from './RegisterComponent';\n\nconst required = (val) => val && val.length;\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(values) {\n        this.props.fetchUserInfo(values.username, values.password);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Button style={{ background: 'transparent' }} onClick={this.toggle}>\n                    <span className=\"fa fa-sign-in fa-lg\" />\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"login\" onSubmit={(values) => this.onSubmit(values)}>\n                            {/* <Row>\n                                <Col xs={{size: 4, offset: 3}}>\n                                    <h1 className=\"justify-content-center align-self-center\">\n                                        <strong>BruinMart</strong>\n                                    </h1>\n                                </Col>\n                            </Row> */}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"username\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-user fa-lg\" />\n                                </Label>\n                                <Col xs={8}>\n                                    <Control.text\n                                        model=\".username\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        placeholder=\"Username\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".username\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            error: \"Username doesn't exist!\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"password\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-lock fa-lg\" />\n                                </Label>\n                                <Col xs={8}>\n                                    <Control.password\n                                        model=\".password\"\n                                        id=\"password\"\n                                        name=\"password\"\n                                        placeholder=\"Password\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".password\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xl={{ size: 3, offset: 2 }}>\n                                    <Register />\n                                </Col>\n                                <Col xl={{ size: 3, offset: 2 }}>\n                                    <Button block className=\"item-button\" value=\"submit\" color=\"primary\">\n                                        Login\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport '../SearchInput.css';\n\nclass SearchComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.filterResults(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"component-search-input\">\n                <div>\n                    <input placeholder=\"Search Here\" style={{ color: 'white' }} onChange={this.handleChange} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchComponent;\n","import React, { Component, Fragment } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Col, Row, Button } from 'reactstrap';\n\nclass ImageUpload extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            files: []\n        };\n\n        this.deleteFile = this.deleteFile.bind(this);\n        this.onPreviewDrop = this.onPreviewDrop.bind(this);\n    }\n\n    handleCheck(val) {\n        return this.state.files.some(item => val.name === item.name);\n    }\n\n    onPreviewDrop = (files) => {\n        var reader = new FileReader();\n        reader.readAsDataURL(files[0]);\n        reader.onloadend=()=>{\n            const curPath = reader.result;\n            files[0].preview=curPath;\n            if(this.handleCheck(files[0])){\n                alert(\"Please do not upload the same image twice!\");\n            }\n            else{\n                this.setState({\n                    files: this.state.files.concat(files[0])\n                });\n            }\n        }\n    };\n\n    deleteFile = (file)=>{\n        this.setState({\n            files: this.state.files.filter(el => el!==file )\n        });\n    }\n\n    render() {\n        const previewStyle = {\n            display: 'inline',\n            width: 100,\n            height: 100\n        };\n\n        return (\n            <>\n                <Dropzone className=\"dropzone\" accept=\"image/*\" onDrop={this.onPreviewDrop}>\n                    <div className=\"upload-box\">Drag your image here or click the box to browse your local files.</div>\n                </Dropzone>\n                {this.state.files.length > 0 && (\n                    <Fragment>\n                        <h4>Uploaded Pictures</h4>\n                        {this.state.files.map((file,i) => (\n                            <div key={i}>\n                            <img alt={file.name} key={file.preview} src={file.preview} style={previewStyle} />\n                            {file.name}{' '}\n                            <Button value=\"delete\" onClick={()=>this.deleteFile(file)}>delete</Button>\n                            </div>\n                        ))}\n                        {console.log(this.state.files)}\n                    </Fragment>\n                )}\n            </>\n        );\n    }\n}\n\nexport default ImageUpload;\n","import React from 'react';\nimport { Button, Label, FormText, Modal, ModalHeader, ModalBody, Col, Row } from 'reactstrap';\nimport ImageUpload from './ImageUploadComponent';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => !val || val.length >= len;\nconst isNumber = (val) => !isNaN(Number(val));\nconst checked = (val) => val && val === true;\nclass NewPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    handleSubmit(values) {\n        this.props.resetNewPostForm();\n        this.props.postItem({\n            name: values.itemName,\n            price: parseInt(values.itemPrice),\n            picture:\n                'https://s7d4.scene7.com/is/image/roomandboard/?layer=0&size=498,400&scl=1&src=964101_wood_W&layer=comp&$prodzoom0$',\n            reserved: false,\n            seller: this.props.users.userInfo.name,\n            time: new Date().toISOString(),\n            detail: values.itemDes === '' ? 'No more details provided' : values.itemDes,\n            username: this.props.users.username\n        });\n        this.toggleModal();\n    }\n\n    render() {\n        return (\n            <div>\n                <Button style={{ background: 'transparent' }} onClick={this.toggleModal}>\n                    <span className=\"fa fa-plus fa-lg\" />\n                </Button>\n                <Modal className=\"modal-lg\" isOpen={this.state.modal} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>New Post</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"newPost\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".itemName\" md={1}>\n                                    <b>Name</b>\n                                </Label>\n                                <Col md={{ size: 5, offset: 1 }}>\n                                    <Control.text\n                                        model=\".itemName\"\n                                        id=\"itemName\"\n                                        name=\"itemName\"\n                                        placeholder=\"Enter the name of the item you want to sell\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".itemName\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            minLength: 'Must be greater than 2 characters. ',\n                                            maxLength: 'Must be 15 characters or less. '\n                                        }}\n                                    />\n                                </Col>\n                                <Label htmlFor=\".itemPrice\" md={1}>\n                                    <b>Price</b>\n                                </Label>\n                                {/* <Col md={0.3}><span className=\"fa fa-dollar fa-lg\" /></Col> */}\n                                <Col md={3}>\n                                    <Control.text\n                                        model=\".itemPrice\"\n                                        id=\"itemPrice\"\n                                        name=\"itemPrice\"\n                                        placeholder=\"Enter your price in US dollars\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".itemPrice\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isNumber: 'Has to be a number. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".itemDes\" md={2}>\n                                    <b>Item Description</b>\n                                </Label>\n                                <Col md={9}>\n                                    <Control.textarea\n                                        model=\".itemDes\"\n                                        id=\"itemDes\"\n                                        name=\"itemDes\"\n                                        placeholder=\"Enter a few lines to describe your item and outline anything potential buyers may need to know\"\n                                        className=\"form-control\"\n                                        rows=\"4\"\n                                    />\n                                </Col>\n                            </Row>\n                            {/* <FormGroup>\n          <Label htmlFor=\"exampleSelectMulti\">Select Multiple</Label>\n          <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple>\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </Input>\n        </FormGroup> */}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".pictures\" md={2}>\n                                    <b>Pictures</b>\n                                </Label>\n                                {/* <Input type=\"file\" name=\"file\" id=\"exampleFile\" /> */}\n                                <Col md={9}>\n                                    <FormText color=\"muted\">Upload a picture for your item here.</FormText>\n                                    <ImageUpload name=\"itemPic\" id=\"itemPic\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            {/* <FormGroup tag=\"fieldset\">\n          <legend>Radio Buttons</legend>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Option one is this and that—be sure to include why it's great\n            </Label>\n          </FormGroup>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Option two can be something else and selecting it will deselect option one\n            </Label>\n          </FormGroup>\n          <FormGroup check disabled>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" disabled />{' '}\n              Option three is disabled\n            </Label>\n          </FormGroup>\n        </FormGroup> */}\n                            <Row className=\"form-group\">\n                                <Col md={{ offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check md={9}>\n                                            <Control.checkbox\n                                                model=\".agreeTerms\"\n                                                name=\"agreeTerms\"\n                                                className=\"form-check-input\"\n                                                validators={{\n                                                    checked\n                                                }}\n                                            />{' '}\n                                            I understand that my information will only be provided to any potential\n                                            buyers after they have reserved my item.\n                                        </Label>\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".agreeTerms\"\n                                            show=\"touched\"\n                                            messages={{\n                                                checked: 'You need to agree. '\n                                            }}\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 3, offset: 2 }}>\n                                    <Button block type=\"submit\" value=\"submit\" color=\"primary\">\n                                        Post\n                                    </Button>\n                                </Col>\n                                <Col md={{ size: 3, offset: 3 }}>\n                                    <Button block color=\"secondary\" onClick={this.toggleModal}>\n                                        Cancel\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default NewPost;\n","import React, { Component } from 'react';\nimport Login from './LoginComponent';\nimport Register from './RegisterComponent';\nimport SearchComponent from './SearchComponent';\nimport NewPostModal from './NewPostComponent';\nimport { Navbar, Nav, NavbarToggler, NavItem } from 'reactstrap';\n\nfunction RenderButton(resetNewPostForm, postItem, fetchUserInfo, users) {\n    if (users.isLoggedIn) {\n        return <NewPostModal resetNewPostForm={resetNewPostForm} postItem={postItem} users={users} />;\n    } else {\n        return <Login fetchUserInfo={fetchUserInfo} loginError={users.userInfo.loginError} />;\n    }\n}\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.toggleSideNav = this.props.toggleSideNav.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar dark fixed=\"top\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleSideNav} />\n\n                        <Nav className=\"mx-auto col-6 col-lg-8\" navbar>\n                            <NavItem>\n                                <SearchComponent\n                                    filterResults={this.props.filterResults}\n                                    fetchItems={this.props.fetchItems}\n                                />\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"col-2\" navbar>\n                            <NavItem>\n                                {RenderButton(\n                                    this.props.resetNewPostForm,\n                                    this.props.postItem,\n                                    this.props.fetchUserInfo,\n                                    this.props.users\n                                )}\n                            </NavItem>\n                        </Nav>\n\n                        {/* <Nav className=\"md-mx-auto\">\n                                <NavItem>\n                                    <NavLink className=\"nav-link nav-buttons\" to=\"/home\">\n                                        <span className=\"fa fa-shopping-bag fa-lg\" />\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link nav-buttons\" to=\"/settings\">\n                                        <span className=\"fa fa-user fa-lg\" />\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link nav-buttons\" to=\"/newpost\">\n                                        <span className=\"fa fa-plus-square-o fa-lg\" />\n                                    </NavLink>\n                                </NavItem>\n                            </Nav> */}\n                    </div>\n                </Navbar>\n            </>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavbarBrand, Nav, NavItem } from 'reactstrap';\nimport { slide as Menu } from 'react-burger-menu';\nimport { NavLink } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport Login from './LoginComponent';\n\nfunction RenderSidebar(isLoggedIn, name, fetchUserInfo, loginError) {\n    if (isLoggedIn) {\n        return (\n            <div>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        <h4>Hello, {name} </h4>\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        <span className=\"fa fa-user fa-lg\" /> My Profile\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/posts\">\n                        <span className=\"fa fa-stack-exchange fa-lg\" /> My Posts\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/saved\">\n                        <span className=\"fa fa-heart-o fa-lg\" /> Saved Items\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/ongoing\">\n                        <span className=\"fa fa-exchange fa-lg\" /> Ongoing\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/sold\">\n                        <span className=\"fa fa-shopping-bag fa-lg\" /> Sold\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/settings\">\n                        <span className=\"fa fa-cog fa-lg\" /> Settings\n                    </NavLink>\n                </NavItem>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <NavItem>\n                    <h4>Please Log in</h4>\n                </NavItem>\n                <NavItem>\n                    <Login fetchUserInfo={fetchUserInfo} loginError={loginError} />\n                </NavItem>\n            </div>\n        );\n    }\n}\n\nconst SideBar = (props) => {\n    const avatarSrc = props.isLoggedIn ? props.users.userInfo.avatar : 'assets/images/joe_bruin.jpg';\n    return (\n        // Pass on our props\n        <Menu {...props}>\n            <Nav navbar onClick={props.toggleSideNav}>\n                <NavbarBrand className=\"mr-auto col-2 col-sm-2\">\n                    <Avatar size={100} src={avatarSrc} round={true} />\n                </NavbarBrand>\n                {RenderSidebar(props.isLoggedIn, props.users.userInfo.name, props.fetchUserInfo, props.loginError)}\n            </Nav>\n        </Menu>\n    );\n};\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from 'react-avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { itemsLoading } from '../redux/ActionCreators';\n\nvar divStyle = {\n    background: 'white',\n    padding: '0px',\n    margin: '0px'\n};\n\nfunction RenderListItem({ item }) {\n    var reserved = 'Not Reserved';\n    if (item.reserved == true) {\n        reserved = 'Reserved';\n    }\n    var time = item.time;\n    time = time.slice(0, 10);\n    return (\n        <ListItem alignItems=\"flex-start\" style={{ height: 200 }}>\n            <ListItemAvatar>\n                <Avatar alt=\"Remy Sharp\" src={item.picture} size=\"150\" />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <Typography component=\"span\" color=\"textPrimary\" variant=\"display1\">\n                        {item.name}\n                    </Typography>\n                }\n                secondary={\n                    <React.Fragment>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"title\">\n                            {reserved}\n                        </Typography>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"body2\">\n                            {time}\n                        </Typography>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"body2\">\n                            Price: ${item.price}\n                        </Typography>\n                        Description: {item.detail}\n                    </React.Fragment>\n                }\n            />\n        </ListItem>\n    );\n}\n\nfunction PostList(props) {\n    if (!props.isLoggedIn) {\n        return (\n            <div className=\"container start-of-home\">\n                <div className=\"col-12\">\n                    <h3>Please Login First</h3>\n                    <hr />\n                </div>\n            </div>\n        );\n    }\n    const sellItems = props.sellItems.map((item) => {\n        var arr = [];\n        for (var key in props.posts) {\n            if (props.posts.hasOwnProperty(key)) {\n                arr.push(props.posts[key]);\n            }\n        }\n        if (arr.indexOf(item.id) < 0) {\n            return <div />;\n        } else {\n            console.log(item.id);\n            return (\n                <div key={item.id} className=\"row align-items-start\">\n                    <div className=\"col-12 col-md m-1\">\n                        <RenderListItem item={item} />\n                    </div>\n                </div>\n            );\n        }\n    });\n\n    return (\n        <div className=\"container start-of-home\">\n            <div className=\"col-12\">\n                <h3>My Posts</h3>\n                <hr />\n            </div>\n            <div style={divStyle}>\n                <List>{sellItems}</List>\n            </div>\n        </div>\n    );\n}\n\nexport default PostList;\n","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Profile from './ProfileComponent';\nimport Header from './HeaderComponent';\nimport SideBar from './SideBarComponent';\nimport PostList from './PostListComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { filterResults, fetchItems, postItem, fetchUserInfo, reserveItem } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\n\nimport '../style.css';\n\nconst mapStateToProps = (state) => {\n    return {\n        sellItems: state.sellItems,\n        users: state.users,\n        loginError: state.users.error\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    postItem: (item) => dispatch(postItem(item)),\n    filterResults: (searchText) => {\n        dispatch(filterResults(searchText));\n    },\n    fetchItems: () => {\n        dispatch(fetchItems());\n    },\n    resetNewPostForm: () => {\n        dispatch(actions.reset('newPost'));\n    },\n    reserveItem: (key) => {\n        dispatch(reserveItem(key));\n    },\n    resetLoginForm: () => {\n        dispatch(actions.reset('login'));\n    },\n    fetchUserInfo: (username, password, toggle) => {\n        dispatch(fetchUserInfo(username, password));\n    }\n});\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: false,\n            isSideNavOpen: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleSideNav = this.toggleSideNav.bind(this);\n        this.handleStateChange = this.handleStateChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.fetchItems();\n    }\n\n    handleStateChange(state) {\n        this.setState({\n            isSideNavOpen: state.isOpen\n        });\n    }\n\n    toggleSideNav() {\n        this.setState({\n            isSideNavOpen: !this.state.isSideNavOpen\n        });\n    }\n\n    handleSubmit(event) {\n        this.setState({\n            loggedIn: true\n        });\n        event.preventDefault();\n    }\n\n    render() {\n        const HomePage = () => {\n            return <Home sellItems={this.props.sellItems.sellItems} reserveItem={this.props.reserveItem} />;\n        };\n\n        const PostPage = () => {\n            return (\n                <PostList\n                    sellItems={this.props.sellItems.sellItems}\n                    posts={this.props.users.userInfo.posts}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                />\n            );\n        };\n\n        const ProfilePage = () => {\n            return (\n                <Profile\n                    userInfo={this.props.users.userInfo}\n                />\n            );\n        };\n\n        return (\n            <div id=\"App\">\n                <SideBar\n                    noOverlay\n                    users={this.props.users}\n                    pageWrapId={'page-wrapper'}\n                    outerContainerId={'App'}\n                    isOpen={this.state.isSideNavOpen}\n                    onStateChange={(state) => this.handleStateChange(state)}\n                    toggleSideNav={this.toggleSideNav}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                    fetchUserInfo={this.props.fetchUserInfo}\n                />\n                <div id=\"page-wrapper\">\n                    <Header\n                        filterResults={this.props.filterResults}\n                        fetchItems={this.props.fetchItems}\n                        toggleSideNav={this.toggleSideNav}\n                        resetNewPostForm={this.props.resetNewPostForm}\n                        postItem={this.props.postItem}\n                        isLoggedIn={this.props.users.isLoggedIn}\n                        fetchUserInfo={this.props.fetchUserInfo}\n                        loginError={this.props.loginError}\n                        users={this.props.users}\n                    />\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route path=\"/profile\" component={ProfilePage} />\n                        <Route path=\"/posts\" component={PostPage} />\n                        <Redirect to=\"/\" />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Main)\n);\n","import * as ActionTypes from './ActionTypes';\nimport { itemsRef } from '../firebase';\n\nexport const sellItems = (\n    state = {\n        isLoading: false,\n        sellItems: [],\n        err: null,\n        origSellItems: []\n    },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.RESERVE_ITEM:           \n            var key = action.payload;\n            for (var i = 0; i < state.sellItems.length; i++){\n                if (state.sellItems[i]['id'] === key){\n                    state.sellItems[i]['reserved'] = true;\n                    console.log(state.sellItems[i]['reserved']);\n                    break;\n                }\n            }\n            return state;\n        case ActionTypes.FILTER:\n            var searchText = action.payload.searchText;\n            return {\n                ...state,\n                isLoading: false,\n                err: null,\n                sellItems: state.origSellItems\n                    .filter((item) => {\n                        if (item.name.toLowerCase().includes(searchText.toLowerCase())) {\n                            return true;\n                        }\n                        if (item.keywords && item.keywords.includes(searchText)) {\n                            return true;\n                        }\n                        return false;\n                    })\n                    .slice(0, action.payload.maxResults)\n            };\n        case ActionTypes.ADD_ITEM:\n            return {\n                ...state,\n                sellItems: state.sellItems.concat(action.payload),\n                origSellItems: state.origSellItems.concat(action.payload)\n            };\n        case ActionTypes.ADD_ITEMS:\n            return { ...state, isLoading: false, err: null, sellItems: action.payload, origSellItems: action.payload };\n        case ActionTypes.ITEMS_LOADING:\n            return { ...state, isLoading: true, err: null, sellItems: [], origSellItems: [] };\n        case ActionTypes.ITEMS_FAILED:\n            return { ...state, isLoading: false, err: action.payload, sellItems: [], origSellItems: [] };\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Users = (\n    state = {\n        isLoggedIn: false,\n        username: '',\n        userInfo: [],\n        error: null\n    },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.LOG_IN:\n            return {\n                ...state,\n                isLoggedIn: true,\n                username: action.username,\n                userInfo: action.userInfo,\n                error: null\n            };\n        case ActionTypes.LOG_OUT:\n            return {\n                ...state,\n                isLoggedIn: false,\n                username: '',\n                userInfo: [],\n                error: null\n            };\n        case ActionTypes.ADD_ITEM_USER:\n            return {\n                ...state,\n                userInfo: {\n                    ...state.userInfo,\n                    posts: state.userInfo.posts.concat(action.payload)\n                }\n            };\n        case ActionTypes.SIGN_UP:\n            return {\n                ...state,\n                isLoggedIn: true,\n                username: action.username,\n                password: action.password\n            };\n        case ActionTypes.LOG_IN_FAILED:\n            return {\n                ...state,\n                isLoggedIn: false,\n                username: '',\n                userInfo: [],\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n};\n","export const InitialPost = {\n    itemName: '',\n    itemPrice: '',\n    itemDes: '',\n    pictures: '',\n    agreeTerms: false\n};\n","export const InitialLogin = {\n    username: '',\n    password: ''\n};\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <div>\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { sellItems } from './items';\nimport { Users } from './users';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialPost } from './posts';\nimport { InitialLogin } from './login';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            sellItems: sellItems,\n            users: Users,\n            ...createForms({\n                newPost: InitialPost,\n                login: InitialLogin\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}