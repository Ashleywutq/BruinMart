{"version":3,"sources":["components/ReserveModalComponent.jsx","components/SaveModalComponent.jsx","components/HomeComponent.jsx","components/ProfileComponent.jsx","components/SearchComponent.jsx","components/LoginComponent.jsx","components/RegisterComponent.jsx","components/NewPostComponent.jsx","components/HeaderComponent.jsx","components/FooterComponent.jsx","components/SideBarComponent.jsx","firebase.js","firebaseConfig.js","redux/ActionCreators.jsx","redux/ActionTypes.jsx","components/MainComponent.jsx","redux/items.jsx","shared/users.jsx","redux/users.jsx","App.jsx","redux/configureStore.jsx","serviceWorker.jsx","index.jsx"],"names":["ModalExample","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","toggle","bind","assertThisInitialized","setState","react_default","a","createElement","reactstrap_es","color","onClick","isOpen","className","item","name","seller","React","Component","RenderCard","_ref","top","width","src","alt","class","ReserveModalComponent","SaveModalComponent","picture","time","detail","Home","sellItems","map","key","id","Profile","SearchComponent","handleChange","event","filterResults","target","value","placeholder","style","onChange","background","for","type","check","Header","isModalOpen","toggleModal","handleLogin","toggleSideNav","alert","username","password","remember","checked","preventDefault","Fragment","dark","fixed","navbar","components_SearchComponent","fetchItems","NewPostComponent","Footer","SideBar","BurgerMenu","es","size","round","NavLink","to","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","itemsRef","ref","addItems","items","payload","itemsLoading","itemsFailed","err","Main","loggedIn","isSideNavOpen","handleSubmit","handleStateChange","_this2","SideBarComponent","noOverlay","pageWrapId","outerContainerId","onStateChange","HeaderComponent","users","Switch","Route","exact","path","component","HomeComponent","Redirect","withRouter","connect","dispatch","searchText","maxResults","arguments","length","undefined","console","log","once","then","snapshot","val","Error","catch","error","message","isLoading","origSellItems","action","objectSpread","filter","toLowerCase","includes","keywords","slice","USERS","avatar","Users","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","react_redux_es","BrowserRouter","basename","process","MainComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+UAwCeA,cApCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,OAAO,GAGTR,EAAKS,OAAST,EAAKS,OAAOC,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANGA,wEAUjBG,KAAKS,SAAS,CACZJ,OAAQL,KAAKI,MAAMC,yCAKrB,OACEK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,SAASC,QAASf,KAAKM,QAArC,WACAI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOG,OAAQhB,KAAKI,MAAMC,MAAOC,OAAQN,KAAKM,OAAQW,UAAWjB,KAAKJ,MAAMqB,WAC1EP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaP,OAAQN,KAAKM,QAA1B,gBACAI,EAAAC,EAAAC,cAACC,EAAA,EAAD,2CACsCb,KAAKJ,MAAMsB,KAAKC,KADtD,UACmEnB,KAAKJ,MAAMsB,KAAKE,OADnF,IAC2FV,EAAAC,EAAAC,cAAA,WAD3F,gBAEeF,EAAAC,EAAAC,cAAA,WAFf,IAEsBF,EAAAC,EAAAC,cAAA,WAFtB,4EAKAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASf,KAAKM,QAAtC,WAA+D,IAC/DI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAASf,KAAKM,QAAxC,oBA7Bee,IAAMC,WCmClB3B,cAlCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,OAAO,GAGTR,EAAKS,OAAST,EAAKS,OAAOC,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANGA,wEAUjBG,KAAKS,SAAS,CACZJ,OAAQL,KAAKI,MAAMC,yCAKrB,OACEK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,SAASC,QAASf,KAAKM,QAArC,QACAI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOG,OAAQhB,KAAKI,MAAMC,MAAOC,OAAQN,KAAKM,OAAQW,UAAWjB,KAAKJ,MAAMqB,WAC1EP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaP,OAAQN,KAAKM,QAA1B,gBACAI,EAAAC,EAAAC,cAACC,EAAA,EAAD,ucAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASf,KAAKM,QAAtC,gBAAoE,IACpEI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAASf,KAAKM,QAAxC,oBA3Bee,IAAMC,yBCGjC,SAASC,EAATC,GAA8B,IAARN,EAAQM,EAARN,KAClB,OAAY,MAARA,EAEIR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASY,KAAG,EAACC,MAAM,OAAOC,IAAI,8EAA8EC,IAAI,mBAChHlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,kBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,0CACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,uGACAH,EAAAC,EAAAC,cAAA,OAAKiB,MAAM,OACPnB,EAAAC,EAAAC,cAAA,OAAKiB,MAAM,UACXnB,EAAAC,EAAAC,cAACkB,EAAD,OAEApB,EAAAC,EAAAC,cAAA,OAAKiB,MAAM,UACXnB,EAAAC,EAAAC,cAACmB,EAAD,UAQhBrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASY,KAAG,EAACC,MAAM,OAAOT,UAAU,yBAAyBU,IAAKT,EAAKc,QAASJ,IAAKV,EAAKC,OAC1FT,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAYK,EAAKC,MACjBT,EAAAC,EAAAC,cAACC,EAAA,EAAD,kBAAyBK,EAAKE,OAA9B,OAA0CF,EAAKe,MAC/CvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAWK,EAAKgB,QACZxB,EAAAC,EAAAC,cAAA,OAAKiB,MAAM,OACPnB,EAAAC,EAAAC,cAAA,OAAKiB,MAAM,UACXnB,EAAAC,EAAAC,cAACkB,EAAD,CAAcZ,KAAMA,KAEpBR,EAAAC,EAAAC,cAAA,OAAKiB,MAAM,UACXnB,EAAAC,EAAAC,cAACmB,EAAD,CAAWb,KAAMA,QAoC1BiB,MA5Bf,SAAcvC,GACV,IAAMwC,EAAYxC,EAAMwC,UAAUC,IAAI,SAACnB,GACnC,OACIR,EAAAC,EAAAC,cAAA,OAAK0B,IAAKpB,EAAKqB,GAAItB,UAAU,yBACzBP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qBACXP,EAAAC,EAAAC,cAACW,EAAD,CAAYL,KAAMA,QAMlC,OACIR,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,UACXP,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,aAGRF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACXP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACKuB,MC1BNI,cAtBb,SAAAA,EAAY5C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,IACjB3C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAArC,KAAAH,KAAMJ,KAEDQ,MAAQ,GAHIP,wEAOjB,OACEa,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACbP,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,oCAdQU,aCOPmB,GCbKpB,IAAMC,UCAHD,IAAMC,6BFRzB,SAAAmB,EAAY7C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,IACf5C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2C,GAAAtC,KAAAH,KAAMJ,KAED8C,aAAe7C,EAAK6C,aAAanC,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAHLA,4EAMN8C,GACT3C,KAAKJ,MAAMgD,cAAcD,EAAME,OAAOC,wCAItC,OACIpC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,0BACXP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOmC,YAAY,cAAcC,MAAO,CAAElC,MAAO,SAAWmC,SAAUjD,KAAK0C,wBAfjEpB,cGkGf3B,cA5Fb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,OAAO,GAGTR,EAAKS,OAAST,EAAKS,OAAOC,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANGA,wEAUjBG,KAAKS,SAAS,CACZJ,OAAQL,KAAKI,MAAMC,yCAKrB,OACEK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQmC,MAAO,CAAEE,WAAY,eAAiBnC,QAASf,KAAKM,QAAQI,EAAAC,EAAAC,cAAA,QAAMK,UAAU,sBACpFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOG,OAAQhB,KAAKI,MAAMC,MAAOC,OAAQN,KAAKM,OAAQW,UAAU,YAC9DP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaP,OAAQN,KAAKM,QAA1B,YACAI,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACFH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsC,IAAI,QAAX,QACAzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuC,KAAK,OAAOjC,KAAK,OAAOoB,GAAG,WAAWQ,YAAY,iDAE3DrC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsC,IAAI,SAAX,SACAzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuC,KAAK,OAAOjC,KAAK,QAAQoB,GAAG,YAAYQ,YAAY,kCAE7DrC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsC,IAAI,WAAX,oBACAzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuC,KAAK,WAAWjC,KAAK,UAAUoB,GAAG,UACzCQ,YAAY,oGAYdrC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsC,IAAI,eAAX,QACAzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuC,KAAK,OAAOjC,KAAK,OAAOoB,GAAG,gBAClC7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,MAAM,SAAhB,yCAyBFJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWwC,OAAK,GACd3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOwC,OAAK,GACV3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuC,KAAK,aAAc,IAD5B,uHAOA1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASf,KAAKM,QAAtC,QAA4D,IAC5DI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAASf,KAAKM,QAAxC,oBArFee,IAAMC,WC0GlBgC,cAzFX,SAAAA,EAAY1D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACfzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTmD,aAAa,GAGjB1D,EAAK2D,YAAc3D,EAAK2D,YAAYjD,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACnBA,EAAK4D,YAAc5D,EAAK4D,YAAYlD,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACnBA,EAAK6D,cAAgB7D,EAAKD,MAAM8D,cAAcnD,KAAzBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KATNA,2EAYP8C,GACR3C,KAAKwD,cACLG,MACI,aACI3D,KAAK4D,SAASd,MACd,cACA9C,KAAK6D,SAASf,MACd,cACA9C,KAAK8D,SAASC,SAEtBpB,EAAMqB,uDAINhE,KAAKS,SAAS,CACV8C,aAAcvD,KAAKI,MAAMmD,+CAK7B,OACI7C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsD,SAAA,KACIvD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQqD,MAAI,EAACC,MAAM,OACfzD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACXP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeE,QAASf,KAAK0D,gBAE7BhD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKI,UAAU,QAAQmD,QAAM,GACzB1D,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACyD,EAAD,CACIzB,cAAe5C,KAAKJ,MAAMgD,cAC1B0B,WAAYtE,KAAKJ,MAAM0E,eAInC5D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuD,QAAM,GACP1D,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAC2D,EAAD,UAuBhB7D,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACXP,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,iIAEuC,iBA/ElDU,aCZNkD,+BCyDAC,EAhDC,SAAC7E,GACb,OAEIc,EAAAC,EAAAC,cAAC8D,EAAA,MAAS9E,EACNc,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuD,QAAM,GACP1D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaI,UAAU,0BACnBP,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAQC,KAAM,GAAIjD,IAAI,8BAA8BkD,OAAO,KAE/DnE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAS7D,UAAU,WAAW8D,GAAG,YAC7BrE,EAAAC,EAAAC,cAAA,yBAGRF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAS7D,UAAU,WAAW8D,GAAG,YAC7BrE,EAAAC,EAAAC,cAAA,QAAMK,UAAU,qBADpB,gBAIJP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAS7D,UAAU,WAAW8D,GAAG,UAC7BrE,EAAAC,EAAAC,cAAA,QAAMK,UAAU,+BADpB,cAIJP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAS7D,UAAU,WAAW8D,GAAG,UAC7BrE,EAAAC,EAAAC,cAAA,QAAMK,UAAU,wBADpB,iBAIJP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAS7D,UAAU,WAAW8D,GAAG,YAC7BrE,EAAAC,EAAAC,cAAA,QAAMK,UAAU,yBADpB,aAIJP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAS7D,UAAU,WAAW8D,GAAG,SAC7BrE,EAAAC,EAAAC,cAAA,QAAMK,UAAU,6BADpB,UAIJP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAS7D,UAAU,WAAW8D,GAAG,aAC7BrE,EAAAC,EAAAC,cAAA,QAAMK,UAAU,oBADpB,8EC1DpB+D,IAASC,cCHa,CAClBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,kBDFvB,IAAIC,EAAWR,IAASQ,WAEXC,EAAWD,EAASE,IAAI,oBEuCxBC,GFtCWH,EAASE,IAAI,oBEsCb,SAACE,GAAD,MAAY,CAChCxC,KC3CqB,YD4CrByC,QAASD,KAGAE,EAAe,iBAAO,CAC/B1C,KClDyB,kBDqDhB2C,EAAc,SAACC,GAAD,MAAU,CACjC5C,KCrDwB,eDsDxByC,QAASG,IE5BPC,sBACF,SAAAA,EAAYrG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiG,IACfpG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmG,GAAA9F,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT8F,UAAU,EACVC,eAAe,GAEnBtG,EAAKuG,aAAevG,EAAKuG,aAAa7F,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACpBA,EAAK6D,cAAgB7D,EAAK6D,cAAcnD,KAAnBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACrBA,EAAKwG,kBAAoBxG,EAAKwG,kBAAkB9F,KAAvBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KATVA,mFAafG,KAAKJ,MAAM0E,uDAGGlE,GACdJ,KAAKS,SAAS,CACV0F,cAAe/F,EAAMY,iDAKzBhB,KAAKS,SAAS,CACV0F,eAAgBnG,KAAKI,MAAM+F,qDAItBxD,GACT3C,KAAKS,SAAS,CACVyF,UAAU,IAEdvD,EAAMqB,kDAGD,IAAAsC,EAAAtG,KAKL,OACIU,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,OACJ7B,EAAAC,EAAAC,cAAC2F,EAAD,CACIC,WAAS,EACTC,WAAY,eACZC,iBAAkB,MAClB1F,OAAQhB,KAAKI,MAAM+F,cACnBQ,cAAe,SAACvG,GAAD,OAAWkG,EAAKD,kBAAkBjG,MAErDM,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,gBACJ7B,EAAAC,EAAAC,cAACgG,EAAD,CACIC,MAAO7G,KAAKJ,MAAMiH,MAClBjE,cAAe5C,KAAKJ,MAAMgD,cAC1B0B,WAAYtE,KAAKJ,MAAM0E,WACvBZ,cAAe1D,KAAK0D,gBAExBhD,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACIpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UArBrB,WACb,OAAOxG,EAAAC,EAAAC,cAACuG,EAAD,CAAM/E,UAAWkE,EAAK1G,MAAMwC,UAAUA,eAqBjC1B,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAW1E,IAClC9B,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAUrC,GAAG,gBA5DlBzD,cAoEJ+F,cACXC,kBArFoB,SAAClH,GACrB,MAAO,CACHgC,UAAWhC,EAAMgC,UACjByE,MAAOzG,EAAMyG,QAIM,SAACU,GAAD,MAAe,CACtC3E,cAAe,SAAC4E,GACZD,EFlBqB,SAACC,GAAD,MAAkC,CAC3DpE,KCJkB,SDKlByC,QAAS,CACL2B,WAAYA,EACZC,WAJqBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA0B,KEkBtC9E,CAAc4E,KAE3BlD,WAAY,WACRiD,EFOwB,SAACA,GAI7B,OAHAM,QAAQC,IAAIrC,GACZ8B,EAASzB,GAAa,IAEfL,EACFsC,KAAK,SACLC,KAAK,SAACC,GAEH,GADAJ,QAAQC,IAAIG,EAASC,OACE,OAAnBD,EAASC,MAAgB,MAAMC,MAAM,iBACzCZ,EAAS5B,EAASsC,EAASC,UAE9BE,MAAM,SAACC,GAAD,OAAWd,EAASxB,EAAYsC,EAAMC,iBEuDjDhB,CAGErB,+CCjGO7D,EAAY,WAQpB,IAPDhC,EAOCsH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAPO,CACJa,WAAW,EACXnG,UAAW,GACX4D,IAAK,KACLwC,cAAe,IAEnBC,EACCf,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACD,OAAQa,EAAOrF,MACX,IFbc,SEcV,IAAIoE,EAAaiB,EAAO5C,QAAQ2B,WAChC,OAAO1H,OAAA4I,EAAA,EAAA5I,CAAA,GACAM,EADP,CACcmI,WAAW,EAAOvC,IAAK,KACjC5D,UAAWhC,EAAMoI,cACZG,OAAO,SAACzH,GACL,QAAIA,EAAKC,KAAKyH,cAAcC,SAASrB,EAAWoB,mBAG5C1H,EAAK4H,WAAY5H,EAAK4H,SAASD,SAASrB,MAK/CuB,MAAM,EAAGN,EAAO5C,QAAQ4B,cAErC,IF1BiB,YE2Bb,OAAO3H,OAAA4I,EAAA,EAAA5I,CAAA,GAAIM,EAAX,CAAkBmI,WAAW,EAAOvC,IAAK,KAAM5D,UAAWqG,EAAO5C,QAAS2C,cAAeC,EAAO5C,UACpG,IF9BqB,gBE+BjB,OAAO/F,OAAA4I,EAAA,EAAA5I,CAAA,GAAIM,EAAX,CAAkBmI,WAAW,EAAMvC,IAAK,KAAM5D,UAAW,GAAIoG,cAAe,KAChF,IF/BoB,eEgChB,OAAO1I,OAAA4I,EAAA,EAAA5I,CAAA,GAAIM,EAAX,CAAkBmI,WAAW,EAAOvC,IAAKyC,EAAO5C,QAASzD,UAAW,GAAIoG,cAAe,KAC3F,QACI,OAAOpI,ICpCN4I,EAAQ,CACjB,CACIpF,SAAU,QACVC,SAAU,SACVoF,OAAQ,8DAEZ,CACIrF,SAAU,SACVC,SAAU,SACVoF,OAAQ,sMCNHC,EAAQ,WAA2B,IAA1B9I,EAA0BsH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlBsB,EAGlB,OAHoCtB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC7BxE,KAEAhD,8BCAb+I,ECEYC,sBACVC,0BAAgB,CACZjH,UAAWA,EACXyE,MAAOqC,IAEXI,0BAAgBC,IAAOC,MDShBC,mLAZP,OACI/I,EAAAC,EAAAC,cAAC8I,EAAA,SAAD,CAAUP,MAAOA,GACbzI,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAeC,SAAUC,cACrBnJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkJ,EAAD,gBANNxI,aEIEyI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO3J,EAAAC,EAAAC,cAAC0J,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3C,KAAK,SAAA4C,GACjCA,EAAaC","file":"static/js/main.5e294a2e.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button color=\"danger\" onClick={this.toggle}>Reserve</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>Reserve Item</ModalHeader>\n          <ModalBody>\n            You are about to reserve the item \"{this.props.item.name}\" from {this.props.item.seller}.<br />\n            Are you sure?<br /> <br />\n            You will be able to check the seller's information and continue with the \n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>Confirm</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalExample;","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button color=\"danger\" onClick={this.toggle}>Save</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>Reserve Item</ModalHeader>\n          <ModalBody>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalExample;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardDeck, CardSubtitle, CardLink, Button, Row } from 'reactstrap';\nimport ReserveModal from \"./ReserveModalComponent\";\nimport SaveModal from \"./SaveModalComponent\";\nimport { RenderItem } from './ItemDetailComponent';\n\nfunction RenderCard({ item }) {\n    if (item == null) {\n        return (\n            <Card>\n                <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\" alt=\"Card image cap\" />\n                <CardBody>\n                    <CardTitle>Item Name</CardTitle>\n                    <CardSubtitle>Posted by Joe Bruin on 26/11/2018</CardSubtitle>\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                        <ReserveModal />\n                        </div>\n                        <div class=\"col-sm\">\n                        <SaveModal />\n                        </div>\n                    </div>\n                </CardBody>\n            </Card>\n        );\n    }\n    return (\n        <Card>\n            <CardImg top width=\"100%\" className=\"card-img-top img-fluid\" src={item.picture} alt={item.name} />\n            <CardBody>\n                <CardTitle>{item.name}</CardTitle>\n                <CardSubtitle>Posted by {item.seller} on {item.time}</CardSubtitle>\n                <CardText>{item.detail}</CardText>\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                        <ReserveModal item={item}/>\n                        </div>\n                        <div class=\"col-sm\">\n                        <SaveModal item={item}/>\n                        </div>\n                    </div>\n            </CardBody>\n        </Card>\n    );\n}\n\nfunction Home(props) {\n    const sellItems = props.sellItems.map((item) => {\n        return (\n            <div key={item.id} className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={item} />\n                </div>\n            </div>\n        );\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h3>Items On Sale</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">\n                <CardDeck>\n                    {sellItems}\n                </CardDeck>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n  Jumbotron,\n  Button,\n  ModalHeader,\n  Modal,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Jumbotron>\n        <div className=\"container\">\n          <div className=\"row row-header\">\n            <div className=\"col-12 col-sm-6\">\n              <h1>Hello Jerry BABA,</h1>\n              <p>Jerry BABA. </p>\n            </div>\n          </div>\n        </div>\n      </Jumbotron>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\n\nimport '../SearchInput.css';\n\nclass SearchComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.filterResults(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"component-search-input\">\n                <div>\n                    <input placeholder=\"Search Here\" style={{ color: 'white' }} onChange={this.handleChange} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchComponent;\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  ModalHeader,\n  Modal,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button style={{ background: \"transparent\" }} onClick={this.toggle}>\n          <span className=\"fa fa-sign-in fa-lg\" /> Login\n        </Button>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleLogin}>\n              <FormGroup>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  innerRef={input => (this.username = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  innerRef={input => (this.password = input)}\n                />\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"checkbox\"\n                    name=\"remember\"\n                    innerRef={input => (this.remember = input)}\n                  />{\" \"}\n                  Remember me\n                </Label>\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Login\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  ModalHeader,\n  Modal,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.toggle} style={{ background: \"transparent\" }}>\n          <span className=\"fa fa-sign-in fa-lg\" /> Register\n        </Button>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleLogin}>\n              <FormGroup>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  innerRef={input => (this.username = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  innerRef={input => (this.password = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  innerRef={input => (this.password = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"tel\">Contact number</Label>\n                <Input\n                  type=\"tel\"\n                  id=\"tel\"\n                  name=\"tel\"\n                  innerRef={input => (this.password = input)}\n                />\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"checkbox\"\n                    name=\"remember\"\n                    innerRef={input => (this.remember = input)}\n                  />{\" \"}\n                  Remember me\n                </Label>\n              </FormGroup>\n\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Register\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default Register;\n","import React from 'react';\nimport { Button,Form, FormGroup, Label, Input, FormText ,Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' }\n]\n\nclass ModalExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button style={{ background: \"transparent\" }} onClick={this.toggle}><span className=\"fa fa-plus fa-lg\" /></Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className=\"modal-lg\">\n          <ModalHeader toggle={this.toggle}>New Post</ModalHeader>\n          <ModalBody>\n          <Form>\n        <FormGroup>\n          <Label for=\"Item\">Item</Label>\n          <Input type=\"text\" name=\"item\" id=\"itemName\" placeholder=\"enter the name of the item you want to sell\" />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"Price\">Price</Label>\n          <Input type=\"text\" name=\"price\" id=\"itemPrice\" placeholder=\"enter a number in US dollars\" />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"itemDes\">Item Description</Label>\n          <Input type=\"textarea\" name=\"itemDes\" id=\"itemDes\" \n          placeholder=\"enter a few lines to describe your item and outline anything potential buyers may need to know\" />\n        </FormGroup>\n        {/* <FormGroup>\n          <Label for=\"exampleSelectMulti\">Select Multiple</Label>\n          <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple>\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </Input>\n        </FormGroup> */}\n        <FormGroup>\n          <Label for=\"exampleFile\">File</Label>\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n          <FormText color=\"muted\">\n            Upload a picture for your item here.\n          </FormText>\n        </FormGroup>\n        {/* <FormGroup tag=\"fieldset\">\n          <legend>Radio Buttons</legend>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Option one is this and that—be sure to include why it's great\n            </Label>\n          </FormGroup>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Option two can be something else and selecting it will deselect option one\n            </Label>\n          </FormGroup>\n          <FormGroup check disabled>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" disabled />{' '}\n              Option three is disabled\n            </Label>\n          </FormGroup>\n        </FormGroup> */}\n        <FormGroup check>\n          <Label check>\n            <Input type=\"checkbox\" />{' '}\n            I understand that my information will only be provided to any potential buyers after they have reserved my item.\n          </Label>\n        </FormGroup>\n      </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>Post</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalExample;","import React, { Component } from 'react';\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavbarToggler,\n    Collapse,\n    NavItem,\n    Jumbotron,\n    Button,\n    ModalHeader,\n    Modal,\n    ModalBody,\n    Form,\n    FormGroup,\n    Input,\n    Label\n} from 'reactstrap';\n\nimport Login from './LoginComponent';\nimport Register from './RegisterComponent';\nimport { NavLink } from 'react-router-dom';\nimport SearchComponent from './SearchComponent';\nimport NewPostModal from './NewPostComponent';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.toggleSideNav = this.props.toggleSideNav.bind(this);\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\n            'Username: ' +\n                this.username.value +\n                ' Password: ' +\n                this.password.value +\n                ' Remember: ' +\n                this.remember.checked\n        );\n        event.preventDefault();\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar dark fixed=\"top\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleSideNav} />\n\n                        <Nav className=\"col-8\" navbar>\n                            <NavItem>\n                                <SearchComponent\n                                    filterResults={this.props.filterResults}\n                                    fetchItems={this.props.fetchItems}\n                                />\n                            </NavItem>\n                        </Nav>\n                        <Nav navbar>\n                            <NavItem>\n                                <NewPostModal />\n                            </NavItem>\n                        </Nav>\n\n                        {/* <Nav className=\"md-mx-auto\">\n                                <NavItem>\n                                    <NavLink className=\"nav-link nav-buttons\" to=\"/home\">\n                                        <span className=\"fa fa-shopping-bag fa-lg\" />\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link nav-buttons\" to=\"/settings\">\n                                        <span className=\"fa fa-user fa-lg\" />\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link nav-buttons\" to=\"/newpost\">\n                                        <span className=\"fa fa-plus-square-o fa-lg\" />\n                                    </NavLink>\n                                </NavItem>\n                            </Nav> */}\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>BruinMart</h1>\n                                <p>\n                                    We want to redesign the user experience for using the Facebook \"Free and For Sale\"\n                                    group for both buyers and sellers.{' '}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n            </>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n  return (\n    <div className=\"footer\">\n      <div className=\"container\">\n        \n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavbarToggler,\n    Collapse,\n    NavItem,\n    Jumbotron,\n    Button,\n    ModalHeader,\n    Modal,\n    ModalBody,\n    Form,\n    FormGroup,\n    Input,\n    Label\n} from 'reactstrap';\nimport { slide as Menu } from 'react-burger-menu';\nimport { NavLink } from 'react-router-dom';\nimport Avatar from 'react-avatar';\n\nconst SideBar = (props) => {\n    return (\n        // Pass on our props\n        <Menu {...props}>\n            <Nav navbar>\n                <NavbarBrand className=\"mr-auto col-2 col-sm-2\">\n                    <Avatar size={50} src=\"assets/images/joe_bruin.jpg\" round={true} />\n                </NavbarBrand>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        <h4>Joe Bruin</h4>\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        <span className=\"fa fa-user fa-lg\" /> My Profile\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/posts\">\n                        <span className=\"fa fa-stack-exchange fa-lg\" /> My Posts\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/saved\">\n                        <span className=\"fa fa-heart-o fa-lg\" /> Saved Items\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/ongoing\">\n                        <span className=\"fa fa-exchange fa-lg\" /> Ongoing\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/sold\">\n                        <span className=\"fa fa-shopping-bag fa-lg\" /> Sold\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/settings\">\n                        <span className=\"fa fa-cog fa-lg\" /> Settings\n                    </NavLink>\n                </NavItem>\n            </Nav>\n        </Menu>\n    );\n};\n\nexport default SideBar;\n","import firebase from 'firebase';\nimport { config } from './firebaseConfig';\n\nfirebase.initializeApp(config);\nvar database = firebase.database();\n\nexport const itemsRef = database.ref('bruinmart/items/');\nexport const usersRef = database.ref('bruinmart/users/');\n","export const config = {\n    apiKey: 'AIzaSyDpr5SspydURpwNzpjr2F9kmC1WLwQaH9w',\n    authDomain: 'jerrylzylzy.firebaseapp.com',\n    databaseURL: 'https://jerrylzylzy.firebaseio.com',\n    projectId: 'jerrylzylzy',\n    storageBucket: 'jerrylzylzy.appspot.com',\n    messagingSenderId: '1089192741461'\n};","import * as ActionTypes from './ActionTypes';\nimport { itemsRef } from '../firebase';\n\nexport const filterResults = (searchText, maxResults = 20) => ({\n    type: ActionTypes.FILTER,\n    payload: {\n        searchText: searchText,\n        maxResults: maxResults\n    }\n});\n\n// export const postItems = (itemName, pictures, price, description) => (dispatch) => {\n//     const newItem = {\n//         itemName: itemName,\n//         pictures: pictures,\n//         price: price,\n//         description: description\n//     };\n\n//     newItem.date = new Date().toISOString();\n\n//     return itemsRef\n//         .push(newItem)\n//         .then((snapshot) => {\n//             newItem.id = snapshot.id;\n//             dispatch(addItem(item));\n//         })\n//         .catch((error) => dispatch(itemsFailed(error.message)));\n// };\n\n//  This is a thunk\nexport const fetchItems = () => (dispatch) => {\n    console.log(itemsRef);\n    dispatch(itemsLoading(true));\n\n    return itemsRef\n        .once('value')\n        .then((snapshot) => {\n            console.log(snapshot.val());\n            if (snapshot.val() === null) throw Error('Fetch failed.');\n            dispatch(addItems(snapshot.val()));\n        })\n        .catch((error) => dispatch(itemsFailed(error.message)));\n};\n\nexport const addItems = (items) => ({\n    type: ActionTypes.ADD_ITEMS,\n    payload: items\n});\n\nexport const itemsLoading = () => ({\n    type: ActionTypes.ITEMS_LOADING\n});\n\nexport const itemsFailed = (err) => ({\n    type: ActionTypes.ITEMS_FAILED,\n    payload: err\n});\n","export const FILTER = 'FILTER';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\nexport const ITEMS_FAILED = 'ITEMS_FAILED';\nexport const ADD_ITEMS = 'ADD_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const POST_ITEMS = 'POST_ITEMS';\n","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Profile from './ProfileComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport SideBar from './SideBarComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { filterResults, fetchItems } from '../redux/ActionCreators';\n\nimport '../style.css';\n\nconst mapStateToProps = (state) => {\n    return {\n        sellItems: state.sellItems,\n        users: state.users\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    filterResults: (searchText) => {\n        dispatch(filterResults(searchText));\n    },\n    fetchItems: () => {\n        dispatch(fetchItems());\n    }\n});\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: false,\n            isSideNavOpen: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleSideNav = this.toggleSideNav.bind(this);\n        this.handleStateChange = this.handleStateChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.fetchItems();\n    }\n\n    handleStateChange(state) {\n        this.setState({\n            isSideNavOpen: state.isOpen\n        });\n    }\n\n    toggleSideNav() {\n        this.setState({\n            isSideNavOpen: !this.state.isSideNavOpen\n        });\n    }\n\n    handleSubmit(event) {\n        this.setState({\n            loggedIn: true\n        });\n        event.preventDefault();\n    }\n\n    render() {\n        const HomePage = () => {\n            return <Home sellItems={this.props.sellItems.sellItems} />;\n        };\n\n        return (\n            <div id=\"App\">\n                <SideBar\n                    noOverlay\n                    pageWrapId={'page-wrapper'}\n                    outerContainerId={'App'}\n                    isOpen={this.state.isSideNavOpen}\n                    onStateChange={(state) => this.handleStateChange(state)}\n                />\n                <div id=\"page-wrapper\">\n                    <Header\n                        users={this.props.users}\n                        filterResults={this.props.filterResults}\n                        fetchItems={this.props.fetchItems}\n                        toggleSideNav={this.toggleSideNav}\n                    />\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route path=\"/profile\" component={Profile} />\n                        <Redirect to=\"/\" />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Main)\n);\n","import * as ActionTypes from './ActionTypes';\nimport { itemsRef } from '../firebase';\n\nexport const sellItems = (\n    state = {\n        isLoading: false,\n        sellItems: [],\n        err: null,\n        origSellItems: []\n    },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.FILTER:\n            var searchText = action.payload.searchText;\n            return {\n                ...state, isLoading: false, err: null, \n                sellItems: state.origSellItems\n                    .filter((item) => {\n                        if (item.name.toLowerCase().includes(searchText.toLowerCase())) {\n                            return true;\n                        }\n                        if (item.keywords && item.keywords.includes(searchText)) {\n                            return true;\n                        }\n                        return false;\n                    })\n                    .slice(0, action.payload.maxResults)\n            };\n        case ActionTypes.ADD_ITEMS:\n            return {...state, isLoading: false, err: null, sellItems: action.payload, origSellItems: action.payload};\n        case ActionTypes.ITEMS_LOADING:\n            return {...state, isLoading: true, err: null, sellItems: [], origSellItems: []};\n        case ActionTypes.ITEMS_FAILED:\n            return {...state, isLoading: false, err: action.payload, sellItems: [], origSellItems: []};        \n        default:\n            return state;\n    }\n};\n","export const USERS = [\n    {\n        username: 'jerry',\n        password: '123456',\n        avatar: 'https://avatars0.githubusercontent.com/u/6896568?s=460&v=4'\n    },\n    {\n        username: 'ashley',\n        password: '123abc',\n        avatar: 'https://store.playstation.com/store/api/chihiro/00_09_000/container/US/en/999/UP2477-CUSA06694_00-AV00000000000039/1523526938000/image?w=240&h=240&bg_color=000000&opacity=100&_version=00_09_000'\n    },\n];\n","import { USERS } from '../shared/users';\nimport { usersRef } from '../firebase';\n\nexport const Users = (state = USERS, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <div>\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { sellItems } from './items';\nimport { Users } from './users';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            sellItems: sellItems,\n            users: Users\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}