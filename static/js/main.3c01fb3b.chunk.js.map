{"version":3,"sources":["components/ReserveModalComponent.jsx","components/SaveModalComponent.jsx","components/HomeComponent.jsx","components/ProfileComponent.jsx","shared/firebase.js","shared/firebaseConfig.js","redux/ActionCreators.jsx","redux/ActionTypes.jsx","shared/validators.js","shared/MessageTypes.js","components/RegisterComponent.jsx","components/LoginComponent.jsx","components/SearchComponent.jsx","components/ImageUploadComponent.jsx","components/NewPostComponent.jsx","components/HeaderComponent.jsx","components/SideBarComponent.jsx","components/PostListComponent.jsx","components/MainComponent.jsx","redux/items.jsx","redux/users.jsx","redux/InitStates.jsx","App.jsx","redux/configureStore.jsx","serviceWorker.jsx","index.jsx"],"names":["ReserveModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","toggle","bind","assertThisInitialized","onSubmit","setState","event","preventDefault","reserveItem","item","id","userInfo","name","email","tel","react_default","a","createElement","reactstrap_es","block","color","className","onClick","isOpen","seller","Component","ModalExample","React","RenderCard","_ref","users","top","width","src","picture","alt","style","wordWrap","price","dist_default","date","time","format","detail","xl","size","offset","isLoggedIn","ReserveModalComponent","RenderReserve","SaveModalComponent","RenderSave","Home","key","_this2","setTimeout","forceUpdate","_this3","sellItems","filter","reserved","isReserved","map","Profile","values","StoreUserInfo","username","password","model","htmlFor","xs","lib","text","value","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","itemsRef","ref","usersRef","reserve","type","payload","addItems","items","itemsLoading","itemsFailed","err","fetchUserInfo","dispatch","child","once","then","snapshot","val","posts","hasOwnProperty","push","loginUser","actions","change","doesUsernameExist","callback","Promise","checkUsername","message","required","validator","isEmpty","ignore_whitespace","Register","placeholder","validators","show","messages","asyncValidators","isEmail","isMobilePhone","connect","resetRegisterForm","reset","phone","update","avatar","isLoginValid","Login","button","undefined","isSideBar","NavLink","to","background","RegisterComponent","SearchComponent","handleChange","filterResults","target","onChange","ImageUpload","onPreviewDrop","files","reader","FileReader","readAsDataURL","onloadend","curPath","result","preview","handleCheck","alert","concat","deleteFile","file","el","some","previewStyle","display","height","Fragment","dist_es","accept","onDrop","length","react","i","console","log","isNumber","isNaN","Number","checked","NewPost","toggleModal","handleSubmit","resetNewPostForm","postItem","itemName","parseInt","itemPrice","Date","toISOString","itemDes","len","md","minLength","maxLength","textarea","rows","ImageUploadComponent","check","checkbox","Header","isModalOpen","toggleSideNav","dark","fixed","navbar","components_SearchComponent","fetchItems","NewPostComponent","LoginComponent","loginError","SideBar","logoutUser","avatarSrc","BurgerMenu","react_avatar_es","round","divStyle","padding","margin","RenderListItem","Button_default","href","text-transform","slice","ListItem_default","alignItems","ListItemAvatar_default","ListItemText_default","primary","Typography_default","component","variant","secondary","PostList","arr","filterCriterion","renderOngoing","indexOf","title","List_default","Main","loggedIn","isSideNavOpen","handleStateChange","SideBarComponent","noOverlay","pageWrapId","outerContainerId","onStateChange","HeaderComponent","Switch","Route","exact","path","HomeComponent","ProfileComponent","PostListComponent","Redirect","withRouter","error","addItem","catch","searchText","maxResults","arguments","rawItems","Error","resetLoginForm","setPending","checkLoginInfo","valid","setValidity","isLoading","origSellItems","action","objectSpread","toLowerCase","includes","keywords","Users","InitialLogin","InitialRegister","InitialPost","pictures","agreeTerms","InitialProfile","store","createStore","combineReducers","createForms","newPost","login","register","profile","applyMiddleware","thunk","logger","App","es","BrowserRouter","basename","process","MainComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c01fb3b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ReserveModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        this.toggle();\n        this.props.reserveItem(\n            this.props.item.id,\n            this.props.userInfo.name,\n            this.props.userInfo.email,\n            this.props.userInfo.tel\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block color=\"primary\" className=\"item-button\" onClick={this.toggle}>\n                    Reserve\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Reserve Item</ModalHeader>\n                    <ModalBody>\n                        You are about to reserve the item \"{this.props.item.name}\" from {this.props.item.seller}.<br />\n                        Are you sure?\n                        <br /> <br />\n                        You will be able to see the seller's contact information and continue with this deal under the \"\n                        <span className=\"fa fa-exchange fa-lg fa-fw\" /> Ongoing\" section in the sidebar.\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.onSubmit}>\n                            Confirm\n                        </Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>\n                            Cancel\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ReserveModal;\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalExample extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block color=\"danger\" className=\"item-button\" onClick={this.toggle}>\n                    Save\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Save Item</ModalHeader>\n                    <ModalBody>\n                        You are about to save the item \"{this.props.item.name}\" from {this.props.item.seller}.<br />\n                        You will be able to view this item under \"<span className=\"fa fa-heart-o fa-lg fa-fw\" /> Saved Items\"\n                        in the sidebar.\n                        <br /> <br />\n                        Saving will not reserve this item for you.\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.toggle}>\n                            Confirm\n                        </Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>\n                            Cancel\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalExample;\n","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardDeck, CardSubtitle, Row, Col } from 'reactstrap';\nimport ReserveModal from './ReserveModalComponent';\nimport SaveModal from './SaveModalComponent';\nimport Moment from 'react-moment';\nimport { setTimeout } from 'timers';\n\nfunction RenderReserve(users, item, reserveItem) {\n    if (users.isLoggedIn) {\n        return (\n            <ReserveModal userInfo={users.userInfo} item={item} reserveItem={reserveItem} />\n        );\n    } else {\n        return;\n    }\n}\n\nfunction RenderSave(isLoggedIn, item) {\n    if (isLoggedIn) {\n        return <SaveModal item={item} />;\n    } else {\n        return;\n    }\n}\n\nfunction RenderCard({ item, reserveItem, users }) {\n    return (\n        <Card>\n            <CardImg top width=\"100%\" className=\"card-img-top img-fluid\" src={item.picture} alt={item.name} />\n            <CardBody>\n                <CardTitle className=\"card-title\">\n                    <span style={{ width: '27.3vw', wordWrap: 'break-word' }}> {item.name} </span>\n                    <span> ${item.price}</span>\n                </CardTitle>\n                <CardSubtitle>\n                    {item.seller}\n                    <br />\n                    <Moment date={item.time} format=\"MMM D YYYY HH:MM\" />\n                </CardSubtitle>\n                <CardText style={{ width: '27.3vw', wordWrap: 'break-word' }}>{item.detail}</CardText>\n                <Row>\n                    <Col xl={{ size: 4, offset: 1 }}>{RenderReserve(users, item, reserveItem)}</Col>\n                    <Col xl={{ size: 4, offset: 2 }}>{RenderSave(users.isLoggedIn, { item })}</Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n}\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.reserveItem = this.reserveItem.bind(this);\n    }\n\n    reserveItem(key, name, email, tel) {\n        this.props.reserveItem(key, name, email, tel);\n        setTimeout(() => this.forceUpdate(), 500);\n    }\n\n    render() {\n        const sellItems = this.props.sellItems\n            .filter((item) => !item.reserved.isReserved)\n            .map((item) => {\n                return (\n                    <div key={item.id} className=\"row align-items-start\">\n                        <div className=\"col-12 col-md m-1\">\n                            <RenderCard\n                                item={item}\n                                reserveItem={this.reserveItem}\n                                users={this.props.users}\n                            />\n                        </div>\n                    </div>\n                );\n            });\n\n        return (\n            <div className=\"container\">\n                <div className=\"row start-of-home\">\n                    <div className=\"col-12\">\n                        <h3>Items On Sale</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <CardDeck>{sellItems}</CardDeck>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Control } from 'react-redux-form';\nimport { Form, Label, Col, Row } from 'reactstrap';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    onSubmit(values) {\n        this.props.StoreUserInfo(\n            values.name,\n            this.props.userInfo.username,\n            this.props.userInfo.password,\n            values.email,\n            values.tel\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"start-of-home\">\n                <div className=\"col-12\">\n                    <h1>Hello, {this.props.userInfo.name}</h1>\n                    <hr />\n                </div>\n                <Form model=\"profile\" onSubmit={(values) => this.onSubmit(values)}>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"name\" xs={{ size: 1, offset: 1 }}>\n                            <span className=\"fa fa-id-card-o fa-lg\" />\n                        </Label>\n                        <Col xs={9}>\n                            <Control.text\n                                model=\".name\"\n                                id=\"name\"\n                                name=\"name\"\n                                value={this.props.userInfo.name}\n                                className=\"form-control\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"email\" xs={{ size: 1, offset: 1 }}>\n                            <span className=\"fa fa-envelope-o fa-lg\" />\n                        </Label>\n                        <Col xs={9}>\n                            <Control.text\n                                model=\".email\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={this.props.userInfo.email}\n                                className=\"form-control\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"tel\" xs={{ size: 1, offset: 1 }}>\n                            <span className=\"fa fa-phone fa-lg\" />\n                        </Label>\n                        <Col xs={9}>\n                            <Control.text\n                                model=\".tel\"\n                                id=\"tel\"\n                                name=\"tel\"\n                                value={this.props.userInfo.tel}\n                                className=\"form-control\"\n                            />\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport { config } from './firebaseConfig';\n\nfirebase.initializeApp(config);\nvar database = firebase.database();\n\nexport const itemsRef = database.ref('bruinmart/items/');\nexport const usersRef = database.ref('bruinmart/users/');\n","export const config = {\n    apiKey: 'AIzaSyDpr5SspydURpwNzpjr2F9kmC1WLwQaH9w',\n    authDomain: 'jerrylzylzy.firebaseapp.com',\n    databaseURL: 'https://jerrylzylzy.firebaseio.com',\n    projectId: 'jerrylzylzy',\n    storageBucket: 'jerrylzylzy.appspot.com',\n    messagingSenderId: '1089192741461'\n};","import * as ActionTypes from './ActionTypes';\nimport { itemsRef, usersRef } from '../shared/firebase';\nimport { actions } from 'react-redux-form';\n\nexport const filterResults = (searchText, maxResults = 20) => ({\n    type: ActionTypes.FILTER,\n    payload: {\n        searchText: searchText,\n        maxResults: maxResults\n    }\n});\n\n//  This is a thunk\n\nexport const fetchItems = () => (dispatch) => {\n    dispatch(itemsLoading(true));\n\n    return itemsRef\n        .once('value')\n        .then((snapshot) => {\n            var rawItems = snapshot.val();\n            if (rawItems === null) throw Error('Fetch failed.');\n            var sellItems = [];\n            for (var key in rawItems) {\n                if (rawItems.hasOwnProperty(key)) {\n                    var item = rawItems[key];\n                    item.id = key;\n                    sellItems.push(item);\n                }\n            }\n            dispatch(addItems(sellItems));\n        })\n        .catch((error) => dispatch(itemsFailed(error.message)));\n};\n\nexport const reserveItem = (key, name, email, tel) => (dispatch) => {\n    const reserved = {\n        isReserved: true,\n        name,\n        email,\n        tel\n    };\n    return itemsRef\n        .child('/' + key)\n        .update({\n            reserved\n        })\n        .then((error) => {\n            if (error) throw error;\n            dispatch(reserve(key, reserved));\n        })\n        .catch((error) => {\n            dispatch(itemsFailed(error.message));\n            alert('Reserved failed! Error: ' + error.message);\n        });\n};\n\nexport const reserve = (key, reserved) => ({\n    type: ActionTypes.RESERVE_ITEM,\n    payload: {\n        key,\n        reserved\n    }\n});\n\nexport const addItems = (items) => ({\n    type: ActionTypes.ADD_ITEMS,\n    payload: items\n});\n\nexport const itemsLoading = () => ({\n    type: ActionTypes.ITEMS_LOADING\n});\n\nexport const itemsFailed = (err) => ({\n    type: ActionTypes.ITEMS_FAILED,\n    payload: err\n});\n\nexport const addItem = (item) => ({\n    type: ActionTypes.ADD_ITEM,\n    payload: item\n});\n\nexport const addItemToUser = (itemKey) => ({\n    type: ActionTypes.ADD_ITEM_USER,\n    payload: itemKey\n});\n\nexport const postItem = (item) => (dispatch) => {\n    return itemsRef\n        .push(item)\n        .then(function(snapshot) {\n            item.id = snapshot.key;\n            dispatch(addItem(item));\n            usersRef.child(item.username + '/posts/').push(item.id);\n            dispatch(addItemToUser(item.id));\n            alert('Post Successful!');\n        })\n        .catch((error) => alert('Post failed! Error: ' + error.message));\n};\n\nexport const fetchUserInfo = (username) => (dispatch) => {\n    return usersRef\n        .child(username)\n        .once('value')\n        .then((snapshot) => {\n            var userInfo = snapshot.val();\n            var posts = [];\n            for (var key in userInfo.posts) {\n                if (userInfo.posts.hasOwnProperty(key)) {\n                    posts.push(userInfo.posts[key]);\n                }\n            }\n            userInfo.posts = posts;\n            dispatch(loginUser(username, userInfo));\n            dispatch(actions.change('profile.email', userInfo.email));\n            dispatch(actions.change('profile.tel', userInfo.tel));\n        });\n};\n\nexport const loginFailed = (error) => ({\n    type: ActionTypes.LOG_IN_FAILED,\n    payload: error\n});\n\n//actions for login logout\nexport const loginUser = (username, userInfo) => {\n    return {\n        type: ActionTypes.LOG_IN,\n        username: username,\n        userInfo: userInfo\n    };\n};\n\nexport const logoutUser = () => ({\n    type: ActionTypes.LOG_OUT\n});\n\nexport const StoreUserInfo = (name, username, password, email, phone) => (dispatch) => {\n    return usersRef\n        .child(username)\n        .update({\n            name: name,\n            password: password,\n            email: email,\n            tel: phone,\n            avatar: 'assets/images/joe_bruin.jpg',\n            posts: []\n        })\n        .then(() => {\n            dispatch(fetchUserInfo(username));\n        });\n};\n\nexport const signup = (username, password) => {\n    return {\n        type: ActionTypes.SIGN_UP,\n        username: username,\n        password: password\n    };\n};\n","export const FILTER = 'FILTER';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\nexport const ITEMS_FAILED = 'ITEMS_FAILED';\nexport const ADD_ITEMS = 'ADD_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const POST_ITEMS = 'POST_ITEMS';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const SIGN_UP = 'SIGN_UP';\nexport const ADD_ITEM_USER = 'ADD_ITEM_USER';\nexport const RESERVE_ITEM = 'RESERVE_ITEM';\nexport const GET_USER_POST = 'GET_USER_POST';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\n","import * as MessageTypes from './MessageTypes';\nimport { usersRef } from './firebase';\nimport validator from 'validator';\n\nexport const checkLoginInfo = (username, password) => {\n    return new Promise((callback) => {\n        usersRef\n            .child(username)\n            .once('value')\n            .then((snapshot) => {\n                var userInfo = snapshot.val();\n                if (userInfo === null) {\n                    callback(MessageTypes.USER_NOT_EXIST);\n                } else if (userInfo.password !== password) {\n                    callback(MessageTypes.PASSWORD_WRONG);\n                } else {\n                    callback(MessageTypes.SUCCESS);\n                }\n            });\n    });\n};\n\nconst checkUsername = (username) => {\n    return new Promise((callback) => {\n        usersRef\n            .child(username)\n            .once('value')\n            .then((snapshot) => {\n                var userInfo = snapshot.val();\n                if (userInfo === null) {\n                    callback(MessageTypes.USER_NOT_EXIST);\n                } else {\n                    callback(MessageTypes.USER_EXISTS);\n                }\n            });\n    });\n};\n\nexport const doesUsernameExist = (username, callback) => {\n    checkUsername(username).then((message) => {\n        callback(message === MessageTypes.USER_NOT_EXIST);\n    });\n};\n\nexport const required = (val) =>\n    val &&\n    !validator.isEmpty(val, {\n        ignore_whitespace: true\n    });\n","export const SUCCESS = 'SUCCESS';\nexport const USER_EXISTS = 'USER_EXISTS';\nexport const USER_NOT_EXIST = 'USER_NOT_EXIST';\nexport const PASSWORD_WRONG = 'PASSWORD_WRONG';","import React, { Component } from 'react';\nimport { Button, ModalHeader, Modal, ModalBody, Label, Col, Row } from 'reactstrap';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\nimport { StoreUserInfo } from '../redux/ActionCreators';\nimport { connect } from 'react-redux';\nimport validator from 'validator';\nimport { required, doesUsernameExist } from '../shared/validators';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(values) {\n        this.toggle();\n        this.props.StoreUserInfo(values.name, values.username, values.password, values.email, values.tel);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button block className=\"item-button\" onClick={this.toggle} color=\"secondary\">\n                    Register\n                </Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"register\" onSubmit={(values) => this.onSubmit(values)}>\n                            {/* <Row>\n                                <Col xs={{size: 4, offset: 3}}>\n                                    <h1 className=\"justify-content-center align-self-center\">\n                                        <strong>BruinMart</strong>\n                                    </h1>\n                                </Col>\n                            </Row> */}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"name\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-id-card-o fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.text\n                                        model=\".name\"\n                                        id=\"name\"\n                                        name=\"name\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"username\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-user fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.text\n                                        model=\".username\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        placeholder=\"Username\"\n                                        className=\"form-control\"\n                                        asyncValidators={{\n                                            doesUsernameExist\n                                        }}\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".username\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            doesUsernameExist: 'Username already exist in the database. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"password\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-lock fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.password\n                                        model=\".password\"\n                                        id=\"password\"\n                                        name=\"password\"\n                                        placeholder=\"Password\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".password\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-envelope-o fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.text\n                                        model=\".email\"\n                                        id=\"email\"\n                                        name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isEmail: (val) => val && validator.isEmail(val)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isEmail: \"Wrong format. Email's format is ab@cd.ef\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"tel\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-phone fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={9}>\n                                    <Control.text\n                                        model=\".tel\"\n                                        id=\"tel\"\n                                        name=\"tel\"\n                                        placeholder=\"tel\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isMobilePhone: (val) => val && validator.isMobilePhone(val)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".tel\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isMobilePhone: \"Phone number's format is wrong. Please use all numbers.\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={{ size: 4, offset: 7 }}>\n                                    <Button block type=\"submit\" value=\"submit\" color=\"primary\">\n                                        Register\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    resetRegisterForm: () => {\n        dispatch(actions.reset('register'));\n    },\n    StoreUserInfo: (name, username, password, email, phone) => {\n        dispatch(StoreUserInfo(name, username, password, email, phone));\n    }\n});\n\nexport default connect(\n    (state) => {\n        return {};\n    },\n    mapDispatchToProps\n)(Register);\n","import React, { Component } from 'react';\nimport { Button, ModalHeader, Modal, ModalBody, Label, Row, Col } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { NavLink } from 'react-router-dom';\nimport Register from './RegisterComponent';\nimport { required } from '../shared/validators';\n\nconst isLoginValid = () => true;\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modal: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(values) {\n        this.props.fetchUserInfo(values.username, values.password);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n        const button =\n            this.props.isSideBar !== undefined ? (\n                <NavLink className=\"nav-link\" to=\"/home\" onClick={this.toggle}>\n                    <h4>Please Login</h4>\n                </NavLink>\n            ) : (\n                <Button style={{ background: 'transparent' }} onClick={this.toggle}>\n                    <span className=\"fa fa-sign-in fa-lg fa-fw\" />\n                </Button>\n            );\n        return (\n            <div className=\"container\">\n                {button}\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"login\" onSubmit={(values) => this.onSubmit(values)}>\n                            {/* <Row>\n                                <Col xs={{size: 4, offset: 3}}>\n                                    <h1 className=\"justify-content-center align-self-center\">\n                                        <strong>BruinMart</strong>\n                                    </h1>\n                                </Col>\n                            </Row> */}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"username\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-user fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={8}>\n                                    <Control.text\n                                        model=\".username\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        placeholder=\"Username\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isLoginValid\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".username\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isLoginValid: 'Username does not exist. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"password\" xs={{ size: 1, offset: 1 }}>\n                                    <span className=\"fa fa-lock fa-lg fa-fw\" />\n                                </Label>\n                                <Col xs={8}>\n                                    <Control.password\n                                        model=\".password\"\n                                        id=\"password\"\n                                        name=\"password\"\n                                        placeholder=\"Password\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isLoginValid\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".password\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isLoginValid: 'Password is incorrect. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xl={{ size: 3, offset: 2 }}>\n                                    <Register />\n                                </Col>\n                                <Col xl={{ size: 3, offset: 2 }}>\n                                    <Button block className=\"item-button\" value=\"submit\" color=\"primary\">\n                                        Login\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport '../SearchInput.css';\n\nclass SearchComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.filterResults(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"component-search-input\">\n                <div>\n                    <input placeholder=\"Search Here\" style={{ color: 'white' }} onChange={this.handleChange} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchComponent;\n","import React, { Component, Fragment } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Button } from 'reactstrap';\n\nclass ImageUpload extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            files: []\n        };\n\n        this.deleteFile = this.deleteFile.bind(this);\n        this.onPreviewDrop = this.onPreviewDrop.bind(this);\n    }\n\n    handleCheck(val) {\n        return this.state.files.some(item => val.name === item.name);\n    }\n\n    onPreviewDrop = (files) => {\n        var reader = new FileReader();\n        reader.readAsDataURL(files[0]);\n        reader.onloadend=()=>{\n            const curPath = reader.result;\n            files[0].preview=curPath;\n            if(this.handleCheck(files[0])){\n                alert(\"Please do not upload the same image twice!\");\n            }\n            else{\n                this.setState({\n                    files: this.state.files.concat(files[0])\n                });\n            }\n        }\n    };\n\n    deleteFile = (file)=>{\n        this.setState({\n            files: this.state.files.filter(el => el!==file )\n        });\n    }\n\n    render() {\n        const previewStyle = {\n            display: 'inline',\n            width: 100,\n            height: 100\n        };\n\n        return (\n            <>\n                <Dropzone className=\"dropzone\" accept=\"image/*\" onDrop={this.onPreviewDrop}>\n                    <div className=\"upload-box\">Drag your image here or click the box to browse your local files.</div>\n                </Dropzone>\n                {this.state.files.length > 0 && (\n                    <Fragment>\n                        <h4>Uploaded Pictures</h4>\n                        {this.state.files.map((file,i) => (\n                            <div key={i}>\n                            <img alt={file.name} key={file.preview} src={file.preview} style={previewStyle} />\n                            {file.name}{' '}\n                            <Button value=\"delete\" onClick={()=>this.deleteFile(file)}>delete</Button>\n                            </div>\n                        ))}\n                        {console.log(this.state.files)}\n                    </Fragment>\n                )}\n            </>\n        );\n    }\n}\n\nexport default ImageUpload;\n","import React from 'react';\nimport { Button, Label, FormText, Modal, ModalHeader, ModalBody, Col, Row } from 'reactstrap';\nimport ImageUpload from './ImageUploadComponent';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => !val || val.length >= len;\nconst isNumber = (val) => !isNaN(Number(val));\nconst checked = (val) => val && val === true;\nclass NewPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    handleSubmit(values) {\n        this.props.resetNewPostForm();\n        this.props.postItem({\n            name: values.itemName,\n            price: parseInt(values.itemPrice),\n            picture:\n                'https://s7d4.scene7.com/is/image/roomandboard/?layer=0&size=498,400&scl=1&src=964101_wood_W&layer=comp&$prodzoom0$',\n            reserved: false,\n            seller: this.props.users.userInfo.name,\n            time: new Date().toISOString(),\n            detail: values.itemDes === '' ? 'No more details provided' : values.itemDes,\n            username: this.props.users.username\n        });\n        this.toggleModal();\n    }\n\n    render() {\n        return (\n            <div>\n                <Button style={{ background: 'transparent' }} onClick={this.toggleModal}>\n                    <span className=\"fa fa-plus fa-lg fa-fw\" />\n                </Button>\n                <Modal className=\"modal-lg\" isOpen={this.state.modal} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>New Post</ModalHeader>\n                    <ModalBody>\n                        <Form model=\"newPost\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".itemName\" md={1}>\n                                    <b>Name</b>\n                                </Label>\n                                <Col md={{ size: 5, offset: 1 }}>\n                                    <Control.text\n                                        model=\".itemName\"\n                                        id=\"itemName\"\n                                        name=\"itemName\"\n                                        placeholder=\"Enter the name of the item you want to sell\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".itemName\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            minLength: 'Must be greater than 2 characters. ',\n                                            maxLength: 'Must be 15 characters or less. '\n                                        }}\n                                    />\n                                </Col>\n                                <Label htmlFor=\".itemPrice\" md={1}>\n                                    <b>Price</b>\n                                </Label>\n                                {/* <Col md={0.3}><span className=\"fa fa-dollar fa-lg fa-fw\" /></Col> */}\n                                <Col md={3}>\n                                    <Control.text\n                                        model=\".itemPrice\"\n                                        id=\"itemPrice\"\n                                        name=\"itemPrice\"\n                                        placeholder=\"Enter your price in US dollars\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".itemPrice\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            isNumber: 'Has to be a number. '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".itemDes\" md={2}>\n                                    <b>Item Description</b>\n                                </Label>\n                                <Col md={9}>\n                                    <Control.textarea\n                                        model=\".itemDes\"\n                                        id=\"itemDes\"\n                                        name=\"itemDes\"\n                                        placeholder=\"Enter a few lines to describe your item and outline anything potential buyers may need to know\"\n                                        className=\"form-control\"\n                                        rows=\"4\"\n                                    />\n                                </Col>\n                            </Row>\n                            {/* <FormGroup>\n          <Label htmlFor=\"exampleSelectMulti\">Select Multiple</Label>\n          <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple>\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </Input>\n        </FormGroup> */}\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\".pictures\" md={2}>\n                                    <b>Pictures</b>\n                                </Label>\n                                {/* <Input type=\"file\" name=\"file\" id=\"exampleFile\" /> */}\n                                <Col md={9}>\n                                    <FormText color=\"muted\">Upload a picture for your item here.</FormText>\n                                    <ImageUpload name=\"itemPic\" id=\"itemPic\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            {/* <FormGroup tag=\"fieldset\">\n          <legend>Radio Buttons</legend>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Option one is this and that—be sure to include why it's great\n            </Label>\n          </FormGroup>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Option two can be something else and selecting it will deselect option one\n            </Label>\n          </FormGroup>\n          <FormGroup check disabled>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" disabled />{' '}\n              Option three is disabled\n            </Label>\n          </FormGroup>\n        </FormGroup> */}\n                            <Row className=\"form-group\">\n                                <Col md={{ offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check md={9}>\n                                            <Control.checkbox\n                                                model=\".agreeTerms\"\n                                                name=\"agreeTerms\"\n                                                className=\"form-check-input\"\n                                                validators={{\n                                                    checked\n                                                }}\n                                            />{' '}\n                                            I understand that my information will only be provided to any potential\n                                            buyers after they have reserved my item.\n                                        </Label>\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".agreeTerms\"\n                                            show=\"touched\"\n                                            messages={{\n                                                checked: 'You need to agree. '\n                                            }}\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 3, offset: 2 }}>\n                                    <Button block type=\"submit\" value=\"submit\" color=\"primary\">\n                                        Post\n                                    </Button>\n                                </Col>\n                                <Col md={{ size: 3, offset: 3 }}>\n                                    <Button block color=\"secondary\" onClick={this.toggleModal}>\n                                        Cancel\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default NewPost;\n","import React, { Component } from 'react';\nimport Login from './LoginComponent';\nimport SearchComponent from './SearchComponent';\nimport NewPostModal from './NewPostComponent';\nimport { Navbar, Nav, NavbarToggler, NavItem } from 'reactstrap';\n\nfunction RenderButton(resetNewPostForm, postItem, fetchUserInfo, users) {\n    if (users.isLoggedIn) {\n        return <NewPostModal resetNewPostForm={resetNewPostForm} postItem={postItem} users={users} />;\n    } else {\n        return <Login fetchUserInfo={fetchUserInfo} loginError={users.userInfo.loginError} />;\n    }\n}\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.toggleSideNav = this.props.toggleSideNav.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar dark fixed=\"top\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleSideNav} />\n\n                        <Nav className=\"mx-auto col-6 col-lg-8\" navbar>\n                            <NavItem>\n                                <SearchComponent\n                                    filterResults={this.props.filterResults}\n                                    fetchItems={this.props.fetchItems}\n                                />\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"col-2\" navbar>\n                            <NavItem>\n                                {RenderButton(\n                                    this.props.resetNewPostForm,\n                                    this.props.postItem,\n                                    this.props.fetchUserInfo,\n                                    this.props.users\n                                )}\n                            </NavItem>\n                        </Nav>\n\n                        {/* <Nav className=\"md-mx-auto\">\n                                <NavItem>\n                                    <NavLink className=\"nav-link nav-buttons\" to=\"/home\">\n                                        <span className=\"fa fa-shopping-bag fa-lg fa-fw\" />\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link nav-buttons\" to=\"/settings\">\n                                        <span className=\"fa fa-user fa-lg fa-fw\" />\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link nav-buttons\" to=\"/newpost\">\n                                        <span className=\"fa fa-plus-square-o fa-lg fa-fw\" />\n                                    </NavLink>\n                                </NavItem>\n                            </Nav> */}\n                    </div>\n                </Navbar>\n            </>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavbarBrand, Nav, NavItem } from 'reactstrap';\nimport { slide as Menu } from 'react-burger-menu';\nimport { NavLink } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport Login from './LoginComponent';\n\nfunction RenderSidebar(isLoggedIn, name, fetchUserInfo, loginError, logoutUser) {\n    if (isLoggedIn) {\n        return (\n            <div>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        <h4>Hello, {name} </h4>\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/home\">\n                        <span className=\"fa fa-home fa-lg fa-fw\" /> Market\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/profile\">\n                        <span className=\"fa fa-user fa-lg fa-fw\" /> My Profile\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/posts\">\n                        <span className=\"fa fa-stack-exchange fa-lg fa-fw\" /> My Posts\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/saved\">\n                        <span className=\"fa fa-heart-o fa-lg fa-fw\" /> Saved Items\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/ongoing\">\n                        <span className=\"fa fa-exchange fa-lg fa-fw\" /> Ongoing\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/sold\">\n                        <span className=\"fa fa-shopping-bag fa-lg fa-fw\" /> Sold\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/settings\">\n                        <span className=\"fa fa-cog fa-lg fa-fw\" /> Settings\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/home\" onClick={logoutUser}>\n                        <span className=\"fa fa-sign-out fa-lg fa-fw\" /> Logout\n                    </NavLink>\n                </NavItem>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <NavItem>\n                    <Login fetchUserInfo={fetchUserInfo} loginError={loginError} isSideBar={true} />\n                </NavItem>\n            </div>\n        );\n    }\n}\n\nconst SideBar = (props) => {\n    const avatarSrc = props.isLoggedIn ? props.users.userInfo.avatar : 'assets/images/joe_bruin.jpg';\n    return (\n        // Pass on our props\n        <Menu {...props}>\n            <Nav navbar onClick={props.toggleSideNav}>\n                <NavbarBrand className=\"mr-auto col-2 col-sm-2\">\n                    <Avatar size={100} src={avatarSrc} round={true} />\n                </NavbarBrand>\n                {RenderSidebar(\n                    props.isLoggedIn,\n                    props.users.userInfo.name,\n                    props.fetchUserInfo,\n                    props.loginError,\n                    props.logoutUser\n                )}\n            </Nav>\n        </Menu>\n    );\n};\n\nexport default SideBar;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from 'react-avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { Col, Row } from 'reactstrap';\n\nvar divStyle = {\n    background: 'white',\n    padding: '0px',\n    margin: '0px'\n};\n\nfunction RenderListItem({ item }) {\n    const reserved = item.reserved.isReserved ? `Reserved by ${item.reserved.name}` : 'Not Reserved';\n    const phone = item.reserved.isReserved ? (\n        <Button href={`tel:${item.reserved.tel}`}>\n            <span className=\"fa fa-phone fa-fw\" /> {item.reserved.tel}\n        </Button>\n    ) : (\n        <div />\n    );\n    const email = item.reserved.isReserved ? (\n        <Button href={`mailto:${item.reserved.email}`} style={{'text-transform': 'none'}}>\n            <span className=\"fa fa-envelope-o fa-fw\" /> {item.reserved.email}\n        </Button>\n    ) : (\n        <div />\n    );\n    var time = item.time;\n    time = time.slice(0, 10);\n    return (\n        <ListItem alignItems=\"flex-start\" style={{ height: 200 }}>\n            <ListItemAvatar>\n                <Avatar alt=\"Remy Sharp\" src={item.picture} size=\"150\" />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <Typography component=\"span\" color=\"textPrimary\" variant=\"display1\">\n                        {item.name}\n                    </Typography>\n                }\n                secondary={\n                    <React.Fragment>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"subtitle1\">\n                            <Row>\n                                <Col xs={4}>{reserved}</Col>\n                                <Col xs={{ size: 3, offset: 1 }}>{phone}</Col>\n                                <Col xs={{ size: 3 }}>{email}</Col>\n                            </Row>\n                        </Typography>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"body2\">\n                            {time}\n                        </Typography>\n                        <Typography component=\"span\" color=\"textPrimary\" variant=\"body2\">\n                            Price: ${item.price}\n                        </Typography>\n                        Description: {item.detail}\n                    </React.Fragment>\n                }\n            />\n        </ListItem>\n    );\n}\n\nfunction PostList(props) {\n    if (!props.isLoggedIn) {\n        return (\n            <div className=\"container start-of-home\">\n                <div className=\"col-12\">\n                    <h3>Please Login First</h3>\n                    <hr />\n                </div>\n            </div>\n        );\n    }\n    var arr = [];\n    for (var key in props.posts) {\n        if (props.posts.hasOwnProperty(key)) {\n            arr.push(props.posts[key]);\n        }\n    }\n    const filterCriterion =\n        props.renderOngoing === true\n            ? (item) => item.reserved.isReserved && arr.indexOf(item.id) >= 0\n            : (item) => arr.indexOf(item.id) >= 0;\n    const sellItems = props.sellItems.filter(filterCriterion).map((item) => {\n        return (\n            <div key={item.id} className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderListItem item={item} />\n                </div>\n            </div>\n        );\n    });\n\n    const title = props.renderOngoing === true ? 'My Ongoing Posts' : 'My Posts';\n\n    return (\n        <div className=\"container start-of-home\">\n            <div className=\"col-12\">\n                <h3>{title}</h3>\n                <hr />\n            </div>\n            <div style={divStyle}>\n                <List>{sellItems}</List>\n            </div>\n        </div>\n    );\n}\n\nexport default PostList;\n","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Profile from './ProfileComponent';\nimport Header from './HeaderComponent';\nimport SideBar from './SideBarComponent';\nimport PostList from './PostListComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { filterResults, fetchItems, postItem, fetchUserInfo, reserveItem, logoutUser } from '../redux/ActionCreators';\nimport { checkLoginInfo } from '../shared/validators';\nimport * as MessageTypes from '../shared/MessageTypes';\nimport { actions } from 'react-redux-form';\n\nimport '../style.css';\n\nconst mapStateToProps = (state) => {\n    return {\n        sellItems: state.sellItems,\n        users: state.users,\n        loginError: state.users.error\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    postItem: (item) => dispatch(postItem(item)),\n    logoutUser: () => {\n        dispatch(logoutUser());\n    },\n    filterResults: (searchText) => {\n        dispatch(filterResults(searchText));\n    },\n    fetchItems: () => {\n        dispatch(fetchItems());\n    },\n    resetNewPostForm: () => {\n        dispatch(actions.reset('newPost'));\n    },\n    reserveItem: (key, name, email, tel) => {\n        dispatch(reserveItem(key, name, email, tel));\n    },\n    resetLoginForm: () => {\n        dispatch(actions.reset('login'));\n    },\n    fetchUserInfo: (username, password) => {\n        dispatch(actions.setPending('login.username', true));\n        dispatch(actions.setPending('login.password', true));\n\n        checkLoginInfo(username, password).then((message) => {\n            let valid = {\n                username: true,\n                password: true\n            };\n            if (message === MessageTypes.SUCCESS) {\n                dispatch(fetchUserInfo(username));\n            } else if (message === MessageTypes.USER_NOT_EXIST) {\n                valid.username = false;\n            } else if (message === MessageTypes.PASSWORD_WRONG) {\n                valid.password = false;\n            }\n            dispatch(\n                actions.setValidity('login.username', {\n                    isLoginValid: valid.username\n                })\n            );\n            dispatch(\n                actions.setValidity('login.password', {\n                    isLoginValid: valid.password\n                })\n            );\n            dispatch(actions.setPending('login.username', false));\n            dispatch(actions.setPending('login.password', false));\n        });\n    }\n});\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: false,\n            isSideNavOpen: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleSideNav = this.toggleSideNav.bind(this);\n        this.handleStateChange = this.handleStateChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.fetchItems();\n    }\n\n    handleStateChange(state) {\n        this.setState({\n            isSideNavOpen: state.isOpen\n        });\n    }\n\n    toggleSideNav() {\n        this.setState({\n            isSideNavOpen: !this.state.isSideNavOpen\n        });\n    }\n\n    handleSubmit(event) {\n        this.setState({\n            loggedIn: true\n        });\n        event.preventDefault();\n    }\n\n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    sellItems={this.props.sellItems.sellItems}\n                    reserveItem={this.props.reserveItem}\n                    users={this.props.users}\n                />\n            );\n        };\n\n        const PostPage = () => {\n            return (\n                <PostList\n                    sellItems={this.props.sellItems.sellItems}\n                    posts={this.props.users.userInfo.posts}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                />\n            );\n        };\n\n        const ProfilePage = () => {\n            return <Profile userInfo={this.props.users.userInfo}\n                            StoreUserInfo={this.props.StoreUserInfo} />;\n        };\n\n        const OngoingPage = () => {\n            return (\n                <PostList\n                    sellItems={this.props.sellItems.sellItems}\n                    posts={this.props.users.userInfo.posts}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                    renderOngoing={true}\n                />\n            );\n        };\n\n        return (\n            <div id=\"App\">\n                <SideBar\n                    noOverlay\n                    users={this.props.users}\n                    pageWrapId={'page-wrapper'}\n                    outerContainerId={'App'}\n                    isOpen={this.state.isSideNavOpen}\n                    onStateChange={(state) => this.handleStateChange(state)}\n                    toggleSideNav={this.toggleSideNav}\n                    isLoggedIn={this.props.users.isLoggedIn}\n                    fetchUserInfo={this.props.fetchUserInfo}\n                    logoutUser={this.props.logoutUser}\n                />\n                <div id=\"page-wrapper\">\n                    <Header\n                        filterResults={this.props.filterResults}\n                        fetchItems={this.props.fetchItems}\n                        toggleSideNav={this.toggleSideNav}\n                        resetNewPostForm={this.props.resetNewPostForm}\n                        postItem={this.props.postItem}\n                        isLoggedIn={this.props.users.isLoggedIn}\n                        fetchUserInfo={this.props.fetchUserInfo}\n                        loginError={this.props.loginError}\n                        users={this.props.users}\n                    />\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route path=\"/profile\" component={ProfilePage} />\n                        <Route path=\"/ongoing\" component={OngoingPage} />\n                        <Route path=\"/posts\" component={PostPage} />\n                        <Redirect to=\"/\" />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Main)\n);\n","import * as ActionTypes from './ActionTypes';\n\nexport const sellItems = (\n    state = {\n        isLoading: false,\n        sellItems: [],\n        err: null,\n        origSellItems: []\n    },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.RESERVE_ITEM:\n            console.log(action.payload);\n            const key = action.payload.key;\n            for (var i = 0; i < state.sellItems.length; i++) {\n                if (state.sellItems[i]['id'] === key) {\n                    state.sellItems[i]['reserved'] = action.payload.reserved;\n                    break;\n                }\n            }\n            return state;\n        case ActionTypes.FILTER:\n            var searchText = action.payload.searchText;\n            return {\n                ...state,\n                isLoading: false,\n                err: null,\n                sellItems: state.origSellItems\n                    .filter((item) => {\n                        if (item.name.toLowerCase().includes(searchText.toLowerCase())) {\n                            return true;\n                        }\n                        if (item.keywords && item.keywords.includes(searchText)) {\n                            return true;\n                        }\n                        return false;\n                    })\n                    .slice(0, action.payload.maxResults)\n            };\n        case ActionTypes.ADD_ITEM:\n            return {\n                ...state,\n                sellItems: state.sellItems.concat(action.payload),\n                origSellItems: state.origSellItems.concat(action.payload)\n            };\n        case ActionTypes.ADD_ITEMS:\n            return { ...state, isLoading: false, err: null, sellItems: action.payload, origSellItems: action.payload };\n        case ActionTypes.ITEMS_LOADING:\n            return { ...state, isLoading: true, err: null, sellItems: [], origSellItems: [] };\n        case ActionTypes.ITEMS_FAILED:\n            return { ...state, isLoading: false, err: action.payload, sellItems: [], origSellItems: [] };\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Users = (\n    state = {\n        isLoggedIn: false,\n        username: '',\n        userInfo: [],\n        error: null\n    },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.LOG_IN:\n            return {\n                ...state,\n                isLoggedIn: true,\n                username: action.username,\n                userInfo: action.userInfo,\n                error: null\n            };\n        case ActionTypes.LOG_OUT:\n            return {\n                ...state,\n                isLoggedIn: false,\n                username: '',\n                userInfo: [],\n                error: null\n            };\n        case ActionTypes.ADD_ITEM_USER:\n            return {\n                ...state,\n                userInfo: {\n                    ...state.userInfo,\n                    posts: state.userInfo.posts.concat(action.payload)\n                }\n            };\n        case ActionTypes.SIGN_UP:\n            return {\n                ...state,\n                isLoggedIn: true,\n                username: action.username,\n                password: action.password\n            };\n        case ActionTypes.LOG_IN_FAILED:\n            return {\n                ...state,\n                isLoggedIn: false,\n                username: '',\n                userInfo: [],\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n};\n","export const InitialLogin = {\n    username: '',\n    password: ''\n};\n\nexport const InitialRegister = {\n    name: '',\n    username: '',\n    password: '',\n    email: '',\n    phone: ''\n};\n\nexport const InitialPost = {\n    itemName: '',\n    itemPrice: '',\n    itemDes: '',\n    pictures: '',\n    agreeTerms: false\n};\n\nexport const InitialProfile = {\n    email: '',\n    tel: ''\n}\n\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <div>\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { sellItems } from './items';\nimport { Users } from './users';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialLogin, InitialRegister, InitialPost, InitialProfile } from './InitStates';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            sellItems: sellItems,\n            users: Users,\n            ...createForms({\n                newPost: InitialPost,\n                login: InitialLogin,\n                register: InitialRegister,\n                profile: InitialProfile\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}